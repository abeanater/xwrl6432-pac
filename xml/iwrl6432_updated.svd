<?xml version='1.0' encoding='utf-8'?>
<device>
  <!-- Created by tixml2svd; https://github.com/dhoove/tixml2svd -->
  <name>IWRL6432</name>
  <version>1.0</version>
  <description>IWRL6432 Radar</description>
  <cpu>
    <name>CM4</name>
    <revision>1.0</revision>
    <endian>other</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <size>32</size>
  <access>read-write</access>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>GPADC_CTRL</name>
      <baseAddress>0x50F7FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>92</size>
        <usage>registers</usage>
      </addressBlock>
      <description>GPADC_CTRL</description>
      <registers>
        <register>
          <name>REG0</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>gpadc modes and enable</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:17] TI reserved</description>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>GPADC_DEBUG_MODE_ENABLE</name>
              <description>[16:16] 1:GPADC raw samples will be collected in the Output RAM in IFM mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[15:12] TI reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>GPADC2ADCBUF_PATH_EN</name>
              <description>[11:9] TI reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>GPADC_FSM_CLK_ENABLE</name>
              <description>[8:8] Enable the clock to gpadc fsm</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:2] TI reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DCBIST_MODE</name>
              <description>[1:0] 0:Disable,1:IFM Mode enable ,2:CTM mode enable</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>gpadc start trigger for Inter frame mode</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:25] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>GPADC_START_BYP_VAL</name>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU3</name>
              <description>[23:17] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>GPADC_FSM_BYPASS</name>
              <description>[16:16] 1:Bypass gpadc control .When bypassed start =  gpadc_start_byp_val config_val =  config_value_ifm param_val = param_val_ifm</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[15:9] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>GPADC_INIT</name>
              <description>[8:8] Resets the FSM and clears the data RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:1] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>GPADC_TRIGGER</name>
              <description>[0:0] Generates a single cycle pulse to trigger the IFM mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG2</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>gpadc config for IFM</description>
          <fields>
            <field>
              <name>CONFIG_VALUE_IFM</name>
              <description>[31:0] Configuration value to be passed to analog in IFM mode</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG3</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>gpadc param, skip samples and collect samples for IFM</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>9</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>SKIP_SAMPLES_IFM</name>
              <description>[22:16] number of GPADC clocks  to skip after trigger . Number of samples to skip = skip_samples_ifm[3:0]x(2skip_samples_ifm[6:4])</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>COLLECT_SAMPLES_IFM</name>
              <description>[15:8] number of GPADC readings  to collect</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>PARAM_VAL_IFM</name>
              <description>[7:0] Param value to be passed to analog in IFM mode(after one hot encoding)</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG4</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Base address for Chirp profile 0 in instruction packet RAM</description>
          <fields>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP3</name>
              <description>[31:24] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP2</name>
              <description>[23:16] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP1</name>
              <description>[15:8] (End-Address + 1) of instruction-ram in  CTM mode</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP0</name>
              <description>[7:0] Start Address of instruction-ram in  CTM mode</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG5</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Base address for Chirp profile 1 in instruction packet RAM</description>
          <fields>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP7</name>
              <description>[31:24] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP6</name>
              <description>[23:16] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP5</name>
              <description>[15:8] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP4</name>
              <description>[7:0] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG6</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Base address for Chirp profile 2 in instruction packet RAM</description>
          <fields>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP11</name>
              <description>[31:24] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP10</name>
              <description>[23:16] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP9</name>
              <description>[15:8] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP8</name>
              <description>[7:0] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG7</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>Base address for Chirp profile 3 in instruction packet RAM</description>
          <fields>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP15</name>
              <description>[31:24] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP14</name>
              <description>[23:16] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP13</name>
              <description>[15:8] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>PKT_RAM_BASE_ADDR_CP12</name>
              <description>[7:0] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG8</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>REG8</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>GPADC_CLK_ENABLE</name>
              <description>[8:8] TI reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GPADC_CLK_DIV</name>
              <description>[7:0] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG9</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>REG9</description>
          <fields>
            <field>
              <name>PARAM_NOT_USED_TX_ENA1_OFF</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG10</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>REG10</description>
          <fields>
            <field>
              <name>PARAM_NOT_USED_TX_ENA2_OFF</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG11</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>REG11</description>
          <fields>
            <field>
              <name>PARAM_NOT_USED_TX_ENA3_OFF</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG12</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>REG12</description>
          <fields>
            <field>
              <name>DRAM_REPAIRED_BIT</name>
              <description>[31:24] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DRAM_ECC_ERR_ADDR</name>
              <description>[23:16] TI reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[15:9] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>DRAM_ECC_ERR_CLR</name>
              <description>[8:8] TI reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:1] TI reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DRAM_ECC_ENABLE</name>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG13</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>REG13</description>
          <fields>
            <field>
              <name>SPARE_WR2</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG14</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Sum of GP ADC readings</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:20] TI reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>SUM_IFM</name>
              <description>[19:0] Sum of GP ADC readings</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG15</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>Min and Max of GP ADC readings</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:26] TI reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>MAX_GPADC</name>
              <description>[25:16] Max of GPADC readings</description>
              <bitWidth>10</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[15:10] TI reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>MIN_GPADC</name>
              <description>[9:0] Min of GPADC readings</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG16</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>REG16</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:1] TI reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>GPADC_MEM_INIT_DONE_STAT</name>
              <description>[0:0] Status for Data Mem init done.Used for FW polling .Will read '0' when init process is under progress</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG17</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>REG17</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:1] TI reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>GPADC_IFM_DONE_STATUS</name>
              <description>[0:0] Test completion status in IFM mode.Used for FW polling</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG18</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>REG18</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:1] TI reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>GPADC_IFM_DONE_CLR</name>
              <description>[0:0] Clear "ifm_done_status"</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG19</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>REG19</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] TI reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GPADC_SAMPLES_FRAME</name>
              <description>[15:0] Total number of GPADC samples collected in a frame</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG20</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>REG20</description>
          <fields>
            <field>
              <name>SPARE_RD1</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG21</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>REG21</description>
          <fields>
            <field>
              <name>SPARE_RD2</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REG22</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>REG22</description>
          <fields>
            <field>
              <name>SPARE_WR1</name>
              <description>[31:0] TI reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_LIN</name>
      <baseAddress>0x53000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>148</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_LIN</description>
      <registers>
        <register>
          <name>SCIGCR0</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>The SCIGCR0 register defines the module reset.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:1] Reserved</description>
              <bitWidth>15</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESET</name>
              <description>[0:0] This bit resets the SCI/LIN module.  This bit is effective in LIN or SCI-compatible mode.. This bit affects the reset state of the SCI/LIN module.  Writable Only in privilege mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIGCR1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>The SCIGCR1 register defines the frame format, protocol, and communication mode used by the SCI.</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>TXENA</name>
              <description>[25:25] Transmit enable. This bit is effective in LIN and SCI modes. Data is transferred from SCITD or the TDy (with y=0, 1,...7) buffers in LIN mode to the SCITXSHF shift out register only when the TXENA bit is set.  Note: Data written to SCITD or the transmit multi-buffer before TXENA is set is not transmitted. If TXENA is cleared while transmission is ongoing, the data previously written to SCITD is sent (including the checksum byte in LIN mode).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>RXENA</name>
              <description>[24:24] Receive enable. This bit is effective in LIN or SCI-compatible mode. RXENA allows or prevents the transfer of data from SCIRXSHF to SCIRD or the receive multibuffers.  Note: Clearing RXENA stops received characters from being transferred into the receive buffer or multi-buffers, prevents the RX status flags (see Table 7) from being updated by receive data, and inhibits both receive and error interrupts. However, the shift register continues to assemble data regardless of the state of RXENA.  Note: If RXENA is cleared before the time the reception of a frame is complete, the data from the frame is not transferred into the receive buffer.  Note: If RXENA is set before the time the reception of a frame is complete, the data from the frame is transferred into the receive buffer. If RXENA is set while SCIRXSHF is in the process of assembling a frame, the status flags are not guaranteed to be accurate for that frame. To ensure that the status flags correctly reflect what was detected on the bus during a particular frame, RXENA should be set before the detection of that frame</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[23:18] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CONT</name>
              <description>[17:17] Continue on suspend. This bit has an effect only when a program is being debugged with an emulator, and it determines how the SCI/LIN operates when the program is suspended. This bit affects the LIN counters. When this bit is set, the counters are not stopped during debug. When this bit is cleared, the counters are stopped during debug.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>[16:16] Loopback bit. This bit is effective in LIN or SCI-compatible mode. The self-checking option for the SCI/LIN can be selected with this bit. If the LINTX and LINRX pins are configured with SCI/LIN functionality, then the LINTX pin is internally connected to the LINRX pin. Externally, during loop back operation, the LINTX pin outputs a high value and the LINRX pin is in a high-impedance state. If this bit value is changed while the SCI/LIN is transmitting or receiving data, errors may result.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>STOPEXTFRAME</name>
              <description>[13:13] Stop extended frame communication. This bit is effective in LIN mode only. This bit can be written only during extended frame communication. When the extended frame communication is stopped, this bit is cleared automatically.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>HGENCTRL</name>
              <description>[12:12] HGEN control bit. This bit is effective in LIN mode only. This bit controls the type of mask filtering comparison.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CTYPE</name>
              <description>[11:11] Checksum type. This bit is effective in LIN mode only. This bit controls the type of checksum to be used: classic or enhanced.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MBUFMODE</name>
              <description>[10:10] Multibuffer mode. This bit is effective in LIN or SCI-compatible mode. This bit controls receive/transmit buffer usage, that is, whether the RX/TX multibuffers are used or a single register, RD0/TD0, is used.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>ADAPT</name>
              <description>[9:9] Adapt mode enable. This mode is effective in LIN mode only. This bit has an effect during the detection of the Sync Field. There are two LIN protocol bit rate modes that could be enabled with this bit according to the Node capability file definition: automatic or select. Software and network configuration will decide which of the previous two modes. When this bit is cleared, the LIN 2.0 protocol fixed bit rate should be used. If the ADAPT bit is set, a LIN slave node detecting the baudrate will compare it to the prescalers in BRSR register and update it if they are different. The BRSR register will be updated  with the new value. If this bit is not set there will be no adjustment to the BRSR register.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SLEEP</name>
              <description>[8:8] SCI sleep. SCI compatibility mode only. In a multiprocessor configuration, this bit controls the receive sleep function. Clearing this bit brings the SCI out of sleep mode.  The receiver still operates when the SLEEP bit is set; however, RXRDY is updated and SCIRD is loaded with new data only when an address frame is detected. The remaining receiver status flags are updated and an error interrupt is requested if the corresponding interrupt enable bit is set, regardless of the value of the SLEEP bit. In this way, if an error is detected on the receive data line while the SCI is asleep, software can promptly deal with the error condition. The SLEEP bit is not automatically cleared when an address byte is detected.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>SWnRST</name>
              <description>[7:7] Software reset (active low). This bit is effective in LIN or SCI-compatible mode. The SCI/LIN should only be configured while SWnRST = 0.  Only the following configuration bits can be changed in runtime (i.e., while SWnRESET = 1): - STOP EXT Frame (SCIGCR1[13]) - CC bit (SCIGCR2[17]) - SC bit (SCIGCR2[16])</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>LINMODE</name>
              <description>[6:6] LIN mode This bit controls the mode of operation of the module.  Writable Only in privilege mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLK_MASTER</name>
              <description>[5:5] SCI internal clock enable or LIN Master/Slave configuration. In the SCI mode, this bit enables the clock to the SCI module. In LIN mode, this bit determines whether a LIN node is a slave or master.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>STOP</name>
              <description>[4:4] SCI number of stop bits. This bit is effective in SCI-compatible mode only.  Note: The receiver checks for only one stop bit. However in idle-line mode, the receiver waits until the end of the second stop bit (if STOP = 1) to begin checking for an idle period.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[3:3] SCI parity odd/even selection. This bit is effective in SCI-compatible mode only. If the PARITY ENA bit (SCIGCR1.2) is set, PARITY designates odd or even parity. The parity bit is calculated based on the data bits in each frame and the address bit (in address-bit mode). The start and stop fields in the frame are not included in the parity calculation.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>PARITYENA</name>
              <description>[2:2] Parity enable. Enables or disables the parity function.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMINGMODE</name>
              <description>[1:1] SCI timing mode bit. This bit is effective in SCI-compatible mode only. It must be set to 1 when the SCI mode is used. This bit configures the SCI for asynchronous operation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COMMMODE</name>
              <description>[0:0] SCI/LIN communication mode bit. In compatibility mode, it selects the SCI communication mode. In LIN mode it selects length control option for ID-field bits ID4 and ID5.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIGCR2</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>The SCIGCR2 register is used to send or compare a checksum byte during extended frames, to generate a wakeup and for low-power mode control of the LIN module.</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:18] Reserved</description>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CC</name>
              <description>[17:17] Compare Checksum. This mode is effective in LIN mode only. This bit is used by the receiver for extended frames to trigger a checksum compare. The user will initiate this transaction by writing a one to this bit. In non multibuffer mode, once the CC bit is set, the checksum will be compared on the byte that is currently being received, expected to be the checkbyte. During Multi-buffer mode, following are the scenarios associated with the CC bit : -  If CC bit is set during the reception of the data, then the byte that is received after the reception of the programmed no. of data bytes indicated by SCIFORMAT[18:16], is treated as a checksum byte. - If CC bit is set during the IDLE period (i.e. during inter-frame space), then the next immediate byte will be treated as a checksum byte.  A CE will immediatly be flagged if there is a checksum error. This bit is automatically cleared once the checksum is successfully compared.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SC</name>
              <description>[16:16] Send Checksum This mode is effective in LIN mode only. This bit is used by the transmitter with extended frames to send a checkbyte. In non multibuffer mode the checkbyte will be sent after the current byte transmission. In multibuffer mode the checkbyte will be sent after the last byte count, indicated by the SCIFORMAT[18:16]).    This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:9] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>GENWU</name>
              <description>[8:8] Generate wakeup signal. This bit controls the generation of a wakeup signal, by transmitting the TDO buffer value. This bit is cleared on reception of a valid sync break.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[7:1] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>POWERDOWN</name>
              <description>[0:0] Power down. This bit is effective in LIN or SCI-compatible mode. When the powerdown bit is set, the SCI/LIN module attempts to enter local low-power mode. If the POWERDOWN bit is set while the receiver is actively receiving data and the wakeup interrupt is disabled, then the SCI/LIN will delay low-power mode from being entered until completion of reception. In LIN mode the user may set the POWERDOWN bit on Sleep Command reception or on idle bus detection (more than 4 seconds, i.e. 80,000 cycles at 20kHz)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINT</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>The SCISETINT register is used to enable the various interrupts available in the LIN module.</description>
          <fields>
            <field>
              <name>SETBEINT</name>
              <description>[31:31] Set bit error interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN module to generate an interrupt when there is a bit error.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>SETPBEINT</name>
              <description>[30:30] Set physical bus error interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN module to generate an interrupt when a physical bus error occurs.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>SETCEINT</name>
              <description>[29:29] Set checksum-error Interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN module to generate an interrupt when there is a checksum error.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>SETISFEINT</name>
              <description>[28:28] Set inconsistent-sync-field-error interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN module to generate an interrupt when there is an inconsistent sync field error.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>SETNREINT</name>
              <description>[27:27] Set no-response-error interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN module to generate an interrupt when a no-response error occurs.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SETFEINT</name>
              <description>[26:26] Set framing-error interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit enables the SCI/LIN module to generate an interrupt when a framing error occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SETOEINT</name>
              <description>[25:25] Set overrun-error interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit enables the SCI/LIN module to generate an interrupt when an overrun error occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SETPEINT</name>
              <description>[24:24] Set parity interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit enables the SCI/LIN module to generate an interrupt when a parity error occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA_ALL</name>
              <description>[18:18] Set receiver DMA for Address &amp; Data frames. This bit is effective in LIN or SCI-compatible mode. To enable RX DMA request for address and data frames this bit must be set. If it is cleared, RX interrupt request is generated for address frames and DMA requests are generated for data frames.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA</name>
              <description>[17:17] Set receiver DMA. This bit is effective in LIN or SCI-compatible mode. To enable DMA requests for the receiver this bit must be set. If it is cleared, interrupt requests are generated depending on SETRXINT.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SET_TX_DMA</name>
              <description>[16:16] Set transmit DMA. This bit is effective in LIN or SCI-compatible mode. To enable DMA requests for the transmitter, this bit must be set. If it is cleared, interrupt requests are generated depending on SETTXINT.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>SETIDINT</name>
              <description>[13:13] Set Identification interrupt. This bit is effective in LIN mode only. This bit is set to enable interrupt once a valid matching identifier is received.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[12:10] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SETRXINT</name>
              <description>[9:9] Set Receiver interrupt. Setting this bit enables the SCI/LIN to generate a receive interrupt after a frame has been completely received and the data is being transferred from SCIRXSHF to SCIRD.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SETTXINT</name>
              <description>[8:8] Set Transmitter interrupt. Setting this bit enables the SCI/LIN to generate a transmit interrupt as data is being transferred from SCITD to SCITXSHF and the TXRDY bit is being set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>SETTOA3WUSINT</name>
              <description>[7:7] Set Timeout After 3 Wakeup Signals interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN to generate an interrupt when there is a timeout after 3 wakeup signals have been sent.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>SETTOAWUSINT</name>
              <description>[6:6] Set Timeout After Wakeup Signal interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN to generate an interrupt when there is a timeout after one wakeup signal has been sent.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[5:5] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SETTIMEOUTINT</name>
              <description>[4:4] Set timeout interrupt. This bit is effective in LIN mode only. Setting this bit enables the SCI/LIN to generate an interrupt when no LIN bus activity (bus idle) occurs for at least 4 seconds.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[3:2] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SETWAKEUPINT</name>
              <description>[1:1] Set wake-up interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit enables the SCI/LIN to generate a wake-up interrupt and thereby exit low-power mode. The wake-up interrupt is asserted on falling edge of the wake-up pulse. If enabled, the wake-up interrupt is asserted when local low-power mode is requested while the receiver is busy or if a low level is detected on the SCIRX pin during low-power mode. Wake-up interrupt is not asserted upon a wakeup pulse if the module is not in power down mode.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SETBRKDTINT</name>
              <description>[0:0] Set break-detect interrupt. This bit is effective in SCI-compatible mode only. Setting this bit enables the SCI/LIN to generate an interrupt if a break condition is detected on the LINRX pin.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINT</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>The SCICLEARINT register is used to disable the enabled interrupts without accessing the SCISETINT register.</description>
          <fields>
            <field>
              <name>CLRBEINT</name>
              <description>[31:31] Clear Bit Error Interrupt. This bit is effective in LIN mode only. Setting this bit disables the bit error interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>CLRPBEINT</name>
              <description>[30:30] Clear Physical Bus Error Interrupt. This bit is effective in LIN mode only. Setting this bit disables the physical-bus error interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLRCEINT</name>
              <description>[29:29] Clear checksum-error Interrupt. This bit is effective in LIN mode only. Setting this bit disables the checksum-error interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>CLRISFEINT</name>
              <description>[28:28] Clear Inconsistent-Sync-Field-Error Interrupt. This bit is effective in LIN mode only. Setting this bit disables the ISFE interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>CLRNREINT</name>
              <description>[27:27] Clear No-Reponse-Error Interrupt. This bit is effective in LIN mode only. Setting this bit disables the no-response error interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLRFEINT</name>
              <description>[26:26] Clear Framing-Error Interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables framing-error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLROEINT</name>
              <description>[25:25] Clear Overrun-Error Interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the overrun interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLRPEINT</name>
              <description>[24:24] Clear Parity Interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the parity error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved5</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CLRRXDMA</name>
              <description>[17:17] Clear receiver DMA. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the receive DMA request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLRTXDMA</name>
              <description>[16:16] Clear transmit DMA. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the transmit DMA request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>CLRIDINT</name>
              <description>[13:13] Clear Identifier interrupt. This bit is effective in LIN mode only. Setting this bit disables the ID interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[12:10] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLRRXINT</name>
              <description>[9:9] Clear Receiver interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the receiver interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLRTXINT</name>
              <description>[8:8] Clear Transmitter interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the transmitter interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CLRTOA3WUSINT</name>
              <description>[7:7] Clear Timeout After 3 Wakeup Signals interrupt. This bit is effective in LIN mode only. Setting this bit disables the timeout after 3 wakeup signals interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>CLRTOAWUSINT</name>
              <description>[6:6] Clear Timeout After Wakeup Signal interrupt. This bit is effective in LIN mode only. Setting this bit disables the timeout after one wakeup signal interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[5:5] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CLRTIMEOUTINT</name>
              <description>[4:4] Clear Timeout interrupt. This bit is effective in LIN mode only. Setting this bit disables the timeout (LIN bus idle) interrupt.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[3:2] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLRWAKEUPINT</name>
              <description>[1:1] Clear Wake-up interrupt. This bit is effective in LIN or SCI-compatible mode. Setting this bit disables the wake-up interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLRBRKDTINT</name>
              <description>[0:0] Clear Break-detect interrupt. This bit is effective in SCI-compatible mode only. Setting this bit disables the Break-detect interrupt.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINTLVL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>The SCISETINTLVL register is used to map individual interrupt sources to the INT1 interrupt line.</description>
          <fields>
            <field>
              <name>SETBEINTLVL</name>
              <description>[31:31] Set Bit Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Bit Error interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>SETPBEINTLVL</name>
              <description>[30:30] Set Physical Bus Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Physical Bus Error interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>SETCEINTLVL</name>
              <description>[29:29] Set Checksum-error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Checksum-error interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>SETISFEINTLVL</name>
              <description>[28:28] Set Inconsistent-Sync-Field-Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Inconsistent-Sync-Field-Error interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>SETNREINTLVL</name>
              <description>[27:27] Set No-Reponse-Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the No-Response-Error interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SETFEINTLVL</name>
              <description>[26:26] Set Framing-Error interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Framing-Error interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SETOEINTLVL</name>
              <description>[25:25] Set Overrun-Error Interrupt Level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Overrun-Error interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SETPEINTLVL</name>
              <description>[24:24] Set Parity Error interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Parity error interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved6</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>Reserved5</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>SETIDINTLVL</name>
              <description>[13:13] Set ID interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the ID interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[12:10] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SETRXINTOVO</name>
              <description>[9:9] Set Receiver interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the receiver interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SETTXINTLVL</name>
              <description>[8:8] Set Transmitter interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the transmitter interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>SETTOA3WUSINTLVL</name>
              <description>[7:7] Set Timeout After 3 Wakeup Signals interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the timeout after 3 wakeup signals interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>SETTOAWUSINTLVL</name>
              <description>[6:6] Set Timeout After Wakeup Signal interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the the timeout after wakeup interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[5:5] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SETTIMEOUTINTLVL</name>
              <description>[4:4] Set Timeout interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the timeout interrupt level to the INT1 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[3:2] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SETWAKEUPINTLVL</name>
              <description>[1:1] Set Wake-up interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Wake-up interrupt level to the INT1 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SETBRKDTINTLVL</name>
              <description>[0:0] Set Break-detect interrupt level. This bit is effective in SCI-compatible mode only. Writing to this bit maps the Break-detect interrupt level to the INT1 line.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINTLVL</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>The SCICLEARINTLVL register is used to map individual interrupt sources to the INT0 line.</description>
          <fields>
            <field>
              <name>CLRBEINTLVL</name>
              <description>[31:31] Clear Bit Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Bit Error interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>CLRPBEINTLVL</name>
              <description>[30:30] Clear Physical Bus Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Physical Bus Error interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLRCEINTLVL</name>
              <description>[29:29] Clear Checksum-error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Checksum-error interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>CLRISFEINTLVL</name>
              <description>[28:28] Clear Inconsistent-Sync-Field-Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the Inconsistent-Sync-Field-Error interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>CLRNREINTLVL</name>
              <description>[27:27] Clear No-Reponse-Error interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the No-Response-Error interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLRFEINTLVL</name>
              <description>[26:26] Clear Framing-Error interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Framing-Error interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLROEINTLVL</name>
              <description>[25:25] Clear Overrun-Error Interrupt Level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Overrun-Error interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLRPEINTLVL</name>
              <description>[24:24] Clear Parity Error interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Parity Error interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved6</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>Reserved5</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>CLRIDINTLVL</name>
              <description>[13:13] Clear ID interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the ID interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[12:10] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLRRXINTLVL</name>
              <description>[9:9] Clear Receiver interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the receiver interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLRTXINTLVL</name>
              <description>[8:8] Clear Transmitter interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the transmitter interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CLRTOA3WUSINTLVL</name>
              <description>[7:7] Clear Timeout After 3 Wakeup Signals interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the timeout after 3 wakeup signals interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>CLRTOAWUSINTLVL</name>
              <description>[6:6] Clear Timeout After Wakeup Signal interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the the timeout after wakeup interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[5:5] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CLRTIMEOUTINTLVL</name>
              <description>[4:4] Clear Timeout interrupt level. This bit is effective in LIN mode only. Writing to this bit maps the timeout interrupt level to the INT0 line.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[3:2] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLRWAKEUPINTLVL</name>
              <description>[1:1] Clear Wake-up interrupt level. This bit is effective in LIN or SCI-compatible mode. Writing to this bit maps the Wake-up interrupt level to the INT0 line.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLRBRKDTINTLVL</name>
              <description>[0:0] Clear Break-detect interrupt level. This bit is effective in SCI-compatible mode only. Writing to this bit maps the Break-detect interrupt level to the INT0 line.  This field is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIFLR</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>The SCIFLR register indicates the current status of the various interrupt sources of the LIN module.</description>
          <fields>
            <field>
              <name>BE</name>
              <description>[31:31] Bit Error Flag. This bit is effective in LIN mode only. This bit is set when there has been a bit error. This is detected by the bit monitor in the internal bit monitor. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new sync break  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>PBE</name>
              <description>[30:30] Physical Bus Error Flag. This bit is effective in LIN mode only. This bit is set when there has been a physical bus error. This is detected by the bit monitor in TED. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new sync break  Note: thie PBE will ony be flagged if no sync break can be generated. (because of a bus shortage to VBAT) or if no sync break delimeter can be generated (because of a bus shortage to GND).  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CE</name>
              <description>[29:29] Checksum Error Flag.  This bit is effective in LIN mode only. This bit is set when there is checksum error detected by a receiving node. The type of checksum to be used depends on the SCIGCR1.CTYPE bit. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new sync break  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>ISFE</name>
              <description>[28:28] Inconsistent Sync Field Error Flag. This bit is effective in LIN mode only. This bit is set when there has been an inconsistent Sync Field error detected by the synchronizer during header reception. See the "Header Reception and Adaptive Baudrate" section for more information.  This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new sync break  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>NRE</name>
              <description>[27:27] No-Response Error Flag. This bit is effective in LIN mode only. This bit is set when there is no response to a masterΓÇÖs header completed within TFRAME_MAX. This timeout period is applied for message frames of unknown length (identifiers 0 to 61). This error is detected by the synchronizer of the module. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new sync break  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FE</name>
              <description>[26:26] Framing error flag. This bit is effective in LIN or SCI-compatible mode. This bit is set when an expected stop bit is not found. In SCI compatible mode, only the first stop bit is checked. The missing stop bit indicates that synchronization with the start bit has been lost and that the character is incorrectly framed. Detection of a framing error causes the SCI to generate an error interrupt if the RXERR INT ENA bit is set. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit - Reception of a new character (SCI-compatible mode), or frame (LIN mode) In multibuffer mode the frame is defined in the SCIFORMAT register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>OE</name>
              <description>[25:25] Overrun error flag. This bit is effective in LIN or SCI-compatible mode. This bit is set when the transfer of data from SCIRXSHF to SCIRD overwrites unread data already in SCIRD or the RDy buffers. Detection of an overrun error causes the LIN to generate an error interrupt if the SET OE INT bit is one. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>PE</name>
              <description>[24:24] Parity error flag. This bit is effective in LIN or SCI-compatible mode. This bit is set when a parity error is detected in the received data. In SCI address-bit mode, the parity is calculated on the data and address bit fields of the received frame. In idle-line mode, only the data is used to calculate parity. An error is generated when a character is received with a mismatch between the number of 1s and its parity bit. For more information on parity checking, see the "SCI Global Control Register (SCIGCR1)" description. If the parity function is disabled (that is, SCIGCR1.2 = 0), the PE flag is disabled and read as 0. Detection of a parity error causes the LIN to generate an error interrupt if the SET PE INT bit = 1.  This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Reception of a new charcter (SCI-compatible mode) or frame (LIN mode) - Writing a 1 to this bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[23:16] reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:15] reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>IDRXFLAG</name>
              <description>[14:14] Identifier On Receive Flag. This bit is effective in LIN mode only. This flag is set once an identifier is received with an RX match and no ID-parity error. See the "Message Filtering and Validation" section for more details. When this flag is set it indicates that a new valid identifier has been received on an RX match. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Reading the LINID register - Writing a 1 to this bit  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>IDTXFLAG</name>
              <description>[13:13] Identifier On Transmit Flag. This bit is effective in LIN mode only. This flag is set once an identifier is received with a TX match and no ID-parity error. See the "Message Filtering and Validation" section for more details. When this flag is set it indicates that a new valid identifier has been received on a TX match. This bit is cleared by:  - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - RESET bit (SCIGCR0.0) - Setting SWnRESET - System reset - Reading the LINID register - Writing a 1 to this bit   This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>RXWAKE</name>
              <description>[12:12] Receiver wakeup detect flag. This bit is effective in SCI-compatible mode only. The SCI sets this bit to indicate that the data currently in SCIRD is an address. This bit is cleared by: - RESET bit - Setting the SWnRESET bit (SCIGCR1.7) - System reset - Receipt of a data frame  This bit is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TXEMPTY</name>
              <description>[11:11] Transmitter Empty flag. The value of this flag indicates the contents of the transmitterΓÇÖs buffer register(s) (SCITD/TDy) and shift register (SCITXSHF). In multibuffer mode, this flag indicates the value of the TDx registers and shift register (SCITXSHF). In non multibuffer mode, this flag indicates the value of LINTD0 (byte) and shift register (SCITXSHF). This bit is set by:  - RESET bit (SCIGCR0.0) - Setting the SWnRESET bit (SCIGCR1.7) - System reset.   Note: This bit does not cause an interrupt request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TXWAKE</name>
              <description>[10:10] SCI transmitter wakeup method select. This bit is effective in SCI-compatible mode only. The TXWAKE bit controls whether the data in SCITD should be sent as an address or data frame using multiprocessor communication format. This bit is set to 1 or 0 by software before a byte is written to SCITD and is cleared by the SCI when data is transferred from SCITD to SCITXSHF or by a system reset. TXWAKE is not cleared by the SWnRESET bit (SCIGCR1.7).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>RXRDY</name>
              <description>[9:9] Receiver ready flag.  In SCI compatibility mode, the receiver sets this bit to indicate that the SCIRD contains new data and is ready to be read by the CPU. In LIN mode, RXRDY is set once a valid frame is received in multibuffer mode, a valid frame being a message frame received with no errors. In non multibuffer mode RXRDY is set for each received byte and will be set for the last byte of the frame if there are no errors. The SCI/LIN generates a receive interrupt when RXRDY flag bit is set if the interrupt-enable bit is set (SCISETINT.9). RXRDY is cleared by: - RESET bit (SCIGCR0.0) - Setting the SWnRESET - System reset - Writing a 1 to this bit - Reading SCIRD in while in SCI compatibility mode - Reading last data byte RDy of the response in LIN mode   Note: The RXRDY flag cannot be cleared by reading the corresponding interrupt offset in the SCIINTVECT0/1 register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TXRDY</name>
              <description>[8:8] Transmitter buffer register ready flag. When set, this bit indicates that the transmit buffer(s) register (SCITD in compatibility mode and LINTD0, LINTD1 in MBUF mode) is/are ready to get another character from a CPU write.  In SCI compatibility mode, writing data to SCITD automatically clears this bit. In LIN mode, this bit is cleared once byte 0 (TD0) is written to LINTD0. This bit is set after the data of the TX buffer are shifted into the SCITXSHF register. This event can trigger a transmit DMA event if the DMA enable bit is set. This bit is set to 1 by: - RESET bit (SCIGCR0.0) - Setting the SWnRESET (SCIGCR1.7) - System reset  Note: The TXRDY flag cannot be cleared by reading the corresponding interrupt offset in the SCIINTVECT0/1 register.  Note: The transmit interrupt request can be eliminated until the next series of data is written into the transmit buffers LINTD0 and LINTD1, by disaLINg the corresponding interrupt via the SCICLEARINT register or by disaLINg the transmitter via the TXENA bit (SCIGCR1.25=0).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TOA3WUS</name>
              <description>[7:7] Timeout After 3 Wakeup Signals flag. This bit is effective in LIN mode only. This flag is set if there is no Sync Break received after 3 wakeup signals and a period of 1.5 seconds have passed. Such expiration time is used before issuing another round of wakeup signals. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TOAWUS</name>
              <description>[6:6] Timeout After Wakeup Signal flag. This bit is effective in LIN mode only. This bit is set if there is no Sync Break received after a wakeup signal has been sent. A minimum of 150 ms expiration time is used before issuing another wakeup signal.  This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[5:5] reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[4:4] LIN Bus IDLE timeout flag. This bit is effective in LIN mode only. This bit is set if there is no LIN bus activity for at least 4 seconds. LIN bus activity being a transition from recessive to dominant. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>BUSY</name>
              <description>[3:3] Bus BUSY flag. This bit is effective in LIN mode and SCI-compatible mode. This bit indicates whether the receiver is in the process of receiving a frame. As soon as the receiver detects the beginning of a start bit, the BUSY bit is set to 1. When the reception of a frame is complete, the BUSY bit is cleared. If SET WAKEUP INT is set and power down is requested while this bit is set, the SCI/LIN automatically prevents low-power mode from being entered and generates wakeup interrupt. The BUSY bit is controlled directly by the SCI receiver but can be cleared by: - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>IDLE</name>
              <description>[2:2] SCI receiver in idle state. This bit is effective in SCI-compatible mode only. While this bit is set, the SCI looks for an idle period to resynchronize itself with the bit stream. The receiver does not receive any data while the bit is set. The bus must be idle for 11 bit periods to clear this bit. The SCI enters this state: - After a system reset - Setting the SWnRESET bit (SCIGCR1.7) - After coming out of power down  This bit is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WAKEUP</name>
              <description>[1:1] Wake-up flag. This bit is effective in LIN mode only. This bit is set by the SCI/LIN when receiver or transmitter activity has taken the module out of power-down mode. An interrupt is generated if the SET WAKEUP INT bit (SCISETINT.1) is set. This bit is cleared by: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register. - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - Writing a 1 to this bit.  This field is writable in LIN mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>BRKDT</name>
              <description>[0:0] SCI break-detect flag. This bit is effective in SCI-compatible mode only. This bit is set when the SCI detects a break condition on the LINRX pin. A break condition occurs when the LINRX pin remains continuously low for at least 10 bits after a missing first stop bit, that is, after a framing error. Detection of a break condition causes the SCI to generate an error interrupt if the BRKDT INT ENA bit is set. The BRKDT bit is cleared by the following: - Reading the corresponding interrupt offset in the SCIINTVECT0/1 register. - Setting the SWnRESET bit (SCIGCR1.7) - RESET bit (SCIGCR0.0) - System reset - By writing a 1 to this bit.  This bit is writable in SCI mode only.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT0</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>The SCIINTVECT0 register indicates the offset for the INT0 interrupt line.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:5] Reserved</description>
              <bitWidth>11</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>INTVECT0</name>
              <description>[4:0] Interrupt vector offset for INT0. This register indicates the offset for interrupt line INT0. A read to this register updates its value to the next highest priority pending interrupt in SCIFLR and clears the flag corresponding to the offset that was read.  Note: The flags for the receive (SCIFLR.9) and the transmit (SCIFLR.8) interrupts cannot be cleared by reading the corresponding offset vector in this register (see detailed description in SCIFLR register).</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT1</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>The SCIINTVECT1 register indicates the offset for the INT1 interrupt line.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:5] Reserved</description>
              <bitWidth>11</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>INTVECT1</name>
              <description>[4:0] Interrupt vector offset for INT1. This register indicates the offset for interrupt line INT1. A read to this register updates its value to the next highest priority pending interrupt in SCIFLR and clears the flag corresponding to the offset that was read.  Note: The flags for the receive (SCIFLR.9) and the transmit (SCIFLR.8) interrupts cannot be cleared by reading the corresponding offset vector in this register (see detailed description in SCIFLR register).</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIFORMAT</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>The SCIFORMAT register is used to set up the character and frame lengths.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:19] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>LENGTH</name>
              <description>[18:16] Frame length control bits. In LIN mode, these bits indicate the number of bytes in the response field from 1 to 8 bytes. In buffered SCI mode, these bits indicate the number of characters. When these bits are used to indicate LIN response length (SCIGCR1[0] = 1), then when there is an ID RX match, this value should be updated with the expected length of the response. In buffered SCI mode, these bits indicate the number of characters with SCIFORMAT[2:0] bits per character. i.e. these bits indicate the transmitter/receiver format for the number of characters: 1 to 8. There can be up to eight characters with eight bits each.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CHAR</name>
              <description>[2:0] Character length control bits. These bits are effective in SCI compatible mode only. These bits set the SCI character length from 1 to 8 bits.  Note: In compatibility mode or buffered SCI mode, when data of fewer than eight bits in length is received, it is left justified in SCIRD/RDy and padded with trailing zeros. Data read from the SCIRD should be shifted by software to make the received data right justified.  Note: Data written to the SCITD should be right justified but does not need to be padded with leading zeros.  These bits are witable in SCI mode only.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BRSR</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>The BRSR register is used to configure the baud rate of the LIN module.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:31] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>U</name>
              <description>[30:28] Superfractional Divider Selection. (U) These bits are an additional fractional part for the baudrate specification. These bits allow a super fine tuning of the fractional baudrate with 7 more intermediate values for each of the M fractional divider values. See the Superfractional Divider section for more details.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>M</name>
              <description>[27:24] SCI/LIN 4-bit Fractional Divider Selection. (M) These bits are effective in LIN or SCI asynchronous mode. These bits are used to select a baud rate for the SCI/LIN module, and they are a fractional part for the baud rate specification. The M divider allows fine-tuning of the baud rate over the P prescaler with 15 additional intermediate values for each of the P integer values.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SCI_LIN_PSH</name>
              <description>[23:16] PRESCALER P (High Bits). SCI/LIN 24-bit Integer Prescaler Selection. These bits are used to select a baudrate for the SCI/LIN module. These bits are effective in LIN mode and SCI compatible mode. The SCI/LIN has an internally generated serial clock determined by the LIN module input clock and the prescalers P and M in this register. The SCI/LIN uses the 24-bit integer prescaler P value to select 1 of over 16,700,000 available baud rates. The additional 4-bit fractional prescaler M refines the baudate selection.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SCI_LIN_PSL</name>
              <description>[15:0] PRESCALER P (Low Bits). SCI/LIN 24-bit Integer Prescaler Selection. These bits are used to select a baudrate for the SCI/LIN module. These bits are effective in LIN mode and SCI compatible mode. The SCI/LIN has an internally generated serial clock determined by the LIN module input clock and the prescalers P and M in this register. The SCI/LIN uses the 24-bit integer prescaler P value to select 1 of over 16,700,000 available baud rates. The additional 4-bit fractional prescaler M refines the baudate selection.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIED</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>The SCIED register is a duplicate copy of SCIRD register that has no affect on the RXRDY flag for use with an emulator.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ED</name>
              <description>[7:0] Receiver Emulation Data. This bit is effective in SCI-compatible mode only. Reading SCIED(7ΓÇô0) does not clear the RXRDY flag. This register should be used only by an emulator that must continually read the data buffer without affecting the RXRDY flag.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIRD</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>The SCIRD register is where received data is stored and can be read from.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RD</name>
              <description>[7:0] Received Data. This bit is effective in SCI-compatible mode only. When a frame has been completely received, the data in the frame is transferred from the receiver shift register SCIRXSHF to this register. As this transfer occurs, the RXRDY flag is set and a receive interrupt is generated if RX INT ENA (SCISETINT0.9) is set. When the data is read from SCIRD, the RXRDY flag is automatically cleared.  When the SCI receives data that is fewer than eight bits in length, it loads the data into this register in a left justified format padded with trailing zeros. Therefore, your software should perform a logical shift on the data by the correct number of positions to make it right justified.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCITD</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>The SCITD register is where data to be transmitted is written to by application software.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TD</name>
              <description>[7:0] Transmit data This bit is effective in SCI-compatible mode only. Data to be transmitted is written to this register. The transfer of data from this register to the transmit shift register SCITXSHF sets the TXRDY flag (SCIFLR.23), which indicates that SCITD is ready to be loaded with another byte of data. Note: If TX INT ENA (SCISETINT.8) is set, this data transfer also causes an interrupt.  Note: Data written to the SCIRD register that is fewer than eight bits long must be right justified, but it does not need to be padded with leading zeros.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO0</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>The SCIPIO0 register is used to enable the LINTX and LINRX pins.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXFUNC</name>
              <description>[2:2] Transmit pin function. This bit is effective in LIN or SCI mode. This bit defines the function of LINTX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXFUNC</name>
              <description>[1:1] Receive pin function. This bit is effective in LIN or SCI mode. This bit defines the function of the LINRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKFUNC</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>SCIPIO1</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXDIR</name>
              <description>[2:2] Transmit pin direction. This bit is effective in LIN or SCI mode. This bit determines the data direction on the LINTX pin if it is configured with general-purpose I/O functionality (TX FUNC = 0). 0: general purpose input pin. 1: general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXDIR</name>
              <description>[1:1] Receive pin direction. This bit is effective in LIN or SCI mode. This bit determines the data direction on the LINRX pin if it is configured with general-purpose I/O functionality (RX FUNC = 0). 0: general purpose input pin. 1: general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKDIR</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO2</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>The SCIPIO2 register indicates the current status of the LINTX and LINRX pins.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXIN</name>
              <description>[2:2] Transmit data in. This bit is effective in LIN or SCI-compatible mode. This bit contains the current value on the LINTX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXIN</name>
              <description>[1:1] Receive data in. This bit is effective in LIN or SCI-compatible mode. This bit contains the current value on the LINRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKIN</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO3</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>SCIPIO3</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXOUT</name>
              <description>[2:2] Transmit pin out. This bit is effective in LIN or SCI mode. This pin specifies the logic to be output on pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXOUT</name>
              <description>[1:1] Receive pin out. This bit is effective in LIN or SCI mode. This pin specifies the logic to be output on pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKOUT</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO4</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>SCIPIO4</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXSET</name>
              <description>[2:2] Transmit pin set. This bit is effective in LIN or SCI mode. This bit sets the logic to be output on pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXSET</name>
              <description>[1:1] Receive pin set. This bit is effective in LIN or SCI mode. This bit sets the logic to be output on pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKSET</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO5</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>SCIPIO5</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXCLR</name>
              <description>[2:2] Transmit pin clear. This bit is effective in LIN or SCI mode. This bit clears the logic to be output on pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXCLR</name>
              <description>[1:1] Receive pin clear. This bit is effective in LIN or SCI mode. This bit clears the logic to be output on pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKCLR</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO6</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>SCIPIO6</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXPDR</name>
              <description>[2:2] Transmit pin open drain enable. This bit is effective in LIN or SCI mode. This bit enables open-drain capability in the output pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXPDR</name>
              <description>[1:1] Receive pin open drain enable. This bit is effective in LIN or SCI mode. This bit enables open-drain capability in the output pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKDR</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO7</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>SCIPIO7</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXPD</name>
              <description>[2:2] Transmit pin pull control disable. This bit is effective in LIN or SCI mode. This bit disables pull control capability on the input pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXPD</name>
              <description>[1:1] Receive pin pull control disable. This bit is effective in LIN or SCI mode. This bit disables pull control capability on the input pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKPD</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO8</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>SCIPIO8</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXPSL</name>
              <description>[2:2] TX pin pull select. This bit is effective in LIN or SCI mode. This bit selects pull type in the input pin LINTX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXPSL</name>
              <description>[1:1] RX pin pull select. This bit is effective in LIN or SCI mode. This bit selects pull type in the input pin LINRX.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKPSL</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINCOMP</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>The LINCOMPARE register is used to configure the sync delimeter and sync break extension.</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SDEL</name>
              <description>[9:8] 2-bit Sync Delimiter compare. These bits are effective in LIN mode only. These bits are used to configure the number of Tbit for the sync delimiter in the sync field. The time delay calculation for the synchronization delimiter is: TSDEL = (SDEL + 1)Tbit  These bits are writable in LIN mode only.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[7:3] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SBREAK</name>
              <description>[2:0] 3-bit Sync Break extend. LIN mode only. These bits are used to configure the number of Tbits for the sync break to extend the minimum 13 Tbit in the Sync Field to a maximum of 20 Tbit. The time delay calculation for the sync break is: TSYNBRK = 13Tbit + SBREAK x Tbit  These bits are writable in LIN mode only.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINRD0</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>The LINRD0 register contains the lower 4 bytes of the received LIN frame data.</description>
          <fields>
            <field>
              <name>RD0</name>
              <description>[31:24] 8-bit Receive Buffer 0 Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received. A read of this byte clears the RXDY byte. Note: RD&lt;x-1&gt; is equivalent to Data byte &lt;x&gt; of the LIN frame.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RD1</name>
              <description>[23:16] 8-bit Receive Buffer 1. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RD2</name>
              <description>[15:8] 8-bit Receive Buffer 2. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RD3</name>
              <description>[7:0] 8-bit Receive Buffer 3. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINRD1</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>The LINRD1 regsiter contains the upper 4 bytes of the received LIN frame data.</description>
          <fields>
            <field>
              <name>RD4</name>
              <description>[31:24] 8-bit Receive Buffer 4  Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RD5</name>
              <description>[23:16] 8-bit Receive Buffer 5. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RD6</name>
              <description>[15:8] 8-bit Receive Buffer 6. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RD7</name>
              <description>[7:0] 8-bit Receive Buffer 7. Each response data-byte that is received in the SCIRXSHFT register is transferred to the corresponding RDy register according to the number of bytes received.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINMASK</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>The LINMASK register is used to configure the masks used for filtering incoming ID messages for receive and transmit frames.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RXIDMASK</name>
              <description>[23:16] Receive ID mask. This field is effective in LIN mode only.This 8-bit mask is used for filtering an incoming ID message and compare it to the ID-byte. A compare match of the received ID witht the RX ID mask will set the ID RX flag and trigger and ID interrupt if enabled. A 0 bit in the mask indicates that bit is compared to the ID-byte. A 1 bit in the mask indicates that that bit is filtered and therefore not used in the compare.  When HGENCTRL is set to 1, this field must be set to 0xFF.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TXIDMASK</name>
              <description>[7:0] Transmit ID mask. This field is effective in LIN mode only. This 8-bit mask is used for filtering an incoming ID message and compare it to the ID-byte. A compare match of the received ID with the TX ID Mask will set the ID TX flag and trigger an ID interrupt if enabled. A 0 bit in the mask indicates that bit is compared to the ID-byte. A 1 bit in the mask indicates that bit is filtered and therefore not used for the compare.  When HGENCTRL is set to 1, this field must be set to 0xFF.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINID</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>The LINID register contains the identification fields for LIN communication. NOTE: For software compatibility with future LIN modules, the HGEN CTRL bit must be set to 1, the RX ID MASK field must be set to FFh, and the TX ID MASK field must be set to FFh.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RECEIVEDID</name>
              <description>[23:16] Received ID. This bit is effective in LIN mode only. This byte contains the current message identifier. During header reception the received ID is copied from the SCIRXSHF register to this byte if there is no ID-parity error and there has been an RX/TX match. Note: If a framing error (FE) is detected during ID reception, the received ID will also not be copied to the LINID register.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>IDSLAVETASKBYTE</name>
              <description>[15:8] ID Slave Task byte. This field is effective in LIN mode only. This byte contains the identifier to which the received ID of an incoming header will be compared in order to decide whether a RX response, a TX response, or no action needs to be done by the LIN node.   These bits are writable in LIN mode only.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>IDBYTE</name>
              <description>[7:0] ID byte. This field is effective in LIN mode only. This byte is the LIN mode message ID. On a master node, a write to this register by the CPU initiates a header transmission. For a slave task, this byte is used for message filtering when HGENCTRL (SCIGCR1.12) is '0'.  These bits are writable in LIN mode only.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINTD0</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>The LINTD0 register contains the lower 4 bytes of the data to be transmitted. NOTE: TD&lt;x-1&gt; is equivalent to Data byte &lt;x&gt; of the LIN frame.</description>
          <fields>
            <field>
              <name>TD0</name>
              <description>[31:24] 8-bit Transmit Buffer 0. Byte 0 to be transmitted is written into this register and then copied to SCITXSHF for transmission. Once byte 0 is written in TDO buffer, transmission will be initiated.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>TD1</name>
              <description>[23:16] 8-bit Transmit Buffer 3. Byte 1 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TD2</name>
              <description>[15:8] 8-bit Transmit Buffer 2. Byte 2 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TD3</name>
              <description>[7:0] 8-bit Transmit Buffer 3. Byte 3 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINTD1</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>The LINTD1 register contains the upper 4 bytes of the data to be transmitted. NOTE: TD&lt;x-1&gt; is equivalent to Data byte &lt;x&gt; of the LIN frame.</description>
          <fields>
            <field>
              <name>TD4</name>
              <description>[31:24] 8-bit Transmit Buffer 4. Byte4 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>TD5</name>
              <description>[23:16] 8-bit Transmit Buffer 5. Byte 5 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TD6</name>
              <description>[15:8] 8-bit Transmit Buffer 6. Byte 6 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TD7</name>
              <description>[7:0] 8-bit Transmit Buffer 7. Byte 7 to be transmitted is written into this register and then copied to SCITXSHF for transmission.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MBRSR</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>The MBRSR register is used to configure the expected maximum baud rate of the LIN network.</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:13] Reserved</description>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>MBR</name>
              <description>[12:0] Maximum Baud Rate Prescaler. This field is effective in LIN mode only. This 13-bit prescaler is used during the synchronization phase (see the "Header Reception and Adaptive Baudrate" section) of a slave module if the ADAPT bit is set. In this way, a SCI/LIN slave using an automatic or select bit rate modes detects any LIN bus legal rate automatically.  The MBR value should be programmed to allow a maximum baud rate that is not more than 10% above the expected operating baud rate in the LIN network. Otherwise a s 0x00 data byte could mistakenly be detected as sync break. The default value is for a 70MHz LINCLK (0xDAC). This MBR prescaler is used by the wake-up and idle time counters for a constant expiration time relative to a 20kHz rate.</description>
              <bitWidth>13</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO9</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Couldn't find this register in spec. But it's mentioned in RTL.</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TXSL</name>
              <description>[2:2] SCITX PIN value</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RXSL</name>
              <description>[1:1] SCIRX PIN value</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLKSL</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved1</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>Reserved1</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved2</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>Reserved2</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IODFTCTRL</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>The IODFTCTRL register is used to emulate various error and test conditions.</description>
          <fields>
            <field>
              <name>BERRENA</name>
              <description>[31:31] Bit Errror Enable bit. This bit is effective in LIN mode only. This bit is used to create a Bit error. When this bit is set, the bit received is ORed with 1 and passed to the Bit monitor circuitry.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>PBERRENA</name>
              <description>[30:30] Physical Bus Error Enable bit. This bit is effective in LIN mode only. This bit is used to create a Physical Bus Error. When this bit is set, the bit received during Sync Break field transmission is ORed with 1 and passed to the Bit monitor circuitry</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CERRENA</name>
              <description>[29:29] Checksum Error Enable bit. This bit is effective in LIN mode only. This bit is used to create a checksum error. When this bit is set, the polarity of the CTYPE (checksum type) in the receive checksum calculator is changed so that a checksum error is generated.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>ISFERRENA</name>
              <description>[28:28] Inconsistent Sync Field Error Enable bit. This bit is effective in LIN mode only. This bit is used to create an ISF error. When this bit is set, the bit widths in the sync field are varied so that the ISF check fails and the error flag is set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[27:27] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FERRENA</name>
              <description>[26:26] This bit is used to create a Frame Error. This bit is effective in SCI-compatible mode only. When this bit is set, the stop bit received is ANDed with ΓÇÖ0ΓÇÖ and passed to the stop bit check circuitry.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>PERRENA</name>
              <description>[25:25] Compatible Mode only This bit is effective in SCI-compatible mode only. This bit is used to create a Parity Error. When this bit is set, in compatible mode, the parity bit received is toggled so that a parity error occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>BRKDTERRENA</name>
              <description>[24:24] Compatible Mode only This bit is effective in SCI-compatible mode only. This bit is used to create BRKDT error (SCI mode only). When this bit is set, the stop bit of the frame is ANDed with ΓÇÖ0ΓÇÖ and passed to the RSM so that a frame error occurs. Then the RX Pin is forced to continuous low for 10 Tbits so that a BRKDT error occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[23:21] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>PINSAMPLEMASK</name>
              <description>[20:19] Pin sample mask. These bits define the sample number at which the TX Pin value that is being transmitted will be inverted to verify the receive pin samples correctly with the majority detection circuitry. Note: During IODFT mode testing for the pin sample mask, the prescalar P must be programmed to be greater than 2.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TXSHIFT</name>
              <description>[18:16] Transmit shift. These bits define the delay by which the value on LINTX is delayed so that the value on LINRX is asynchronous. (Not applicable to Start Bit)</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:12] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>IODFTENA</name>
              <description>[11:8] IO DFT Enable Key This field is used to enable the IODFT mode of the SCI/LIN module for testing.  Writable Only in privilege mode</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>LPBENA</name>
              <description>[1:1] Module loopback enable. In analog loopback mode the complete communication path through the I/Os can be tested, whereas in digital loopback mode the I/O buffers are excluded from this path. Writable Only in privilege mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXPENA</name>
              <description>[0:0] Module Analog loopback through receive pin enable. This bit defines whether the I/O buffers for the transmit or the receive pin are included in the communication path in analog loopback mode only. Writable Only in privilege mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_UART_0</name>
      <baseAddress>0x53F7F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>148</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_UART</description>
      <registers>
        <register>
          <name>SCIGCR0</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>The SCIGCR0 register defines the module reset</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESET</name>
              <description>[0:0] GIO reset</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIGCR1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>The SCIGCR1 register defines the frame format, protocol, and communication mode used by the SCI</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>TXENA</name>
              <description>[25:25] Data is transferred from SCITD to SCITXSHF only when the TXENA bit is set</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>RXENA</name>
              <description>[24:24] Allows the receiver to transfer data from the shift buffer to the receive buffer</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:18] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CONT</name>
              <description>[17:17] This bit has an effect only when a program is being debugged with an emulator, and it  determines how the SCI operates when the program is suspended</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>LOOP_BACK</name>
              <description>[16:16] Enable bit for loopback mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>POWERDOWN</name>
              <description>[9:9] When the POWERDOWN bit is set, the SCI attempts to enter local low-power mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SLEEP</name>
              <description>[8:8] In a multiprocessor configuration, this bit controls the receive sleep function. Clearing this  bit brings the SCI out of sleep mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>SW_nRESET</name>
              <description>[7:7] Software reset (active low)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[6:6] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLOCK</name>
              <description>[5:5] SCI internal clock enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>STOP</name>
              <description>[4:4] SCI number of stop bits</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[3:3] SCI parity odd/even selection</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>PARITY_ENA</name>
              <description>[2:2] SCI parity enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMING_MODE</name>
              <description>[1:1] SCI timing mode bit (0=Isosynchronous timing,1=Asynchronous timing)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COMM_MODE</name>
              <description>[0:0] SCI communication mode bit (0=Idle-line mode, 1=Address-bit mode)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINT</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>SCI Set Interrupt Register</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SET_FE_INT</name>
              <description>[26:26] Set Framing-Error Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SET_OE_INT</name>
              <description>[25:25] Set Overrun-Error Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SET_PE_INT</name>
              <description>[24:24] Set Parity Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA_ALL</name>
              <description>[18:18] Determines if a separate interrupt is generated for the address frames sent in multiprocessor communications User and privilege mode (read): 0 = DMA request is disabled for address frames (RX interrupt request is enabled for address frames) 1 = DMA request is enabled for address and data frames  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request for address and data frames</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA</name>
              <description>[17:17] To select receiver DMA requests, this bit must be set. If it is cleared, interrupt requests are generated depending on bit SCISETINT.9 User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SET_TX_DMA</name>
              <description>[16:16] To select DMA requests for the transmitter, this bit must be set. If it is cleared, interrupt requests are generated depending on SET TX INT bit (SCISETINT.8) User and privilege mode (read): 0 = TX interrupt request selected 1 = TX DMA request selected  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SET_RX_INT</name>
              <description>[9:9] Receiver interrupt enable:Setting this bit enables the SCI to generate a receive interrupt after a frame has been completely received and the data is being transferred from SCIRXSHF to SCIRD. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SET_TX_INT</name>
              <description>[8:8] Set Transmitter interrupt. Setting this bit enables the SCI to generate a transmit interrupt as data is being transferred from SCITD to SCITXSHF and the TXRDY bit is being set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET_WAKEUP_INT</name>
              <description>[1:1] Set Wake-up interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SET_BRKDT_INT</name>
              <description>[0:0] Set Break-detect interrupt. Setting this bit enables the SCI to generate an error interrupt if a break condition is detected on the SCIRX pin. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINT</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>SCI Clear Interrupt Register</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLR_FE_INT</name>
              <description>[26:26] Clear Framing-Error Interrupt: Setting this bit disables the SCI module to generate an interrupt when there is a Framing error. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLR_OE_INT</name>
              <description>[25:25] Clear Overrun-Error Interrupt. This bit disables the SCI overrun interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLR_PE_INT</name>
              <description>[24:24] Clear Parity Interrupt. Setting this bit disables the SCI Parity error interrupt. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA_ALL</name>
              <description>[18:18] User and privilege mode (read): 0 = DMA request is disabled for address frames (RX interrupt request is enabled for address frames). DMA request is enabled for data frames. 1 = DMA request is enabled for address and data frames  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request for address frames</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA</name>
              <description>[17:17] Clear RX DMA request. This bit disalbes the receive DMA request when set. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLR_TX_DMA</name>
              <description>[16:16] Clear TX DMA request. This bit disables the transmit DMA request when set. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_RX_INT</name>
              <description>[9:9] Clear Receiver interrupt. This bit disables the receiver interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLR_TX_INT</name>
              <description>[8:8] Clear Transmitter interrupt. This bit disables the transmitter interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLR_WAKEUP_INT</name>
              <description>[1:1] Clear Wake-up interrupt. This bit disables the wakeup interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR_BRKDT_INT</name>
              <description>[0:0] Clear Break-detect interrupt. This bit disables the Break-detect interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINTLVL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>SCI Set Interrupt Level Register</description>
          <fields>
            <field>
              <name>RESERVED5</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SET_FE_INT_LVL</name>
              <description>[26:26] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SET_OE_INT_LVL</name>
              <description>[25:25] Clear Overrun-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SET_PE_INT_LVL</name>
              <description>[24:24] Clear Parity Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED4</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA_ALL_INT_LVL</name>
              <description>[18:18] User and privilege mode (read): 0 = RX interrupt request for address frames mapped to INT0 line. 1 = RX interrupt request for address frames mapped to INT1 line.  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SET_INC_BR_INT_LVL</name>
              <description>[15:15] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[14:10] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SET_RX_INT_LVL</name>
              <description>[9:9] Clear Receiver interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SET_TX_INT_LVL</name>
              <description>[8:8] Clear Transmitter interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET_WAKEUP_INT_LVL</name>
              <description>[1:1] Clear Wake-up interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SET_BRKDT_INT_LVL</name>
              <description>[0:0] Clear Break-detect interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINTLVL</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>SCI Clear Interrupt Level Register</description>
          <fields>
            <field>
              <name>RESERVED5</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLR_FE_INT_LVL</name>
              <description>[26:26] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLR_OE_INT_LVL</name>
              <description>[25:25] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLR_PE_INT_LVL</name>
              <description>[24:24] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED4</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA_ALL_INT_LVL</name>
              <description>[18:18] Clear receive DMA ALL interrupt level. User and privilege mode (read): 0 = RX interrupt request for address frames is mapped to INT0 line. 1 = RX interrupt request for address frames is mapped to INT1 line.  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged. 1 = Reset interrupt level to line INT0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CLR_INC_BR_INT_LVL</name>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[14:10] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_RX_INT_LVL</name>
              <description>[9:9] Clear Receiver interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLR_TX_INT_LVL</name>
              <description>[8:8] Clear Transmitter interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLR_WAKEUP_INT_LVL</name>
              <description>[1:1] Clear Wake-up interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR_BRKDT_INT_LVL</name>
              <description>[0:0] Clear Break-detect interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIFLR</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>SCI Flags Register</description>
          <fields>
            <field>
              <name>RESERVED3</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FE</name>
              <description>[26:26] SCI framing error flag Read: 0=No framing error detected 1=Framing error detected Write: 0=No effect 1=Clears this bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>OE</name>
              <description>[25:25] SCI overrun error flag This bit is set when the transfer of data from SCIRXSHF to SCIRD overwrites unread data already in SCIRD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>PE</name>
              <description>[24:24] SCI parity error flag. This bit is set when a parity error is detected in the received data</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[23:13] Reserved</description>
              <bitWidth>11</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>RXWAKE</name>
              <description>[12:12] Receiver wake-up detect flag. The SCI sets this bit to indicate that the data currently in SCIRD is an address</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>[11:11] Transmitter empty flag. The value of this flag indicates the contents of the transmitterΓÇÖs buffer register (SCITD) and shift register (SCITXSHF)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TXWAKE</name>
              <description>[10:10] SCI transmitter wake-up method select. The TXWAKE bit controls whether the data in SCITD should be sent as an address or data frame using multiprocessor communication format</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>RXRDY</name>
              <description>[9:9] SCI receiver ready flag. The receiver sets this bit to indicate that the SCIRD contains new data and is ready to be read by the CPU or DMA.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TXRDY</name>
              <description>[8:8] Transmitter buffer register ready flag. When set, this bit indicates that the transmit buffer register (SCITD) is ready to receive another character.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:4] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Bus_busy_flag</name>
              <description>[3:3] This bit indicates whether the receiver is in the process of receiving a frame.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>IDLE</name>
              <description>[2:2] SCI receiver in idle state. While this bit is set, the SCI looks for an idle period to resynchronize itself with the bit stream.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WAKEUP</name>
              <description>[1:1] Wake-up flag. This bit is set by the SCI when receiver or transmitter activity has taken the module out of power-down mode.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>BRKDT</name>
              <description>[0:0] SCI break-detect flag. This bit is set when the SCI detects a break condition on the SCIRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT0</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>SCI Interrupt Offset Vector 0 Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTVECT0</name>
              <description>[3:0] Interrupt vector offset for INT0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT1</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>SCI Interrupt Offset Vector 1 Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTVECT1</name>
              <description>[3:0] Interrupt vector offset for INT1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICHAR</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>SCI Character Control Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CHAR</name>
              <description>[2:0] Sets the SCI data length from 1 to 8 bits</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIBAUD</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>SCI Baud Rate Selection Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>BAUD</name>
              <description>[23:0] SCI 24-bit baud selection</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIED</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Receiver Emulation Data Buffer</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ED</name>
              <description>[7:0] Receiver Emulation Data Buffer</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIRD</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Receiver Data Buffer</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RD</name>
              <description>[7:0] Contains received data.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCITD</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Transmit Data Buffer Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TD</name>
              <description>[7:0] Contains Data to be transmitted. This is pushed to SCITXSHF(shift register) when TXENA bit is set in SCRGCR1 register.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO0</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 0</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_FUNC</name>
              <description>[2:2] Defines the function of pin SCITX. 0=SCITX is a general-purpose digital I/O pin. 1=SCITX is the SCI transmit pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_FUNC</name>
              <description>[1:1] Determines the data direction on the SCIRX pin if it is configured with general-purpose I/O functionality (RX FUNC = 0). See Table 12 for bit values. 0=SCIRX is a general-purpose input pin. 1=SCIRX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_FUNC</name>
              <description>[0:0] Clock function. Defines the function of pin SCICLK. 0=SCICLK is a general-purpose digital I/O pin. 1=SCICLK is the SCI serial clock pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 1</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DIR</name>
              <description>[2:2] Determines the data direction on the SCITX pin if it is configured with general-purpose I/O functionality (TX FUNC = 0). See Table 11 for bit values. 0=SCITX is a general-purpose input pin. 1=SCITX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DIR</name>
              <description>[1:1] Determines the data direction on the SCIRX pin if it is configured with general-purpose I/O functionality (RX FUNC = 0). See Table 12 for bit values. 0=SCIRX is a general-purpose input pin. 1=SCIRX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DIR</name>
              <description>[0:0] Clock data direction. Determines the data direction on the SCICLK pin. The direction is defined differently depending upon the value of the CLK FUNC bit 0=SCICLK is a general-purpose input pin. 1=SCICLK is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO2</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 2</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_IN</name>
              <description>[2:2] Contains current value on the SCITX pin. 0=SCITX value is logic low. 1=SCITX value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_IN</name>
              <description>[1:1] Contains current value on the SCIRX pin. 0=SCIRX value is logic low. 1=SCIRX value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_IN</name>
              <description>[0:0] Contains the current value on pin SCICLK. 0=Pin SCICLK value is logic low. 1=Pin SCICLK value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO3</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 3</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_OUT</name>
              <description>[2:2] Contains the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX DATA DIR = 1 (SCITX pin is a general-purpose output.) 0=Output value on SCITX is a 0 (logic low). 1=Output value on SCITX is a 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_OUT</name>
              <description>[1:1] Contains the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCIRX pin is a general-purpose I/O.) RX DATA DIR = 1 (SCIRX pin is a general-purpose output.) 0=Output value on SCIRX is 0 (logic low). 1=Output value on SCIRX is 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_OUT</name>
              <description>[0:0] Contains the data to be output on pin SCICLK if the following conditions are met: CLK FUNC = 0 (SCICLK pin is a general-purpose I/O.) CLK DATA DIR = 1 (SCICLK pin is a general-purpose output.) 0=Output value on SCICLK is a 0 (logic low). 1=Output value on SCICLK is a 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO4</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 4</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_SET</name>
              <description>[2:2] Sets the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX  DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_SET</name>
              <description>[1:1] Sets the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCIRX pin is a general-purpose I/O.) RX DIR = 1 (SCIRX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_SET</name>
              <description>[0:0] Sets the data to be output on pin SCICLK if the following conditions are met: CLK FUNC = 0 (SCICLK pin is a general-purpose I/O.) CLK DIR = 1 (SCICLK pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO5</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 5</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_CLR</name>
              <description>[2:2] Clears the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX  DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_CLR</name>
              <description>[1:1] Clears the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCITX pin is a general-purpose I/O.) RX DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_CLR</name>
              <description>[0:0] Clears the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO6</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 6</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PDR</name>
              <description>[2:2] TX Open Drain Enable Enables open-drain capability in the output pin SCITX if the following conditions are met: TX DATA DIR = 1 (SCITX pin is a general-purpose output.) TX DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PDR</name>
              <description>[1:1] RX Open Drain Enable Enables open-drain capability in the output pin SCIRX if the following conditions are met: RX DATA DIR = 1 (SCIRX pin is a general-purpose output.) RX DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PDR</name>
              <description>[0:0] CLK Open Drain Enable Enables open-drain capability in the output pin SCICLK if the following conditions are met: CLK DATA DIR = 1 (SCICLK pin is a general-purpose output.) CLK DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO7</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 7</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PD</name>
              <description>[2:2] TX pin Pull Control Disable Disables pull control capability in the output pin SCITX. 0=Pull Control on SCITX pin is enabled. 1=Pull Control on SCITX pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PD</name>
              <description>[1:1] RX pin Pull Control Disable Disables pull control capability in the output pin SCIRX. 0=Pull Control on SCIRX pin is enabled. 1=Pull Control on SCIRX pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PD</name>
              <description>[0:0] CLK pin Pull Control Disable Disables pull control capability in the output pin SCICLK. 0=Pull Control on SCICLK pin is enabled. 1=Pull Control on SCICLK pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO8</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 8</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PSL</name>
              <description>[2:2] TX pin Pull Select Selects pull type in the output pin SCITX. 0=Pull-Down is on SCITX pin. 1=Pull-Up is on SCITX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PSL</name>
              <description>[1:1] RX pin Pull Select Selects pull type in the output pin SCIRX. 0=Pull-Down is on SCIRX pin. 1=Pull-Up is on SCIRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PSL</name>
              <description>[0:0] CLK pin Pull Select Selects pull type in the output pin SCICLK. 0=Pull-Down is on SCICLK pin. 1=Pull-Up is on SCICLK pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED2</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED3</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED4</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED5</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED6</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED7</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED8</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED9</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO9</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 9</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_SL</name>
              <description>[2:2] This bit controls the slew rate for the SCITX pin. 0=The normal output buffer is used for SCITX pin 1=The output buffer with slew control is used for SCITX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_SL</name>
              <description>[1:1] This bit controls the slew rate for the SCIRX pin. 0=The normal output buffer is used for SCIRX pin 1=The output buffer with slew control is used for SCIRX pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_SL</name>
              <description>[0:0] This bit controls the slew rate for the SCICLK pin. 0=The normal output buffer is used for SCICLK pin 1=The output buffer with slew control is used for SCICLK pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIIODCTRL</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>SCI IO DFT Control</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FEN</name>
              <description>[26:26] Frame Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create a Frame Error. The stop bit received is ANDed with ΓÇÖ0ΓÇÖ and passed to the stop bit check circuitry. 0 = No effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>PEN</name>
              <description>[25:25] Parity Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create a Parity Error. The parity bit received is toggled so that a parity error occurs. 0 = No effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>BRKDT_ENA</name>
              <description>[24:24] Break Detect Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create BRKDT Error. The stop bit of the frame is ANDed with ΓÇÿ0ΓÇÖ and passed to the RSM so that a frame error occurs. Then the RX pin is forced to continuous low for 10 TBITS so that a BRKDT error occurs. 0 = No effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:21] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>PIN_SAMPLE_MASK</name>
              <description>[20:19] PIN SAMPLE MASK These bits define the sample number at which the TX Pin value that is being transmitted will be inverted to verify the receive pin samples majority detection circuitry. PIN SAMPLE MASK: 00 -- No Mask, 01 -- Invert the TX Pin value at 7th SCLK, 10 -- Invert the TX Pin value at 8th SCLK, 11 -- Invert the TX Pin value at 9th SCLK.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TX_SHIFT</name>
              <description>[18:16] These bits define the delay by which the value on TX pin is delayed so that the value on RX Pin is asynchronous. (Not applicable to Start Bit) TX SHIFT: 000 -- No Delay, 001 -- Delay by 1 SCLK, 010 -- Delay by 2 SCLKs, 011 -- Delay by 3 SCLKs, 100 -- Delay by 4 SCLKs, 101 -- Delay by 5 SCLKs, 110 -- Delay by 6 SCLKs, 111 -- No Delay.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:12] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>IODFTENA</name>
              <description>[11:8] These bits define the delay by which the value on TX pin is delayed so that the value on RX Pin is asynchronous. (Not applicable to Start Bit) TX SHIFT: 000 -- No Delay, 001 -- Delay by 1 SCLK, 010 -- Delay by 2 SCLKs, 011 -- Delay by 3 SCLKs, 100 -- Delay by 4 SCLKs, 101 -- Delay by 5 SCLKs, 110 -- Delay by 6 SCLKs, 111 -- No Delay.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>LBP_ENA</name>
              <description>[1:1] Module loopback enable. user and privileged mode reads: Write only in privileged mode: write/read : 1=Analog loopback is enabled in module I/O DFT mode(when IODFTENA = 1010) 0=Digital loopback is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXP_ENA</name>
              <description>[0:0] Module Analog loopback through receive pin enable. user and privileged mode reads: Write only in privileged mode: write/read : 1=Analog loopback through receive pin. 0=Analog loopback through transmit pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_SPI_0</name>
      <baseAddress>0x53F7F400</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>420</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_SPI</description>
      <registers>
        <register>
          <name>HL_REV</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>IP Revision Identifier (X.Y.R) Used by software to track  features bugs and compatibility</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] Used to distinguish between old scheme and current - (RO   )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>RSVD</name>
              <description>[29:28] Reserved These bits are initialized to zero and writes to  them are ignored - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] Function indicates a software compatible module family If  there is no level of software compatibility a new Func  number [and hence REVISION] should be assigned - (RO  )</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>R_RTL</name>
              <description>[15:11] RTL Version [R] maintained by IP design owner RTL follows a  numbering such as XYRZ which are explained in this table R  changes ONLY when: [1] PDS uploads occur which may have been  due to spec changes [2] Bug fixes occur [3] Resets to '0'  when X or Y changes Design team has an internal 'Z'  [customer invisible] number which increments on every drop  that happens due to DV and RTL updates Z resets to 0 when R  increments - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>X_MAJOR</name>
              <description>[10:8] Major Revision [X] maintained by IP specification owner X  changes ONLY when: [1] There is a major feature addition An  example would be adding Master Mode to Utopia Level2 The  Func field [or Class/Type in old PID format] will remain the  same X does NOT change due to: [1] Bug fixes [2] Change in  feature parameters - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Indicates a special version for a particular device  Consequence of use may avoid use of standard Chip Support  Library [CSL] / Drivers - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Y_MINOR</name>
              <description>[5:0] Minor Revision [Y] maintained by IP specification owner Y  changes ONLY when: [1] Features are scaled [up or down]  Flexibility exists in that this feature scalability may  either be represented in the Y change or a specific register  in the IP that indicates which features are exactly  available [2] When feature creeps from Is-Not list to Is  list But this may not be the case once it sees silicon; in  which case X will change Y does NOT change due to: [1] Bug  fixes [2] Typos or clarifications [3] major  functional/feature change/addition/deletion Instead these  changes may be reflected via R S X as applicable Spec  owner maintains a customer-invisible number 'S' which  changes due to: [1] Typos/clarifications [2] Bug  documentation Note that this bug is not due to a spec change  but due to implementation Nevertheless the spec tracks the  IP bugs An RTL release [say for silicon PG11] that occurs  due to bug fix should document the corresponding spec number  [XYS] in its release notes - (RO  )</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HL_HWINFO</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Information about the IP module's hardware configuration  i.e. typically the module's HDL generics (if any). Actual  field format and encoding is up to the module's designer to  decide.</description>
          <fields>
            <field>
              <name>RSVD</name>
              <description>[31:7] Reserved These bits are initialized to zero and writes to  them are ignored - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RETMODE</name>
              <description>[6:6] This bit field indicates whether the retention mode is  supported using the pin PIRFFRET - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>FFNBYTE</name>
              <description>[5:1] FIFO number of byte generic parameter This register defines  the value of FFNBYTE generic parameter only MSB bits from 8  down to 4 are taken into account - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>USEFIFO</name>
              <description>[0:0] Use of a FIFO enable: This bit field indicates if a FIFO is  integrated within controller design with its management -  (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HL_SYSCONFIG</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Clock management configuration</description>
          <fields>
            <field>
              <name>RSVD</name>
              <description>[31:4] Reserved - (RO  )</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>IDLEMODE</name>
              <description>[3:2] Configuration of the local target state management mode By  definition target can handle read/write transaction as long  as it is out of IDLE state - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>FREEEMU</name>
              <description>[1:1] Sensitivity to emulation [debug] suspend input signal - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SOFTRESET</name>
              <description>[0:0] Software reset [Optional] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REVISION</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>This register contains the hard coded RTL revision number.</description>
          <fields>
            <field>
              <name>RESERVED_13</name>
              <description>[31:8] Reads returns 0 - (RO  )</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>REV</name>
              <description>[7:0] IP revision [7:4] Major revision [3:0] Minor revision  Examples: 0x10 for 10 0x21 for 21 - (RO</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYSCONFIG</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>This register allows controlling various parameters of the  OCP interface.</description>
          <fields>
            <field>
              <name>RESERVED_14</name>
              <description>[31:10] Reads returns 0 - (RO  )</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLOCKACTIVITY</name>
              <description>[9:8] Clocks activity during wake up mode period - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_15</name>
              <description>[7:5] Reads returns 0 - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SIDLEMODE</name>
              <description>[4:3] Power management - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ENAWAKEUP</name>
              <description>[2:2] WakeUp feature control - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SOFTRESET</name>
              <description>[1:1] Software reset During reads it always returns 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AUTOIDLE</name>
              <description>[0:0] Internal OCP Clock gating strategy - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYSSTATUS</name>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <description>This register provides status information about the module  excluding the interrupt status information</description>
          <fields>
            <field>
              <name>RESERVED_16</name>
              <description>[31:1] Reserved for module specific status information Read returns  0 - (RO  )</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESETDONE</name>
              <description>[0:0] Internal Reset Monitoring - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IRQSTATUS</name>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <description>The interrupt status regroups all the status of the module  internal events that can generate an interrupt</description>
          <fields>
            <field>
              <name>RESERVED_8</name>
              <description>[31:18] Reads returns 0 - (RO  )</description>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>EOW</name>
              <description>[17:17] End of word count event when a channel is enabled using the  FIFO buffer and the channel had sent the number of SPI word  defined by MCSPI_XFERLEVEL[WCNT]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>WKS</name>
              <description>[16:16] Wake Up event in slave mode when an active control signal is  detected on the SPIEN line programmed in the field  MCSPI_CH0CONF[SPIENSLV]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED_7</name>
              <description>[15:15] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RX3_FULL</name>
              <description>[14:14] Receiver register is full or almost full Only when Channel 3  is enabled  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TX3_UNDERFLOW</name>
              <description>[13:13] Transmitter register underflow Only when Channel 3 is  enabled The transmitter register is empty [not updated by  Host or DMA with new data] before its time slot assignment  Exception: No TX_underflow event when no data has been  loaded into the transmitter register since channel has been  enabled  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TX3_EMPTY</name>
              <description>[12:12] Transmitter register is empty or almost empty Note: Enabling  the channel automatically rises this event  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED_9</name>
              <description>[11:11] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>RX2_FULL</name>
              <description>[10:10] Receiver register full or almost full Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TX2_UNDERFLOW</name>
              <description>[9:9] Transmitter register underflow Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TX2_EMPTY</name>
              <description>[8:8] Transmitter register empty or almost empty Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_10</name>
              <description>[7:7] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RX1_FULL</name>
              <description>[6:6] Receiver register full or almost full Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TX1_UNDERFLOW</name>
              <description>[5:5] Transmitter register underflow Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TX1_EMPTY</name>
              <description>[4:4] Transmitter register empty or almost empty Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RX0_OVERFLOW</name>
              <description>[3:3] Receiver register overflow [slave mode only] Channel 0  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RX0_FULL</name>
              <description>[2:2] Receiver register full or almost full Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TX0_UNDERFLOW</name>
              <description>[1:1] Transmitter register underflow Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TX0_EMPTY</name>
              <description>[0:0] Transmitter register empty or almost empty Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IRQENABLE</name>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <description>This register allows to enable/disable the module internal  sources of interrupt on an event-by-event basis.</description>
          <fields>
            <field>
              <name>RESERVED_5</name>
              <description>[31:18] Reads return 0 - (RO  )</description>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>EOW_ENABLE</name>
              <description>[17:17] End of Word count Interrupt Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>WKE</name>
              <description>[16:16] Wake Up event interrupt Enable in slave mode when an active  control signal is detected on the SPIEN line programmed in  the field MCSPI_CH0CONF[SPIENSLV] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED_4</name>
              <description>[15:15] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RX3_FULL_ENABLE</name>
              <description>[14:14] Receiver register Full Interrupt Enable Ch 3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TX3_UNDERFLOW_ENABLE</name>
              <description>[13:13] Transmitter register Underflow Interrupt Enable Ch 3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TX3_EMPTY_ENABLE</name>
              <description>[12:12] Transmitter register Empty Interrupt Enable Ch3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED_6</name>
              <description>[11:11] Reads return 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>RX2_FULL_ENABLE</name>
              <description>[10:10] Receiver register Full Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TX2_UNDERFLOW_ENABLE</name>
              <description>[9:9] Transmitter register Underflow Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TX2_EMPTY_ENABLE</name>
              <description>[8:8] Transmitter register Empty Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_3</name>
              <description>[7:7] Reads return 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RX1_FULL_ENABLE</name>
              <description>[6:6] Receiver register Full Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TX1_UNDERFLOW_ENABLE</name>
              <description>[5:5] Transmitter register Underflow Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TX1_EMPTY_ENABLE</name>
              <description>[4:4] Transmitter register Empty Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RX0_OVERFLOW_ENABLE</name>
              <description>[3:3] Receiver register Overflow Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RX0_FULL_ENABLE</name>
              <description>[2:2] Receiver register Full Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TX0_UNDERFLOW_ENABLE</name>
              <description>[1:1] Transmitter register Underflow Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TX0_EMPTY_ENABLE</name>
              <description>[0:0] Transmitter register Empty Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WAKEUPENABLE</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>The wakeup enable register allows to enable/disable the  module internal sources of wakeup on event-by-event basis.</description>
          <fields>
            <field>
              <name>RESERVED_18</name>
              <description>[31:1] Reads returns 0 - (RO  )</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WKEN</name>
              <description>[0:0] WakeUp functionality in slave mode when an active control  signal is detected on the SPIEN line programmed in the field  MCSPI_CH0CONF[SPIENSLV] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYST</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>This register is used to check the correctness of the system  interconnect either internally to peripheral bus or  externally to device IO pads when the module is configured  in system test (SYSTEST) mode.</description>
          <fields>
            <field>
              <name>RESERVED_17</name>
              <description>[31:12] Reads returns 0 - (RO  )</description>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SSB</name>
              <description>[11:11] Set status bit - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>SPIENDIR</name>
              <description>[10:10] Set the direction of the SPIEN[3:0] lines and SPICLK line -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SPIDATDIR1</name>
              <description>[9:9] Set the direction of the SPIDAT[1] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SPIDATDIR0</name>
              <description>[8:8] Set the direction of the SPIDAT[0] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>WAKD</name>
              <description>[7:7] SWAKEUP output [signal data value of internal signal to  system] The signal is driven high or low according to the  value written into this register bit - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>SPICLK</name>
              <description>[6:6] SPICLK line [signal data value] If MCSPI_SYST[SPIENDIR] = 1  [input mode direction] this bit returns the value on the  CLKSPI line [high or low] and a write into this bit has no  effect If MCSPI_SYST[SPIENDIR] = 0 [output mode direction]  the CLKSPI line is driven high or low according to the value  written into this register - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>SPIDAT_1</name>
              <description>[5:5] SPIDAT[1] line [signal data value] If MCSPI_SYST[SPIDATDIR1]  = 0 [output mode direction] the SPIDAT[1] line is driven  high or low according to the value written into this  register If MCSPI_SYST[SPIDATDIR1] = 1 [input mode  direction] this bit returns the value on the SPIDAT[1] line  [high or low] and a write into this bit has no effect  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SPIDAT_0</name>
              <description>[4:4] SPIDAT[0] line [signal data value] If MCSPI_SYST[SPIDATDIR0]  = 0 [output mode direction] the SPIDAT[0] line is driven  high or low according to the value written into this  register If MCSPI_SYST[SPIDATDIR0] = 1 [input mode  direction] this bit returns the value on the SPIDAT[0] line  [high or low] and a write into this bit has no effect  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SPIEN_3</name>
              <description>[3:3] SPIEN[3] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[3] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[3] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SPIEN_2</name>
              <description>[2:2] SPIEN[2] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[2] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[2] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SPIEN_1</name>
              <description>[1:1] SPIEN[1] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[1] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[1] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SPIEN_0</name>
              <description>[0:0] SPIEN[0] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[0] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[0] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MODULCTRL</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  serial port interface.</description>
          <fields>
            <field>
              <name>RESERVED_11</name>
              <description>[31:9] Reads returns 0 - (RO  )</description>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>FDAA</name>
              <description>[8:8] FIFO DMA Address 256-bit aligned This register is used when  a FIFO is managed by the module and DMA connected to the  controller provides only 256 bit aligned address If this bit  is set the enabled channel which uses the FIFO has its datas  managed through MCSPI_DAFTX and MCSPI_DAFRX registers  instead of MCSPI_TX[i] and MCSPI_RX[i] registers - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>MOA</name>
              <description>[7:7] Multiple word ocp access: This register can only be used  when a channel is enabled using a FIFO It allows the system  to perform multiple SPI word access for a single 32-bit OCP  word access This is possible for WL &lt; 16 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>INITDLY</name>
              <description>[6:4] Initial spi delay for first transfer: This register is an  option only available in SINGLE master mode The controller  waits for a delay to transmit the first spi word after  channel enabled and corresponding TX register filled This  Delay is based on SPI output frequency clock No clock  output provided to the boundary and chip select is not  active in 4 pin mode within this period  - (RW  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SYSTEM_TEST</name>
              <description>[3:3] Enables the system test mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>MS</name>
              <description>[2:2] Master/ Slave  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PIN34</name>
              <description>[1:1] Pin mode selection: This register is used to configure the  SPI pin mode in master or slave mode If asserted the  controller only use SIMOSOMI and SPICLK clock pin for spi  transfers - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SINGLE</name>
              <description>[0:0] Single channel / Multi Channel [master mode only] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0CONF</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 0</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS0</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>SPIENSLV</name>
              <description>[22:21] Channel 0 only and slave mode only: SPI slave select signal  detection Reserved bits for other cases - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0STAT</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 0</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0CTRL</name>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 0</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX0</name>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 0 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX0</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 0 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1CONF</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel.</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS1</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1STAT</name>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 1</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1CTRL</name>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 1</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX1</name>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 1 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX1</name>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 1 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2CONF</name>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 2</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS2</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2STAT</name>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 2</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2CTRL</name>
          <addressOffset>0x15C</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 2</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX2</name>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 2 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX2</name>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 2 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3CONF</name>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 3</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS3</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3STAT</name>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 3</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3CTRL</name>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 3</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX3</name>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 3 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX3</name>
          <addressOffset>0x178</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 3 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XFERLEVEL</name>
          <addressOffset>0x17C</addressOffset>
          <size>32</size>
          <description>This register provides transfer levels needed while using  FIFO buffer during transfer.</description>
          <fields>
            <field>
              <name>WCNT</name>
              <description>[31:16] Spi word counterThis register holds the programmable value  of number of SPI word to be transferred on channel which is  using the FIFO bufferWhen transfer had started a read back  in this register returns the current SPI word transfer index  - (RW  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>AFL</name>
              <description>[15:8] Buffer Almost Full This register holds the programmable  almost full level value used to determine almost full buffer  condition If the user wants an interrupt or a DMA read  request to be issued during a receive operation when the  data buffer holds at least n bytes then the buffer  MCSPI_MODULCTRL[AFL] must be set with n-1The size of this  register is defined by the generic parameter FFNBYTE - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>AEL</name>
              <description>[7:0] Buffer Almost EmptyThis register holds the programmable  almost empty level value used to determine almost empty  buffer condition If the user wants an interrupt or a DMA  write request to be issued during a transmit operation when  the data buffer is able to receive n bytes then the buffer  MCSPI_MODULCTRL[AEL] must be set with n-1 - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DAFTX</name>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <description>This register contains the  SPI words to transmit on the  serial link when FIFO used and DMA address is aligned on 256  bit.This register is an image of one of MCSPI_TX(i) register  corresponding to the channel which have its FIFO enabled.</description>
          <fields>
            <field>
              <name>DAFTDATA</name>
              <description>[31:0] FIFO Data to transmit with DMA 256 bit aligned address This  Register is only is used when MCSPI_MODULCTRL[FDAA] is set  to "1" and only one of the MCSPI_CH[i]CONF[FFEW] of enabled  channels is set If these conditions are not respected any  access to this register return a null value - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DAFRX</name>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <description>This register contains the  SPI words to received on the  serial link when FIFO used and DMA address is aligned on 256  bit.This register is an image of one of MCSPI_RX(i) register  corresponding to the channel which have its FIFO enabled.</description>
          <fields>
            <field>
              <name>DAFRDATA</name>
              <description>[31:0] FIFO Data to transmit with DMA 256 bit aligned address This  Register is only is used when MCSPI_MODULCTRL[FDAA] is set  to "1" and only one of the MCSPI_CH[i]CONF[FFEW] of enabled  channels is set If these conditions are not respected any  access to this register return a null value - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_CANCFG</name>
      <baseAddress>0x53F7F800</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>768</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_CANCFG</description>
      <registers>
        <register>
          <name>SS_PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>SS_PID</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] PID register scheme</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>BU</name>
              <description>[29:28] Business Unit: 10 = Processors</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>MODULE_ID</name>
              <description>[27:16] Module ID</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RTL</name>
              <description>[15:11] RTL revision. Will vary depending on release.</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MAJOR</name>
              <description>[10:8] Major revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MINOR</name>
              <description>[5:0] Minor revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_CTRL</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>SS_CTRL</description>
          <fields>
            <field>
              <name>NU0</name>
              <description>[31:7] Reserved</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EXT_TS_CNTR_EN</name>
              <description>[6:6] External TimeStamp Counter Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>AUTOWAKEUP</name>
              <description>[5:5] Automatic Wakeup Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>WAKEUPREGEN</name>
              <description>[4:4] Wakeup Request Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DBGSUSP_FREE</name>
              <description>[3:3] 0-Honor Debug Suspend, 1-Disregard debug suspend</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>NU</name>
              <description>[2:0] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_STAT</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>SS_STAT</description>
          <fields>
            <field>
              <name>NU1</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EN_FDOE</name>
              <description>[2:2] Reflects the value of mcanss_enable_fdoe configuration port x=mcanss_enable_fdoe</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>MMI_DONE</name>
              <description>[1:1] 0:Memory Initialization is in progress, 1:Memory Intialization Done</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>NU</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_ICS</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>SS_ICS</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ICS</name>
              <description>[0:0] This bit contains the External TimeStamp Counter Overflow Interrupt status. Write '1' to clear bits. (ICS - Interrupt Clear Shadow Register)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_IRS</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>SS_IRS</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>IRS</name>
              <description>[0:0] External TimeStamp Counter Overflow Interrupt status. Read raw interrupt status. (IRS - Interrupt Raw Status Register)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_IECS</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>SS_IECS</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>IECS</name>
              <description>[0:0] External TimeStamp Counter Overflow Interrupt. Write '1' to clear bits. (IECS - Interrupt Enable Clear Shadow Register)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_IE</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>SS_IE</description>
          <fields>
            <field>
              <name>NU5</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>IE</name>
              <description>[0:0] External TimeStamp Counter Overflow Interrupt. Write '1' to set interrupt enable. Read returns interrupt enable. (IE - Interrupt Enable Register)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_IES</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>SS_IES</description>
          <fields>
            <field>
              <name>NU6</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>IES</name>
              <description>[0:0] External TimeStamp Counter Overflow Interrupt. Read Enabled Interrupts. (IES - Interrupt Enable Status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_EOI</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>SS_EOI</description>
          <fields>
            <field>
              <name>NU7</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>EOI</name>
              <description>[7:0] Write with bit position of targeted interrupt. (E.g. Ext TS is bit 0). Upon write, level interrupt will clear and if unserviced interrupt counter &gt; 1 will issue another pulse interrupt.  Field values:   ext_ts_eoi(0): EOI value for External TS interrupt   mcan_0_eoi(1): EOI value for mcan[0] interrupt   mcan_1_eoi(2): EOI value for mcan[1] interrupt (EOI - End Of Interrupt)</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_EXT_TS_PS</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>SS_EXT_TS_PS</description>
          <fields>
            <field>
              <name>NU8</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>PRESCALE</name>
              <description>[23:0] External Timestamp Prescaler reload value. External Timestamp count rate is host clock rate divided by this value with one exception: a value of 0 has the same effect as 1 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SS_EXT_TS_USIC</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>SS_EXT_TS_USIC</description>
          <fields>
            <field>
              <name>NU9</name>
              <description>[31:5] Reserved</description>
              <bitWidth>27</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>EXT_TS_INTR_CNTR</name>
              <description>[4:0] Number of unserviced rollover interrupts. If &gt;1 an EOI write will issue another pulse interrupt (EXT_TS_USIC - External TImeStamp Unserviced Interrupts Counter)</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CREL</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>CREL</description>
          <fields>
            <field>
              <name>REL</name>
              <description>[31:28] Core Release</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>STEP</name>
              <description>[27:24] Step of Core Release</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SUBSTEP</name>
              <description>[23:20] Sub-Step of Core Release</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>YEAR</name>
              <description>[19:16] Time Stamp Year</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>MON</name>
              <description>[15:8] Time Stamp Month</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>DAY</name>
              <description>[7:0] Time Stamp Day</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ENDN</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>ENDN</description>
          <fields>
            <field>
              <name>ETV</name>
              <description>[31:0] Endianess test value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CUST</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>CUST</description>
          <fields>
            <field>
              <name>CUST</name>
              <description>[31:0] Custom</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DBTP</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>DBTP</description>
          <fields>
            <field>
              <name>NU13</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>TDC</name>
              <description>[23:23] Transmitter Delay Compensation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>NU12</name>
              <description>[22:21] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>DBRP</name>
              <description>[20:16] Data Baud Rate Prescaler</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU11</name>
              <description>[15:13] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>DTSEG1</name>
              <description>[12:8] Data time segment before smaple point</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>DTSEG2</name>
              <description>[7:4] Data time segment after sample point</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DSJW</name>
              <description>[3:0] Data resynchronization Jump Width</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TEST</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>TEST</description>
          <fields>
            <field>
              <name>NU15</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RX</name>
              <description>[7:7] Receive Pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TX</name>
              <description>[6:5] Control of Transmit Pin</description>
              <bitWidth>2</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>LBCK</name>
              <description>[4:4] Loop Back Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>NU14</name>
              <description>[3:0] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RWD</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>RWD</description>
          <fields>
            <field>
              <name>NU16</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>WDV</name>
              <description>[15:8] Watchdog Value</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>WDC</name>
              <description>[7:0] Watchdog Counter Value</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCCR</name>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <description>CCCR</description>
          <fields>
            <field>
              <name>NU18</name>
              <description>[31:15] Reserved</description>
              <bitWidth>17</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TXP</name>
              <description>[14:14] Transmit Pause</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>EFBI</name>
              <description>[13:13] Edge Filtering durign Bus Integration</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>PXHD</name>
              <description>[12:12] Protocol Exception Handling Disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NU17</name>
              <description>[11:10] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>BRSE</name>
              <description>[9:9] Bit Rate Switch Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>FDOE</name>
              <description>[8:8] FD Operation Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TEST</name>
              <description>[7:7] Test Mode enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>DAR</name>
              <description>[6:6] Disable Automatic Regransmission</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MON</name>
              <description>[5:5] Bus Monitoring Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CSR</name>
              <description>[4:4] Clock Stop Request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CSA</name>
              <description>[3:3] Clock Stop Acknowledge</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ASM</name>
              <description>[2:2] Restriced Operation Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CCE</name>
              <description>[1:1] Configuration Change Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INIT</name>
              <description>[0:0] Initialization</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>NBTP</name>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <description>NBTP</description>
          <fields>
            <field>
              <name>NSJW</name>
              <description>[31:25] Nominal Resynchronization Jump Width</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>NBRP</name>
              <description>[24:16] Nominal Baud Rate Prescaler</description>
              <bitWidth>9</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NTSEG1</name>
              <description>[15:8] Nominal Time segment before sample point</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU19</name>
              <description>[7:7] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>NTSEG2</name>
              <description>[6:0] Nominal Time segment after sample point</description>
              <bitWidth>7</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TSCC</name>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <description>TSCC</description>
          <fields>
            <field>
              <name>NU21</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TCP</name>
              <description>[19:16] Timestamp Counter Prescaler</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU20</name>
              <description>[15:2] Reserved</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TSS</name>
              <description>[1:0] Timestamp Select</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TSCV</name>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <description>TSCV</description>
          <fields>
            <field>
              <name>NU22</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TSC</name>
              <description>[15:0] Timestamp Counter</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOCC</name>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <description>TOCC</description>
          <fields>
            <field>
              <name>TOP</name>
              <description>[31:16] Timeout Period</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU23</name>
              <description>[15:3] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TOS</name>
              <description>[2:1] Timeout Select</description>
              <bitWidth>2</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ETOC</name>
              <description>[0:0] Enable Timeout Counter</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOCV</name>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <description>TOCV</description>
          <fields>
            <field>
              <name>NU24</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TOC</name>
              <description>[15:0] Timeout Counter</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES00</name>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <description>RES00</description>
          <fields>
            <field>
              <name>RES00</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES01</name>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <description>RES01</description>
          <fields>
            <field>
              <name>RES01</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES02</name>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <description>RES02</description>
          <fields>
            <field>
              <name>RES02</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES03</name>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <description>RES03</description>
          <fields>
            <field>
              <name>RES03</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECR</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>ECR</description>
          <fields>
            <field>
              <name>NU25</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CEL</name>
              <description>[23:16] CAN Error Logging</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RP</name>
              <description>[15:15] Recieve Error Passive</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>REC</name>
              <description>[14:8] Recieve Error Counter</description>
              <bitWidth>7</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TEC</name>
              <description>[7:0] Transmit Error Counter</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSR</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>PSR</description>
          <fields>
            <field>
              <name>NU27</name>
              <description>[31:23] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>TDCV</name>
              <description>[22:16] Transmitter Delay Compensation Value</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU26</name>
              <description>[15:15] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>PXE</name>
              <description>[14:14] Protocol Exception Event</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>RFDF</name>
              <description>[13:13] Recieved a CAN FD Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>RBRS</name>
              <description>[12:12] BRS flag of last recieved CAN FD Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESI</name>
              <description>[11:11] ESI flag of last recieved CAN FD Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>DLEC</name>
              <description>[10:8] Data Phase Last Error Code</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>BO</name>
              <description>[7:7] Bus_Off status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EW</name>
              <description>[6:6] Warning Status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>EP</name>
              <description>[5:5] Error Passive</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ACT</name>
              <description>[4:3] Activity</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>LEC</name>
              <description>[2:0] Last Error Code</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TDCR</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>TDCR</description>
          <fields>
            <field>
              <name>NU29</name>
              <description>[31:15] Reserved</description>
              <bitWidth>17</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TDCO</name>
              <description>[14:8] Transmitter Delay Compensation Offset</description>
              <bitWidth>7</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU28</name>
              <description>[7:7] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TDCF</name>
              <description>[6:0] Transmitter Delay Compensation Filter Window Length</description>
              <bitWidth>7</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES04</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>RES04</description>
          <fields>
            <field>
              <name>RES04</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IR</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>IR</description>
          <fields>
            <field>
              <name>NU30</name>
              <description>[31:30] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>ARA</name>
              <description>[29:29] Access to Reserved Address</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>PED</name>
              <description>[28:28] Protocol Error in data Phase</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>PEA</name>
              <description>[27:27] Protocol Error in Arbitration Phase</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>WDI</name>
              <description>[26:26] Watchdog Interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>BO</name>
              <description>[25:25] Bus_Off Status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>EW</name>
              <description>[24:24] Warning Status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>EP</name>
              <description>[23:23] Error Passive</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>ELO</name>
              <description>[22:22] Error Logging Overflow</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>BEU</name>
              <description>[21:21] Bit Error Uncorrected</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>BEC</name>
              <description>[20:20] Bit Error Corrected</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DRX</name>
              <description>[19:19] Message stored to Dedicated Rx Buffer</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TOO</name>
              <description>[18:18] Timeout Occurred</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>MRAF</name>
              <description>[17:17] Message RAM Access Failure</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TSW</name>
              <description>[16:16] Timestamp Wraparound</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TEFL</name>
              <description>[15:15] Tx Event FIFO Element Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TEFF</name>
              <description>[14:14] Tx Event FIFO Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TEFW</name>
              <description>[13:13] Tx Event FIFO Watermark Reached</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TEFN</name>
              <description>[12:12] Tx Event FIFO New Entry</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TFE</name>
              <description>[11:11] Tx FIFO Empty</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TCF</name>
              <description>[10:10] Transmission Cancellation Finished</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TC</name>
              <description>[9:9] Transmission Complete</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HPM</name>
              <description>[8:8] High Priority Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RF1L</name>
              <description>[7:7] Rx FIFO 1 Message Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RF1F</name>
              <description>[6:6] Rx FIFO 1 Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RF1W</name>
              <description>[5:5] Rx FIFO 1 Watermark Reached</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>RF1N</name>
              <description>[4:4] Rx FIFO 1 New Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RF0L</name>
              <description>[3:3] Rx FIFO 0 Message Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RF0F</name>
              <description>[2:2] Rx FIFO 0 Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RF0W</name>
              <description>[1:1] Rx FIFO 0 Watermark Reached</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RF0N</name>
              <description>[0:0] Rx FIFO 0 New Message</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IE</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>IE</description>
          <fields>
            <field>
              <name>NU31</name>
              <description>[31:30] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>ARAE</name>
              <description>[29:29] Accees to Reserve Address Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>PEDE</name>
              <description>[28:28] Protocol Error in Data Phase Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>PEAE</name>
              <description>[27:27] Protocol Error in Arbitration Phase Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>WDIE</name>
              <description>[26:26] Watchdog Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>BOE</name>
              <description>[25:25] Bus_Off Status Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>EWE</name>
              <description>[24:24] Warning Status Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>EPE</name>
              <description>[23:23] Error Passive Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>ELOE</name>
              <description>[22:22] Error Logging Overflow Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>BEUE</name>
              <description>[21:21] Bit Error Uncorrected Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>BECE</name>
              <description>[20:20] Bit Error Corrected Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DRX</name>
              <description>[19:19] Message stored to Dedicated Rx Buffer Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TOOE</name>
              <description>[18:18] Timeout Occurred Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>MRAFE</name>
              <description>[17:17] Message RAM Access Failure Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TSWE</name>
              <description>[16:16] Timestamp Wraparound Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TEFLE</name>
              <description>[15:15] Tx Event FIFO Event Lost Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TEFFE</name>
              <description>[14:14] Tx Event FIFO Full Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TEFWE</name>
              <description>[13:13] Tx Event FIFO Watermark Reached Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TEFNE</name>
              <description>[12:12] Tx Event FIFO New Entry Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TFEE</name>
              <description>[11:11] Tx FIFO Empty Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TCFE</name>
              <description>[10:10] Transmission Cancellation Finishied Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TCE</name>
              <description>[9:9] Transmission Completed Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HPME</name>
              <description>[8:8] High Priority message Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RF1LE</name>
              <description>[7:7] rx FIFO 1 Message Lost Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RF1FE</name>
              <description>[6:6] Rx FIFO 1 Full Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RF1WE</name>
              <description>[5:5] Rx FIFO 1 Watermark Reached Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>RF1NE</name>
              <description>[4:4] Rx FIFO 1 New Message Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RF0LE</name>
              <description>[3:3] Rx FIFO 0 Message Lost Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RF0FE</name>
              <description>[2:2] Rx FIFO 0 Full Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RF0WE</name>
              <description>[1:1] Rx FIFO 0 Watermark Reached Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RF0NE</name>
              <description>[0:0] Rx FIFO 0 New Message Interrupt Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ILS</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>ILS</description>
          <fields>
            <field>
              <name>NU32</name>
              <description>[31:30] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>ARAL</name>
              <description>[29:29] Accees to Reserve Address Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>PEDL</name>
              <description>[28:28] Protocol Error in Data Phase Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>PEAL</name>
              <description>[27:27] Protocol Error in Arbitration Phase Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>WDIL</name>
              <description>[26:26] Watchdog Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>BOL</name>
              <description>[25:25] Bus_Off Status Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>EWL</name>
              <description>[24:24] Warning Status Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>EPL</name>
              <description>[23:23] Error Passive Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>ELOL</name>
              <description>[22:22] Error Logging Overflow Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>BEUL</name>
              <description>[21:21] Bit Error Uncorrected Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>BECL</name>
              <description>[20:20] Bit Error Corrected Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DRXL</name>
              <description>[19:19] Message stored to Dedicated Rx Buffer Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TOOL</name>
              <description>[18:18] Timeout Occurred Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>MRAFL</name>
              <description>[17:17] Message RAM Access Failure Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TSWL</name>
              <description>[16:16] Timestamp Wraparound Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TEFLL</name>
              <description>[15:15] Tx Event FIFO Event Lost Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TEFFL</name>
              <description>[14:14] Tx Event FIFO Full Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TEFWL</name>
              <description>[13:13] Tx Event FIFO Watermark Reached Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TEFNL</name>
              <description>[12:12] Tx Event FIFO New Entry Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TFEL</name>
              <description>[11:11] Tx FIFO Empty Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TCFL</name>
              <description>[10:10] Transmission Cancellation Finishied Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TCL</name>
              <description>[9:9] Transmission Completed Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HPML</name>
              <description>[8:8] High Priority message Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RF1LL</name>
              <description>[7:7] rx FIFO 1 Message Lost Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RF1FL</name>
              <description>[6:6] Rx FIFO 1 Full Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RF1WL</name>
              <description>[5:5] Rx FIFO 1 Watermark Reached Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>RF1NL</name>
              <description>[4:4] Rx FIFO 1 New Message Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RF0LL</name>
              <description>[3:3] Rx FIFO 0 Message Lost Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RF0FL</name>
              <description>[2:2] Rx FIFO 0 Full Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RF0WL</name>
              <description>[1:1] Rx FIFO 0 Watermark Reached Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RF0NL</name>
              <description>[0:0] Rx FIFO 0 New Message Interrupt Line</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ILE</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>ILE</description>
          <fields>
            <field>
              <name>NU33</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>EINT1</name>
              <description>[1:1] Enable Interrupt Line 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EINT0</name>
              <description>[0:0] Enable Interrupt Line 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES05</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>RES05</description>
          <fields>
            <field>
              <name>RES05</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES06</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>RES06</description>
          <fields>
            <field>
              <name>RES06</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES07</name>
          <addressOffset>0x268</addressOffset>
          <size>32</size>
          <description>RES07</description>
          <fields>
            <field>
              <name>RES07</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES08</name>
          <addressOffset>0x26C</addressOffset>
          <size>32</size>
          <description>RES08</description>
          <fields>
            <field>
              <name>RES08</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES09</name>
          <addressOffset>0x270</addressOffset>
          <size>32</size>
          <description>RES09</description>
          <fields>
            <field>
              <name>RES09</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES10</name>
          <addressOffset>0x274</addressOffset>
          <size>32</size>
          <description>RES10</description>
          <fields>
            <field>
              <name>RES10</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES11</name>
          <addressOffset>0x278</addressOffset>
          <size>32</size>
          <description>RES11</description>
          <fields>
            <field>
              <name>RES11</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES12</name>
          <addressOffset>0x27C</addressOffset>
          <size>32</size>
          <description>RES12</description>
          <fields>
            <field>
              <name>RES12</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GFC</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>GFC</description>
          <fields>
            <field>
              <name>NU34</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ANFS</name>
              <description>[5:4] Accept Non-matching Frames Standard</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ANFE</name>
              <description>[3:2] Accept Non-matching Frames Extended</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RRFS</name>
              <description>[1:1] reject Remote Frames Standard</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RRFE</name>
              <description>[0:0] reject Remote Frames Extended</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIDFC</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>SIDFC</description>
          <fields>
            <field>
              <name>NU36</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>LSS_S</name>
              <description>[23:16] List Size Standard</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>FLSSA_S</name>
              <description>[15:2] Filter List Standard Start Address</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU35</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XIDFC</name>
          <addressOffset>0x288</addressOffset>
          <size>32</size>
          <description>XIDFC</description>
          <fields>
            <field>
              <name>NU38</name>
              <description>[31:23] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>LSS_X</name>
              <description>[22:16] List Size Standard</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>FLSSA_X</name>
              <description>[15:2] Filter List Standard Start Address</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU37</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES13</name>
          <addressOffset>0x28C</addressOffset>
          <size>32</size>
          <description>RES13</description>
          <fields>
            <field>
              <name>RES13</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XIDAM</name>
          <addressOffset>0x290</addressOffset>
          <size>32</size>
          <description>XIDAM</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:29] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>EIDM</name>
              <description>[28:0] Extended ID Mask</description>
              <bitWidth>29</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HPMS</name>
          <addressOffset>0x294</addressOffset>
          <size>32</size>
          <description>HPMS</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>FLST</name>
              <description>[15:15] Filter List</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>FIDX</name>
              <description>[14:8] Filter Index</description>
              <bitWidth>7</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>MSI</name>
              <description>[7:6] Message Storeage Indicator</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>BIDX</name>
              <description>[5:0] Buffer Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>NDAT1</name>
          <addressOffset>0x298</addressOffset>
          <size>32</size>
          <description>NDAT1</description>
          <fields>
            <field>
              <name>ND0_31</name>
              <description>[31:0] New Data 0-31</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>NDAT2</name>
          <addressOffset>0x29C</addressOffset>
          <size>32</size>
          <description>NDAT2</description>
          <fields>
            <field>
              <name>ND32_63</name>
              <description>[31:0] New Data 32-63</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF0C</name>
          <addressOffset>0x2A0</addressOffset>
          <size>32</size>
          <description>RXF0C</description>
          <fields>
            <field>
              <name>F0OM</name>
              <description>[31:31] Rx FIFO 0 Operation Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>F0WM</name>
              <description>[30:24] Rx FIFO 0 Watermark</description>
              <bitWidth>7</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU42_1</name>
              <description>[23:23] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>F0S</name>
              <description>[22:16] Rx FIFO 0 Size</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU42</name>
              <description>[15:15] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>F0SA</name>
              <description>[14:2] Rx FIFO 0 Start Address</description>
              <bitWidth>13</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU41</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF0S</name>
          <addressOffset>0x2A4</addressOffset>
          <size>32</size>
          <description>RXF0S</description>
          <fields>
            <field>
              <name>NU46</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>RF0L</name>
              <description>[25:25] Rx FIFO 0 Message Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>F0F</name>
              <description>[24:24] Rx FIFO 0 Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU45</name>
              <description>[23:22] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>F0PI</name>
              <description>[21:16] Rx FIFO 0 Put Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU44</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>F0GI</name>
              <description>[13:8] Rx FIFO 0 Get Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU43</name>
              <description>[7:7] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>F0FL</name>
              <description>[6:0] Rx FIFO 0 Fill Level</description>
              <bitWidth>7</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF0A</name>
          <addressOffset>0x2A8</addressOffset>
          <size>32</size>
          <description>RXF0A</description>
          <fields>
            <field>
              <name>NU47</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>F0AI</name>
              <description>[5:0] Rx FIFO 0 Acknowledge Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXBC</name>
          <addressOffset>0x2AC</addressOffset>
          <size>32</size>
          <description>RXBC</description>
          <fields>
            <field>
              <name>NU49</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RBSA</name>
              <description>[15:2] Rx Buffer Start Address</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU48</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF1C</name>
          <addressOffset>0x2B0</addressOffset>
          <size>32</size>
          <description>RXF1C</description>
          <fields>
            <field>
              <name>F1OM</name>
              <description>[31:31] Rx FIFO 0 Operation Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>F1WM</name>
              <description>[30:24] Rx FIFO 0 Watermark</description>
              <bitWidth>7</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU50_1</name>
              <description>[23:23] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>F1S</name>
              <description>[22:16] Rx FIFO 0 Size</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU50</name>
              <description>[15:15] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>F1SA</name>
              <description>[14:2] Rx FIFO 0 Start Address</description>
              <bitWidth>13</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU499</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF1S</name>
          <addressOffset>0x2B4</addressOffset>
          <size>32</size>
          <description>RXF1S</description>
          <fields>
            <field>
              <name>NU54</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>RF1L</name>
              <description>[25:25] Rx FIFO 0 Message Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>F1F</name>
              <description>[24:24] Rx FIFO 0 Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU53</name>
              <description>[23:22] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>F1PI</name>
              <description>[21:16] Rx FIFO 0 Put Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU52</name>
              <description>[15:14] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>F1GI</name>
              <description>[13:8] Rx FIFO 0 Get Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU51</name>
              <description>[7:7] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>F1FL</name>
              <description>[6:0] Rx FIFO 0 Fill Level</description>
              <bitWidth>7</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXF1A</name>
          <addressOffset>0x2B8</addressOffset>
          <size>32</size>
          <description>RXF1A</description>
          <fields>
            <field>
              <name>NU55</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>F1AI</name>
              <description>[5:0] Rx FIFO 0 Acknowledge Index</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RXESC</name>
          <addressOffset>0x2BC</addressOffset>
          <size>32</size>
          <description>RXESC</description>
          <fields>
            <field>
              <name>NU58</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>RBDS</name>
              <description>[10:8] Rx Buffer data Field Size</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU57</name>
              <description>[7:7] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>F1DS</name>
              <description>[6:4] Rx FIFO 1 Data Field Size</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>NU56</name>
              <description>[3:3] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>F0DS</name>
              <description>[2:0] Rx FIFO 0 Data Field Size</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBC</name>
          <addressOffset>0x2C0</addressOffset>
          <size>32</size>
          <description>TXBC</description>
          <fields>
            <field>
              <name>NU61</name>
              <description>[31:31] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>TFQM</name>
              <description>[30:30] Tx FIFO/Queue Mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>TFQS</name>
              <description>[29:24] Transmit FIFO/Queue Size</description>
              <bitWidth>6</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU60</name>
              <description>[23:22] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>NDTB</name>
              <description>[21:16] Number of Dedicated Transmit Buffers</description>
              <bitWidth>6</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TBSA</name>
              <description>[15:2] Tx Buffers Start Address</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU59</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXFQS</name>
          <addressOffset>0x2C4</addressOffset>
          <size>32</size>
          <description>TXFQS</description>
          <fields>
            <field>
              <name>NU64</name>
              <description>[31:22] Reserved</description>
              <bitWidth>10</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>TFQF</name>
              <description>[21:21] Tx FIFO/Queue Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>TFQPI</name>
              <description>[20:16] Tx FIFO/Queue Put Index</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU63</name>
              <description>[15:13] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TFGI</name>
              <description>[12:8] Tx Queue Get Index</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU62</name>
              <description>[7:6] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TFFL</name>
              <description>[5:0] Tx FIFO Free Level</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXESC</name>
          <addressOffset>0x2C8</addressOffset>
          <size>32</size>
          <description>TXESC</description>
          <fields>
            <field>
              <name>NU65</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TBDS</name>
              <description>[2:0] Tx Buffer Data Field Size</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBRP</name>
          <addressOffset>0x2CC</addressOffset>
          <size>32</size>
          <description>TXBRP</description>
          <fields>
            <field>
              <name>TRP</name>
              <description>[31:0] Transmission Request Pending</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBAR</name>
          <addressOffset>0x2D0</addressOffset>
          <size>32</size>
          <description>TXBAR</description>
          <fields>
            <field>
              <name>AR</name>
              <description>[31:0] Add request</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBCR</name>
          <addressOffset>0x2D4</addressOffset>
          <size>32</size>
          <description>TXBCR</description>
          <fields>
            <field>
              <name>CR</name>
              <description>[31:0] Cancellation Request</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBTO</name>
          <addressOffset>0x2D8</addressOffset>
          <size>32</size>
          <description>TXBTO</description>
          <fields>
            <field>
              <name>TO</name>
              <description>[31:0] Transmission Occurred</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBCF</name>
          <addressOffset>0x2DC</addressOffset>
          <size>32</size>
          <description>TXBCF</description>
          <fields>
            <field>
              <name>CF</name>
              <description>[31:0] Cancellation Finished</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBTIE</name>
          <addressOffset>0x2E0</addressOffset>
          <size>32</size>
          <description>TXBTIE</description>
          <fields>
            <field>
              <name>TIE</name>
              <description>[31:0] Transmission Interrupt Enable</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXBCIE</name>
          <addressOffset>0x2E4</addressOffset>
          <size>32</size>
          <description>TXBCIE</description>
          <fields>
            <field>
              <name>CFIE</name>
              <description>[31:0] Cancellation Finished Interrupt Enable</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES14</name>
          <addressOffset>0x2E8</addressOffset>
          <size>32</size>
          <description>RES14</description>
          <fields>
            <field>
              <name>RES14</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES15</name>
          <addressOffset>0x2EC</addressOffset>
          <size>32</size>
          <description>RES15</description>
          <fields>
            <field>
              <name>RES15</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXEFC</name>
          <addressOffset>0x2F0</addressOffset>
          <size>32</size>
          <description>TXEFC</description>
          <fields>
            <field>
              <name>NU68</name>
              <description>[31:30] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>EFWM</name>
              <description>[29:24] Event FIFO Watermark</description>
              <bitWidth>6</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU67</name>
              <description>[23:22] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>EFS</name>
              <description>[21:16] Event FIFO Size</description>
              <bitWidth>6</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EFSA</name>
              <description>[15:2] Event FIFO Start Address</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NU66</name>
              <description>[1:0] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXEFS</name>
          <addressOffset>0x2F4</addressOffset>
          <size>32</size>
          <description>TXEFS</description>
          <fields>
            <field>
              <name>NU72</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>TEFL</name>
              <description>[25:25] Tx Event FIFO Element Lost</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>EFF</name>
              <description>[24:24] Event FIFO Full</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU71</name>
              <description>[23:21] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>EFPI</name>
              <description>[20:16] Event FIFO Put Index</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU70</name>
              <description>[15:13] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>EFGI</name>
              <description>[12:8] Event FIFO Get Index</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU69</name>
              <description>[7:6] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>EFFL</name>
              <description>[5:0] Event FIFO FIll Level</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TXEFA</name>
          <addressOffset>0x2F8</addressOffset>
          <size>32</size>
          <description>TXEFA</description>
          <fields>
            <field>
              <name>NU73</name>
              <description>[31:5] Reserved</description>
              <bitWidth>27</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>EFAI</name>
              <description>[4:0] Event FIFO Acknowledge Index</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RES16</name>
          <addressOffset>0x2FC</addressOffset>
          <size>32</size>
          <description>RES16</description>
          <fields>
            <field>
              <name>RES16</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_CANECC</name>
      <baseAddress>0x53F7FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>784</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_CANECC</description>
      <registers>
        <register>
          <name>REV</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Aggregator Revision Register</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] Scheme</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>BU</name>
              <description>[29:28] bu</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>MODULE_ID</name>
              <description>[27:16] Module ID</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>REVRTL</name>
              <description>[15:11] RTL version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>REVMAJ</name>
              <description>[10:8] Major version</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom version</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>REVMIN</name>
              <description>[5:0] Minor version</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>VECTOR</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>ECC Vector Register</description>
          <fields>
            <field>
              <name>NU1</name>
              <description>[31:25] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS_DONE</name>
              <description>[24:24] Status to indicate if read on serial VBUS is complete, write of any value will clear this bit. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS_ADDR</name>
              <description>[23:16] Read address</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS</name>
              <description>[15:15] Write 1 to trigger a read on the serial VBUS. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>NU0</name>
              <description>[14:11] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>ECC_VEC</name>
              <description>[10:0] Value written to select the corresponding ECC RAM for control or status</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>STAT</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Misc Status</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>NUM_RAMS</name>
              <description>[10:0] Indicates the number of RAMS serviced by the ECC aggregator</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CTRL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>CTRL</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:9] TI Internal : Reserved</description>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CHECK TIMEOUT</name>
              <description>[8:8] TI Internal : Check timeout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CHECK PARITY</name>
              <description>[7:7] TI Internal : Check Parity</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>ERROR_ONCE</name>
              <description>[6:6] TI Internal : Force Error only once</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>FORCE_N_ROW</name>
              <description>[5:5] TI Internal : Force Error on any RAM read</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>FORCE_DED</name>
              <description>[4:4] TI Internal : Force Double Bit Error</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>FORCE_SEC</name>
              <description>[3:3] TI Internal : Force Single Bit Error</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EN_RMW</name>
              <description>[2:2] TI Internal : Enable rmw</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ECC_CHK</name>
              <description>[1:1] TI Internal : Enable ECC check</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ECC_EN</name>
              <description>[0:0] TI Internal : Enable ECC</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERR_CTRL1</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>ERR_CTRL1</description>
          <fields>
            <field>
              <name>ECC_ROW</name>
              <description>[31:0] TI Internal : Row address where single or double-bit error needs to be applied. This is ignored if force_n_row is set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERR_CTRL2</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>ERR_CTRL2</description>
          <fields>
            <field>
              <name>ECC_BIT2</name>
              <description>[31:16] TI Internal : Data bit that needs to be flipped if double bit error needs to be forced</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ECC_BIT1</name>
              <description>[15:0] TI Internal : Data bit that needs to be flipped when force_sec is set</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERR_STAT1</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>ERR_STAT1</description>
          <fields>
            <field>
              <name>ECC_BIT1_STS</name>
              <description>[31:16] TI Internal : Data bit that corresponds to the single-bit error</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_CTRL_REG</name>
              <description>[15:15] TI Internal : Clear Ctrl Reg Error Status. Write 1 to clear. This bit is self clearing.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_PAR</name>
              <description>[14:13] TI Internal : Clear Parity Error Status. Write 1 to clear. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_OTHER</name>
              <description>[12:12] TI Internal : Clear Other Error Status. Write 1 to clear. This bit is self clearing.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_DED</name>
              <description>[11:10] TI Internal : Clear Double Bit Error Status. Write 1 to clear. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_SEC</name>
              <description>[9:8] TI Internal : Clear Single Bit Error Status. Write 1 to clear. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ECC_CTRL_REG</name>
              <description>[7:7] TI Internal : Force ctrl reg pending interrupt. Write 1 to set. This bit is self clearing.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>ECC_PAR</name>
              <description>[6:5] TI Internal : Force ECC parity pending interrupt. Write 1 to set. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ECC_OTHER</name>
              <description>[4:4] TI Internal : Force ECC other pending interrupt. Write 1 to set. This bit is self clearing.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ECC_DED</name>
              <description>[3:2] TI Internal : Force ECC DED pending interrupt. Write 1 to set. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ECC_SEC</name>
              <description>[1:0] TI Internal : Force ECC SEC pending interrupt. Write 1 to set. This bit is self clearing.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERR_STAT2</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>ERR_STAT2</description>
          <fields>
            <field>
              <name>ECC_ROW</name>
              <description>[31:0] TI Internal : Row address where the single or double-bit error has occurred</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERR_STAT3</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>ERR_STAT3</description>
          <fields>
            <field>
              <name>NU6</name>
              <description>[31:10] TI Internal : Reserved</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_TIMEOUT_PEND</name>
              <description>[9:9] TI Internal : Clear timeout pending</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>NU5</name>
              <description>[8:2] TI Internal : Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMEOUT_PEND</name>
              <description>[1:1] TI Internal : Timeout pending</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>NU4</name>
              <description>[0:0] TI Internal : Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_EOI_REG</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>EOI Register</description>
          <fields>
            <field>
              <name>NU7</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SEC_EOI_WR</name>
              <description>[0:0] EOI Register. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field. This bit is self clearing, reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_STATUS_REG0</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register 0</description>
          <fields>
            <field>
              <name>NU8</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_PEND</name>
              <description>[1:1] Interrupt Pending Status for ctrl_edc_vbuss_pend.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SEC_PEND</name>
              <description>[0:0] Interrupt Pending Status for msgmem_pend.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_ENABLE_SET_REG0</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Set Register 0</description>
          <fields>
            <field>
              <name>NU9</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_ENABLE_SET</name>
              <description>[1:1] Interrupt Enable Set Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SEC_EN_SET</name>
              <description>[0:0] Interrupt Enable Set Register for msgmem_pend.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_ENABLE_CLR_REG0</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear Register 0</description>
          <fields>
            <field>
              <name>NU10</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_ENABLE_CLR</name>
              <description>[1:1] Interrupt Enable Clear Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SEC_EN_CLR</name>
              <description>[0:0] Interrupt Enable Clear Register for msgmem_pend.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field. Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_EOI_REG</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>EOI Register</description>
          <fields>
            <field>
              <name>NU11</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DED_EOI_WR</name>
              <description>[0:0] EOI Register. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field. This bit is self clearing, reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_STATUS_REG0</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register 0</description>
          <fields>
            <field>
              <name>NU12</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_PEND</name>
              <description>[1:1] Interrupt Pending Status for ctrl_edc_vbuss_pend.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DED_PEND</name>
              <description>[0:0] Interrupt Pending Status for msgmem_pend.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_ENABLE_SET_REG0</name>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Set Register 0</description>
          <fields>
            <field>
              <name>NU13</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_ENABLE_SET</name>
              <description>[1:1] Interrupt Enable Set Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DED_EN_SET</name>
              <description>[0:0] Interrupt Enable Set Register for msgmem_pend.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_ENABLE_CLR_REG0</name>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear Register 0</description>
          <fields>
            <field>
              <name>NU14</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CTRL_EDC_VBUSS_ENABLE_CLR</name>
              <description>[1:1] Interrupt Enable Clear Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DED_EN_CLR</name>
              <description>[0:0] Interrupt Enable Clear Register for msgmem_pend.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field. Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_ENABLE_SET</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>AGGR interrupt enable set Register</description>
          <fields>
            <field>
              <name>NU15</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[1:1] Interrupt Enable Set Register for svbus timeout errors. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[0:0] Interrupt Enable Set Register for parity errors.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_ENABLE_CLR</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>AGGR interrupt enable clear Register</description>
          <fields>
            <field>
              <name>NU16</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[1:1] Interrupt Enable Clear for svbus timeout errors. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[0:0] Interrupt Enable Clear for parity errors.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_STATUS_SET</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>AGGR interrupt status set Register</description>
          <fields>
            <field>
              <name>NU17</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[3:2] Interrupt status set for svbus timeout errors. A write to increment field. Writing a value to this field increment the field value by the value written. Reads do not alter the value of the field.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[1:0] Interrupt status set for parity errors. A write to increment field. Writing a value to this field increment the field value by the value written. Reads do not alter the value of the field.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_STATUS_CLR</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>AGGR interrupt status clear Register</description>
          <fields>
            <field>
              <name>NU18</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[3:2] Interrupt status clear for svbus timeout errors. A write to decrement field. Writing a value to this field decrements the field value by the value written. Reads do not alter the value of the field.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[1:0] Interrupt status clear for parity errors. A write to decrement field. Writing a value to this field decrements the field value by the value written. Reads do not alter the value of the field.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPTC_A0</name>
      <baseAddress>0x54000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>860</size>
        <usage>registers</usage>
      </addressBlock>
      <description>Register test environment</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <description>[31:30] PID Scheme: Used to distinguish between old ID scheme and current. Spare bit to encode future schemes EDMA uses 'new scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            <name>PID_SCHEME</name></field>
            <field>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            <name>FUNCTION_INDICATES_A</name></field>
            <field>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>RTL_VERSION</name></field>
            <field>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>MAJOR_REVISION</name></field>
            <field>
              <description>[7:6] Custom revision field: Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>CUSTOM_REVISION_FIELD</name></field>
            <field>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>MINOR_REVISION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>TC Configuration Register</description>
          <fields>
            <field>
              <description>[9:8] Dst Register FIFO Depth Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            <name>DST_REGISTER_FIFO</name></field>
            <field>
              <description>[5:4] Bus Width Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            <name>BUS_WIDTH_PARAMETERIZATION</name></field>
            <field>
              <description>[2:0] Fifo Size Parameterization</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FIFO_SIZE_PARAMETERIZATION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCSTAT</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>TC Status Register</description>
          <fields>
            <field>
              <description>[13:12] Dst FIFO Start Pointer#br#Represents the offset to the head entry of Dst Register FIFO in units of entries. Legal values = 0x0 to 0x3</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            <name>DST_FIFO_START</name></field>
            <field>
              <description>[8:8] Channel Active#br#Channel Active is a logical-OR of each of the BUSY/ACTV signals. The ACTV bit must remain high through the life of a TR.#br#ACTV = 0 : Channel is idle.#br#ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>CHANNEL_ACTIVE</name></field>
            <field>
              <description>[6:4] Destination Active State#br#Specifies the number of TRs that are resident in the Dst Register FIFO at a given instant.#br#Legal values are constrained by the DSTREGDEPTH parameter.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>DESTINATION_ACTIVE_STATE</name></field>
            <field>
              <description>[2:2] Write Status Active#br#WSACTV = 0 : Write status is not pending. Write status has been received for all previously issued write commands.#br#WSACTV = 1 : Write Status is pending. Write status has not been received for all previously issued write commands.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>WRITE_STATUS_ACTIVE</name></field>
            <field>
              <description>[1:1] Source Active State#br#SRCACTV = 0 : Source Active set is idle. Any TR written to Prog Set will immediately transition to Source Active set as long as the Dst FIFO Set is not full [DSTFULL == 1].#br#SRCACTV = 1 : Source Active set is busy either performing read transfers or waiting to perform read transfers for current Transfer Request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SOURCE_ACTIVE_STATE</name></field>
            <field>
              <description>[0:0] Program Register Set Busy#br#PROGBUSY = 0 : Prog set idle and is available for programming.#br#PROGBUSY = 1 : Prog set busy. User should poll for PROGBUSY equal to '0' prior to re-programming the Program Register set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_REGISTER_SET</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTSTAT</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Status:#br#TRDONE = 0 : Condition not detected.#br#TRDONE = 1 : Set when TC has completed a Transfer Request. TRDONE should be set when the write status is returned for the final write of a TR. Cleared when user writes '1' to INTCLR.TRDONE register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Status:#br#PROGEMPTY = 0 : Condition not detected.#br#PROGEMPTY = 1 : Set when Program Register set transitions to empty state. Cleared when user writes '1' to INTCLR.PROGEMPTY register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTEN</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Enable:#br#INTEN.TRDONE = 0 : TRDONE Event is disabled.#br#INTEN.TRDONE = 1 : TRDONE Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Enable:#br#INTEN.PROGEMPTY = 0 : PROGEMPTY Event is disabled.#br#INTEN.PROGEMPTY = 1 : PROGEMPTY Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCLR</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Clear:#br#INTCLR.TRDONE = 0 : Writes of '0' have no effect.#br#INTCLR.TRDONE = 1 : Write of '1' clears INTSTAT.TRDONE bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Clear:#br#INTCLR.PROGEMPTY = 0 : Writes of '0' have no effect.#br#INTCLR.PROGEMPTY = 1 : Write of '1' clears INTSTAT.PROGEMPTY bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCMD</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>Interrupt Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC interrupt:#br#Write of '1' to SET causes TPTC interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_INTERRUPT</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC interrupt#br#Write of '1' to EVAL causes TPTC interrupt to be pulsed if any of the INTSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRSTAT</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>Error Status Register</description>
          <fields>
            <field>
              <description>[3:3] MMR Address Error:#br#MMRAERR = 0 : Condition not detected.#br#MMRAERR = 1 : User attempted to read or write to invalid address configuration memory map. [Is only be set for non-emulation accesses]. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>MMR_ADDRESS_ERROR</name></field>
            <field>
              <description>[2:2] TR Error:#br#TR detected that violates FIFO Mode transfer [SAM or DAM is '1'] alignment rules or has ACNT or BCNT == 0. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>TR_ERROR</name></field>
            <field>
              <description>[0:0] Bus Error Event:#br#BUSERR = 0: Condition not detected.#br#BUSERR = 1: TC has detected an error code on the write response bus or read response bus. Error information is stored in Error Details Register [ERRDET].</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BUS_ERROR_EVENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERREN</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>Error Enable Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt enable for ERRSTAT.MMRAERR:#br#ERREN.MMRAERR = 0 : BUSERR is disabled.#br#ERREN.MMRAERR = 1 : MMRAERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_ENABLE_FOR</name></field>
            <field>
              <description>[2:2] Interrupt enable for ERRSTAT.TRERR:#br#ERREN.TRERR = 0 : BUSERR is disabled.#br#ERREN.TRERR = 1 : TRERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt enable for ERRSTAT.BUSERR:#br#ERREN.BUSERR = 0 : BUSERR is disabled.#br#ERREN.BUSERR = 1 : BUSERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCLR</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>Error Clear Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt clear for ERRSTAT.MMRAERR:#br#ERRCLR.MMRAERR = 0 : Writes of '0' have no effect.#br#ERRCLR.MMRAERR = 1 : Write of '1' clears ERRSTAT.MMRAERR bit. Write of '1' to ERRCLR.MMRAERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_CLEAR_FOR</name></field>
            <field>
              <description>[2:2] Interrupt clear for ERRSTAT.TRERR:#br#ERRCLR.TRERR = 0 : Writes of '0' have no effect.#br#ERRCLR.TRERR = 1 : Write of '1' clears ERRSTAT.TRERR bit. Write of '1' to ERRCLR.TRERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt clear for ERRSTAT.BUSERR:#br#ERRCLR.BUSERR = 0 : Writes of '0' have no effect.#br#ERRCLR.BUSERR = 1 : Write of '1' clears ERRSTAT.BUSERR bit. Write of '1' to  ERRCLR.BUSERR clears the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRDET</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>Error Details Register</description>
          <fields>
            <field>
              <description>[17:17] Contains the OPT.TCCHEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            <name>CONTAINS_THE_OPT_TCCHEN</name></field>
            <field>
              <description>[16:16] Contains the OPT.TCINTEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            <name>CONTAINS_THE_OPT_TCINTEN</name></field>
            <field>
              <description>[13:8] Transfer Complete Code: Contains the OPT.TCC value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[3:0] Transaction Status:#br#Stores the non-zero status/error code that was detected on the read status or write status bus.#br#MS-bit effectively serves as the read vs. write error code.#br#If read status and write status are returned on the same cycle then the TC chooses non-zero version. If both are non-zero then write status is treated as higher priority.#br#Encoding of errors matches the CBA spec.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>TRANSACTION_STATUS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCMD</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>Error Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC error interrupt:#br#Write of '1' to SET causes TPTC error interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_ERROR</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC error interrupt#br#Write of '1' to EVAL causes TPTC error interrupt to be pulsed if any of the ERRSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RDRATE</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Read Rate Register</description>
          <fields>
            <field>
              <description>[2:0] Read Rate Control: Controls the number of cycles between read commands. This is a global setting that applies to all TRs for this TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>READ_RATE_CONTROL</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>POPT</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>Prog Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSRC</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>Prog Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PCNT</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>Prog Set Count</description>
          <fields>
            <field>
              <description>[31:16] B-Dimension count. Number of arrays to be transferred where each array is ACNT in length.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>BDIMENSION_COUNT__NUMBER</name></field>
            <field>
              <description>[15:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PDST</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>Prog Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIDX</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>Prog Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Program Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Program Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PMPPRXY</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>Prog Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAOPT</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>Src Actv Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRC</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNT</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>Src Actv Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADST</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABIDX</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Source Active Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Source Active Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAMPPRXY</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>Src Actv Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNTRLD</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>Src Actv Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Source Active Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRCBREF</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Source Active Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADSTBREF</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Dst address reference is not applicable for Src Active Register Set. Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DST_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABCNT</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Dimension count:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Count Remaining for Src Active Register Set. Represents the amount of data remaining to be read. Initial value is copied from PCNT. TC decrements ACNT and BCNT as necessary after each read command is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BDIMENSION_COUNT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFCNTRLD</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Destination FIFO Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRCBREF</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Destination FIFO Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT0</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC0</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT0</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST0</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX0</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY0</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT0</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT1</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC1</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT1</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST1</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_3</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX1</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY1</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT1</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPTC_A1</name>
      <baseAddress>0x54010000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>860</size>
        <usage>registers</usage>
      </addressBlock>
      <description>Register test environment</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <description>[31:30] PID Scheme: Used to distinguish between old ID scheme and current. Spare bit to encode future schemes EDMA uses 'new scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            <name>PID_SCHEME</name></field>
            <field>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            <name>FUNCTION_INDICATES_A</name></field>
            <field>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>RTL_VERSION</name></field>
            <field>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>MAJOR_REVISION</name></field>
            <field>
              <description>[7:6] Custom revision field: Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>CUSTOM_REVISION_FIELD</name></field>
            <field>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>MINOR_REVISION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>TC Configuration Register</description>
          <fields>
            <field>
              <description>[9:8] Dst Register FIFO Depth Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            <name>DST_REGISTER_FIFO</name></field>
            <field>
              <description>[5:4] Bus Width Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            <name>BUS_WIDTH_PARAMETERIZATION</name></field>
            <field>
              <description>[2:0] Fifo Size Parameterization</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FIFO_SIZE_PARAMETERIZATION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCSTAT</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>TC Status Register</description>
          <fields>
            <field>
              <description>[13:12] Dst FIFO Start Pointer#br#Represents the offset to the head entry of Dst Register FIFO in units of entries. Legal values = 0x0 to 0x3</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            <name>DST_FIFO_START</name></field>
            <field>
              <description>[8:8] Channel Active#br#Channel Active is a logical-OR of each of the BUSY/ACTV signals. The ACTV bit must remain high through the life of a TR.#br#ACTV = 0 : Channel is idle.#br#ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>CHANNEL_ACTIVE</name></field>
            <field>
              <description>[6:4] Destination Active State#br#Specifies the number of TRs that are resident in the Dst Register FIFO at a given instant.#br#Legal values are constrained by the DSTREGDEPTH parameter.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>DESTINATION_ACTIVE_STATE</name></field>
            <field>
              <description>[2:2] Write Status Active#br#WSACTV = 0 : Write status is not pending. Write status has been received for all previously issued write commands.#br#WSACTV = 1 : Write Status is pending. Write status has not been received for all previously issued write commands.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>WRITE_STATUS_ACTIVE</name></field>
            <field>
              <description>[1:1] Source Active State#br#SRCACTV = 0 : Source Active set is idle. Any TR written to Prog Set will immediately transition to Source Active set as long as the Dst FIFO Set is not full [DSTFULL == 1].#br#SRCACTV = 1 : Source Active set is busy either performing read transfers or waiting to perform read transfers for current Transfer Request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SOURCE_ACTIVE_STATE</name></field>
            <field>
              <description>[0:0] Program Register Set Busy#br#PROGBUSY = 0 : Prog set idle and is available for programming.#br#PROGBUSY = 1 : Prog set busy. User should poll for PROGBUSY equal to '0' prior to re-programming the Program Register set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_REGISTER_SET</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTSTAT</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Status:#br#TRDONE = 0 : Condition not detected.#br#TRDONE = 1 : Set when TC has completed a Transfer Request. TRDONE should be set when the write status is returned for the final write of a TR. Cleared when user writes '1' to INTCLR.TRDONE register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Status:#br#PROGEMPTY = 0 : Condition not detected.#br#PROGEMPTY = 1 : Set when Program Register set transitions to empty state. Cleared when user writes '1' to INTCLR.PROGEMPTY register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTEN</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Enable:#br#INTEN.TRDONE = 0 : TRDONE Event is disabled.#br#INTEN.TRDONE = 1 : TRDONE Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Enable:#br#INTEN.PROGEMPTY = 0 : PROGEMPTY Event is disabled.#br#INTEN.PROGEMPTY = 1 : PROGEMPTY Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCLR</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Clear:#br#INTCLR.TRDONE = 0 : Writes of '0' have no effect.#br#INTCLR.TRDONE = 1 : Write of '1' clears INTSTAT.TRDONE bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Clear:#br#INTCLR.PROGEMPTY = 0 : Writes of '0' have no effect.#br#INTCLR.PROGEMPTY = 1 : Write of '1' clears INTSTAT.PROGEMPTY bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCMD</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>Interrupt Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC interrupt:#br#Write of '1' to SET causes TPTC interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_INTERRUPT</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC interrupt#br#Write of '1' to EVAL causes TPTC interrupt to be pulsed if any of the INTSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRSTAT</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>Error Status Register</description>
          <fields>
            <field>
              <description>[3:3] MMR Address Error:#br#MMRAERR = 0 : Condition not detected.#br#MMRAERR = 1 : User attempted to read or write to invalid address configuration memory map. [Is only be set for non-emulation accesses]. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>MMR_ADDRESS_ERROR</name></field>
            <field>
              <description>[2:2] TR Error:#br#TR detected that violates FIFO Mode transfer [SAM or DAM is '1'] alignment rules or has ACNT or BCNT == 0. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>TR_ERROR</name></field>
            <field>
              <description>[0:0] Bus Error Event:#br#BUSERR = 0: Condition not detected.#br#BUSERR = 1: TC has detected an error code on the write response bus or read response bus. Error information is stored in Error Details Register [ERRDET].</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BUS_ERROR_EVENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERREN</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>Error Enable Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt enable for ERRSTAT.MMRAERR:#br#ERREN.MMRAERR = 0 : BUSERR is disabled.#br#ERREN.MMRAERR = 1 : MMRAERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_ENABLE_FOR</name></field>
            <field>
              <description>[2:2] Interrupt enable for ERRSTAT.TRERR:#br#ERREN.TRERR = 0 : BUSERR is disabled.#br#ERREN.TRERR = 1 : TRERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt enable for ERRSTAT.BUSERR:#br#ERREN.BUSERR = 0 : BUSERR is disabled.#br#ERREN.BUSERR = 1 : BUSERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCLR</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>Error Clear Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt clear for ERRSTAT.MMRAERR:#br#ERRCLR.MMRAERR = 0 : Writes of '0' have no effect.#br#ERRCLR.MMRAERR = 1 : Write of '1' clears ERRSTAT.MMRAERR bit. Write of '1' to ERRCLR.MMRAERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_CLEAR_FOR</name></field>
            <field>
              <description>[2:2] Interrupt clear for ERRSTAT.TRERR:#br#ERRCLR.TRERR = 0 : Writes of '0' have no effect.#br#ERRCLR.TRERR = 1 : Write of '1' clears ERRSTAT.TRERR bit. Write of '1' to ERRCLR.TRERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt clear for ERRSTAT.BUSERR:#br#ERRCLR.BUSERR = 0 : Writes of '0' have no effect.#br#ERRCLR.BUSERR = 1 : Write of '1' clears ERRSTAT.BUSERR bit. Write of '1' to  ERRCLR.BUSERR clears the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRDET</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>Error Details Register</description>
          <fields>
            <field>
              <description>[17:17] Contains the OPT.TCCHEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            <name>CONTAINS_THE_OPT_TCCHEN</name></field>
            <field>
              <description>[16:16] Contains the OPT.TCINTEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            <name>CONTAINS_THE_OPT_TCINTEN</name></field>
            <field>
              <description>[13:8] Transfer Complete Code: Contains the OPT.TCC value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[3:0] Transaction Status:#br#Stores the non-zero status/error code that was detected on the read status or write status bus.#br#MS-bit effectively serves as the read vs. write error code.#br#If read status and write status are returned on the same cycle then the TC chooses non-zero version. If both are non-zero then write status is treated as higher priority.#br#Encoding of errors matches the CBA spec.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>TRANSACTION_STATUS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCMD</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>Error Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC error interrupt:#br#Write of '1' to SET causes TPTC error interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_ERROR</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC error interrupt#br#Write of '1' to EVAL causes TPTC error interrupt to be pulsed if any of the ERRSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RDRATE</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Read Rate Register</description>
          <fields>
            <field>
              <description>[2:0] Read Rate Control: Controls the number of cycles between read commands. This is a global setting that applies to all TRs for this TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>READ_RATE_CONTROL</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>POPT</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>Prog Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSRC</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>Prog Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PCNT</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>Prog Set Count</description>
          <fields>
            <field>
              <description>[31:16] B-Dimension count. Number of arrays to be transferred where each array is ACNT in length.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>BDIMENSION_COUNT__NUMBER</name></field>
            <field>
              <description>[15:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PDST</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>Prog Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIDX</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>Prog Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Program Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Program Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PMPPRXY</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>Prog Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAOPT</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>Src Actv Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRC</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNT</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>Src Actv Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADST</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABIDX</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Source Active Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Source Active Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAMPPRXY</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>Src Actv Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNTRLD</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>Src Actv Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Source Active Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRCBREF</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Source Active Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADSTBREF</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Dst address reference is not applicable for Src Active Register Set. Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DST_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABCNT</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Dimension count:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Count Remaining for Src Active Register Set. Represents the amount of data remaining to be read. Initial value is copied from PCNT. TC decrements ACNT and BCNT as necessary after each read command is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BDIMENSION_COUNT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFCNTRLD</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Destination FIFO Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRCBREF</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Destination FIFO Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT0</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC0</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT0</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST0</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX0</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY0</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT0</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT1</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC1</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT1</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST1</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_3</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX1</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY1</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT1</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_CRC</name>
      <baseAddress>0x54020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>328</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_CRC</description>
      <registers>
        <register>
          <name>CRC_CTRL0</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Contains sw reset control bit to reset PSA</description>
          <fields>
            <field>
              <name>NU12</name>
              <description>[31:31] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>NU11</name>
              <description>[30:30] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>NU10</name>
              <description>[29:29] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NU9</name>
              <description>[28:27] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>NU8</name>
              <description>[26:25] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>NU7</name>
              <description>[24:24] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU6</name>
              <description>[23:23] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>NU5</name>
              <description>[22:22] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>NU4</name>
              <description>[21:21] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>NU3</name>
              <description>[20:19] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[18:17] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[16:16] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CH2_CRC_SEL2</name>
              <description>[15:15] Refer "CH2_DW_SEL" field description</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>CH2_BYTE_SWAP</name>
              <description>[14:14] BYTE SWAP Enable across Data Size 0 ΓÇô Byte Swap Disabled 1 ΓÇô Byte Swap enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>CH2_BIT_SWAP</name>
              <description>[13:13] msb/lsb SWAPPING  0 ΓÇô msb (most significant bit First) 1 ΓÇô lsb (least significant bit First)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CH2_CRC_SEL</name>
              <description>[12:11] CRC type select.  {CH1_CRC_SEL2,CH1_CRC_SEL[1:0]} 000 ΓÇô CRC-64 001 -  CRC-16 010 ΓÇô CRC-32 100 -  VDA CAN, SAE-J1850 CRC-8 101 - H2F, Autosar 4.0 110 - CASTAGNOLI, iSCSI 111 / 011 - E2E Profile 4</description>
              <bitWidth>2</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CH2_DW_SEL</name>
              <description>[10:9] CRC Data Size select. 000 ΓÇô Not Supported 001 -  16 bit Data Size 010 ΓÇô 32 Bit Data Size</description>
              <bitWidth>2</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CH2_PSA_SWREST</name>
              <description>[8:8] Channel 2 PSA Software Reset. When set, the PSA Signature Register is reset to all zero. Software reset does not reset software reset bit itself. Therefore, CPU is required to clear this bit by writing a ΓÇÿ0ΓÇÖ. 0 = PSA Signature Register not reset 1 = PSA Signature Register reset</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CH1_CRC_SEL2</name>
              <description>[7:7] Refer "CH1_DW_SEL" field description</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>CH1_BYTE_SWAP</name>
              <description>[6:6] BYTE SWAP Enable across Data Size 0 ΓÇô Byte Swap Disabled 1 ΓÇô Byte Swap enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CH1_BIT_SWAP</name>
              <description>[5:5] msb/lsb SWAPPING  0 ΓÇô msb (most significant bit First) 1 ΓÇô lsb (least significant bit First)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CH1_CRC_SEL</name>
              <description>[4:3] CRC type select.  {CH1_CRC_SEL2,CH1_CRC_SEL[1:0]} 000 ΓÇô CRC-64 001 -  CRC-16 010 ΓÇô CRC-32 100 -  VDA CAN, SAE-J1850 CRC-8 101 - H2F, Autosar 4.0 110 - CASTAGNOLI, iSCSI 111 / 011 - E2E Profile 4</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CH1_DW_SEL</name>
              <description>[2:1] CRC Data Size select. 000 ΓÇô Not Supported 001 -  16 bit Data Size 010 ΓÇô 32 Bit Data Size</description>
              <bitWidth>2</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CH1_PSA_SWREST</name>
              <description>[0:0] Channel 1 PSA Software Reset. When set, the PSA Signature Register is reset to all zero. Software reset does not reset software reset bit itself. Therefore, CPU is required to clear this bit by writing a ΓÇÿ0ΓÇÖ. 0 = PSA Signature Register not reset 1 = PSA Signature Register reset</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CTRL1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Contains power down control bit</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PWDN</name>
              <description>[0:0] Power Down. When set, MCRC moduleMCRC Module is put in power down mode. 0 = MCRC is not in power down mode 1 = MCRC is in power down mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CTRL2</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Contains channel mode, data trace enable control bits</description>
          <fields>
            <field>
              <name>Reserved5</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>NU14</name>
              <description>[25:24] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[23:18] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>NU13</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CH2_MODE</name>
              <description>[9:8] Channel 2 Mode: 0 0 = Data Capture mode. In this mode, the PSA Signature Register does not compress data when it is written. Any data written to PSA Signature Register is simply captured by PSA Signature Register without any compression. This mode can be used to plant seed value into the PSA register 0 1 = AUTO mode 1 0 = reserved 1 1 = Full-CPU mode</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[7:5] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CH1_TRACEEN</name>
              <description>[4:4] Channel 1 Data Trace Enable. When set, the channel is put into data trace mode. The channel snoops on the CPU VBUSM, ITCM, DTCM buses for any read transaction. Any read data on these buses is compressed by the PSA Signature Register. When suspend is on, the PSA Signature Register does not compress any read data on these buses. 0 = Data Trace disable 1 = Data Trace enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[3:2] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CH1_MODE</name>
              <description>[1:0] Channel 1 Mode: 0 0 = Data Capture mode. In this mode, the PSA Signature Register does not compress data when it is written. Any data written to PSA Signature Register is simply captured by PSA Signature Register without any compression. This mode can be used to plant seed value into the PSA register 0 1 = AUTO mode 1 0 = reserved 1 1 = Full-CPU mode</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_INTS</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Write one to a bit to enable a interrupt</description>
          <fields>
            <field>
              <name>Reserved5</name>
              <description>[31:29] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NU22</name>
              <description>[28:28] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>NU21</name>
              <description>[27:27] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>NU20</name>
              <description>[26:26] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>NU19</name>
              <description>[25:25] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[24:21] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>NU18</name>
              <description>[20:20] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NU17</name>
              <description>[19:19] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NU16</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>NU15</name>
              <description>[17:17] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[16:13] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CH2_TIMEOUTENS</name>
              <description>[12:12] Channel 2 Timeout Interrupt Enable Bit. Writing a one to this bit enable the timeout interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Timeout Interrupt disable 1 = Timeout Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Timeout Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CH2_UNDERENS</name>
              <description>[11:11] Channel 2 Underrun Interrupt Enable Bit. Writing a one to this bit enable the underrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Underrun Interrupt disable 1 = Underrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Underrun Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CH2_OVERENS</name>
              <description>[10:10] Channel 2 Overrun Interrupt Enable Bit. Writing a one to this bit enable the overrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Overrun Interrupt disable 1 = Overrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Overrun Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CH2_CRCFAILENS</name>
              <description>[9:9] Channel 2 CRC Fail Interrupt Enable Bit. Writing a one to this bit enable the CRC fail interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = CRC Fail Interrupt disable 1 = CRC Fail Interrupt enable User and privileged mode write: 0 = Has no effect 1 = CRC Fail Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[8:5] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CH1_TIMEOUTENS</name>
              <description>[4:4] Channel 1 Timeout Interrupt Enable Bit. Writing a one to this bit enable the timeout interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Timeout Interrupt disable 1 = Timeout Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Timeout Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CH1_UNDERENS</name>
              <description>[3:3] Channel 1 Underrun Interrupt Enable Bit. Writing a one to this bit enable the underrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Underrun Interrupt disable 1 = Underrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Underrun Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CH1_OVERENS</name>
              <description>[2:2] Channel 1 Overrun Interrupt Enable Bit. Writing a one to this bit enable the overrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Overrun Interrupt disable 1 = Overrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Overrun Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CH1_CRCFAILENS</name>
              <description>[1:1] Channel 1 CRC Fail Interrupt Enable Bit. Writing a one to this bit enable the CRC fail interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = CRC Fail Interrupt disable 1 = CRC Fail Interrupt enable User and privileged mode write: 0 = Has no effect 1 = CRC Fail Interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_INTR</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>Write one to a bit to disable a interrupt</description>
          <fields>
            <field>
              <name>Reserved5</name>
              <description>[31:29] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NU30</name>
              <description>[28:28] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>NU29</name>
              <description>[27:27] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>NU28</name>
              <description>[26:26] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>NU27</name>
              <description>[25:25] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[24:21] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>NU26</name>
              <description>[20:20] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NU25</name>
              <description>[19:19] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NU24</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>NU23</name>
              <description>[17:17] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[16:13] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CH2_TIMEOUTENR</name>
              <description>[12:12] Channel 2 Timeout Interrupt Disable Bit. Writing a one to this bit disable the timeout interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Timeout Interrupt disable 1 = Timeout Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Timeout Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CH2_UNDERENR</name>
              <description>[11:11] Channel 2 Underrun Interrupt Disable Bit. Writing a one to this bit disable the underrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/dis- able). User and privileged mode read: 0 = Underrun Interrupt disable 1 = Underrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Underrun Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CH2_OVERENR</name>
              <description>[10:10] Channel 2 Overrun Interrupt Disable Bit. Writing a one to this bit disable the overrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Overrun Interrupt disable 1 = Overrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Overrun Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CH2_CRCFAILENR</name>
              <description>[9:9] Channel 2 CRC Fail Interrupt Disable Bit. Writing a one to this bit disable the CRC fail interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = CRC Fail Interrupt disable 1 = CRC Fail Interrupt enable User and privileged mode write: 0 = Has no effect 1 = CRC Fail Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[8:5] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CH1_TIMEOUTENR</name>
              <description>[4:4] Channel 1 Timeout Interrupt Disable Bit. Writing a one to this bit disable the timeout interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Timeout Interrupt disable 1 = Timeout Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Timeout Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CH1_UNDERENR</name>
              <description>[3:3] Channel 1 Underrun Interrupt Disable Bit. Writing a one to this bit disable the underrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/dis- able). User and privileged mode read: 0 = Underrun Interrupt disable 1 = Underrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Underrun Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CH1_OVERENR</name>
              <description>[2:2] Channel 1 Overrun Interrupt Disable Bit. Writing a one to this bit disable the overrun interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = Overrun Interrupt disable 1 = Overrun Interrupt enable User and privileged mode write: 0 = Has no effect 1 = Overrun Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CH1_CRCFAILENR</name>
              <description>[1:1] Channel 1 CRC Fail Interrupt Disable Bit. Writing a one to this bit disable the CRC fail interrupt. Writing a zero has no effect. Reading from this bit gives the status (interrupt enable/disable). User and privileged mode read: 0 = CRC Fail Interrupt disable 1 = CRC Fail Interrupt enable User and privileged mode write: 0 = Has no effect 1 = CRC Fail Interrupt disable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_STATUS_REG</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>Contains interrupt flags for different types of interrupt</description>
          <fields>
            <field>
              <name>Reserved5</name>
              <description>[31:29] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NU38</name>
              <description>[28:28] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>NU37</name>
              <description>[27:27] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>NU36</name>
              <description>[26:26] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>NU35</name>
              <description>[25:25] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>Reserved4</name>
              <description>[24:21] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>NU34</name>
              <description>[20:20] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NU33</name>
              <description>[19:19] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NU32</name>
              <description>[18:18] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>NU31</name>
              <description>[17:17] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[16:13] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CH2_TIMEOUT</name>
              <description>[12:12] Channel 2 CRC Timeout Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode. 0 = No timeout interrupt is active 1 = Timeout interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CH2_UNDER</name>
              <description>[11:11] Channel 2 CRC Underrun Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode only 0 = No underrun interrupt is active 1 = Underrun interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CH2_OVER</name>
              <description>[10:10] Channel 2 CRC Overrun Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode 0 = No overrun interrupt is active 1 = Overrun interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CH2_CRCFAIL</name>
              <description>[9:9] Channel 2 CRC Compare Fail Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode only. 0 = No CRC compare fail interrupt is active 1 = CRC compare fail interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[8:5] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CH1_TIMEOUT</name>
              <description>[4:4] Channel 1 CRC Timeout Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode. 0 = No timeout interrupt is active 1 = Timeout interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CH1_UNDER</name>
              <description>[3:3] Channel 1 CRC Underrun Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode only 0 = No underrun interrupt is active 1 = Underrun interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CH1_OVER</name>
              <description>[2:2] Channel 1 CRC Overrun Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode 0 = No overrun interrupt is active 1 = Overrun interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CH1_CRCFAIL</name>
              <description>[1:1] Channel 1 CRC Compare Fail Status Flag. This bit is cleared by writing a ΓÇÖ1ΓÇÖ to it only. Writing ΓÇÖ0ΓÇÖ has no effect. This bit is set in AUTO mode only. 0 = No CRC compare fail interrupt is active 1 = CRC compare fail interrupt is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_INT_OFFSET_REG</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Contains the interrupt offset vector address</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>OFSTREG</name>
              <description>[7:0] CRC Interrupt Offset. This register indicates the highest priority pending interrupt vector address. Reading the offset register auto- matically clear the respective interrupt flag. Please reference Table 1ΓÇô3. for details.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_BUSY</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Contains the busy flag for each channel</description>
          <fields>
            <field>
              <name>Reserved4</name>
              <description>[31:25] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>NU40</name>
              <description>[24:24] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[23:17] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>NU39</name>
              <description>[16:16] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:9] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>Ch2_BUSY</name>
              <description>[8:8] Ch2_BUSY. During AUTO mode, the busy flag is set when the first data pattern of the block is compressed and remains set until the the last data pattern of the block is compressed. The flag is cleared when the last data pattern of the block is compressed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[7:1] Reserved</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CH1_BUSY</name>
              <description>[0:0] CH1_BUSY. During AUTO mode, the busy flag is set when the first data pattern of the block is compressed and remains set until the the last data pattern of the block is compressed. The flag is cleared when the last data pattern of the block is compressed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_PCOUNT_REG1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Channel 1 preload register for the pattern count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>CRC_PAT_COUNT1</name>
              <description>[19:0] Channel 1 Pattern Counter Preload Register. This register con- tains the number of data patterns in one sector to be compressed before a CRC is performed.</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_SCOUNT_REG1</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>Channel 1 preload register for the sector count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CRC_SEC_COUNT1</name>
              <description>[15:0] Channel 1 Sector Counter Preload Register. This register con- tains the number of sectors in one block of memory.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CURSEC_REG1</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>Channel 1 current sector register contains the sector number which causes CRC failure</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CRC_CURSEC1</name>
              <description>[15:0] Channel 1 Current Sector ID Register. In AUTO mode, this register contains the current sector number of which the signature verification fails. The sector counter is a free running up counter. When a sector fails, the erroneous sector number is logged into current sector ID register and the CRC fail interrupt is generated The sector ID register is frozen until it is read and the CRC fail status bit is cleared by CPU. While it is frozen, it does not capture another erroneous sector number. When this condition happens, an overrun interrupt is generated instead. Once the register is read and the CRC fail interrupt flag is cleared it can capture new erro- neous sector number.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_WDTOPLD1</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>Channel 1 timeout pre-load value to check if within a given time DMA initiates a block transfer</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CRC_WDTOPLD1</name>
              <description>[23:0] Channel 1 Watchdog Timeout Counter Preload Register. This register contains the number of clock cycles within which the DMA must transfer the next block of data patterns.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_BCTOPLD1</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>Channel 1 timeout pre-load value to check if one block of patterns are compressed with a given time</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CRC_BCTOPLD1</name>
              <description>[23:0] Channel 1 Block Complete Timeout Counter Preload Regis- ter. This register contains the number of clock cycles within which the CRC for an entire block needs to complete before a timeout interrupt is generated.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGL1</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Channel 1 PSA signature low register</description>
          <fields>
            <field>
              <name>PSASIG1_31_0</name>
              <description>[31:0] Channel 1 PSA Signature Low Register. This register contains the value stored at PSASIG1[31:0] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGH1</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Channel 1 PSA signature high register</description>
          <fields>
            <field>
              <name>PSA_SIG1_63_32</name>
              <description>[31:0] Channel 1 PSA Signature High Register. This register contains the value stored at PSASIG1[63:32] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGL1</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Channel 1 CRC value low register</description>
          <fields>
            <field>
              <name>CRC1_31_0</name>
              <description>[31:0] Channel 1 CRC Value Low Register. This register contains the current known good signature value stored at CRC1[31:0] regis- ter.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGH1</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Channel 1 CRC value high register</description>
          <fields>
            <field>
              <name>CRC1_63_32</name>
              <description>[31:0] Channel 1 CRC Value High Register. This register contains the current known good signature value stored at CRC1[63:32] regis- ter.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGL1</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Channel 1 PSA sector signature low regis-ter</description>
          <fields>
            <field>
              <name>PSASECSIG1_31_0</name>
              <description>[31:0] Channel 1 PSA Sector Signature Low Register. This register contains the value stored at PSASECSIG1[31:0] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGH1</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>Channel 1 PSA sector signature high regis-ter</description>
          <fields>
            <field>
              <name>PSASECSIG1_63_32</name>
              <description>[31:0] Channel 1 PSA Sector Signature High Register. This register contains the value stored at PSASECSIG1[63:32] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGL1</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>Channel 1 un-compressed raw data low register</description>
          <fields>
            <field>
              <name>RAW_DATA1_31_0</name>
              <description>[31:0] Channel 1 Raw Data Low Register. This register contains bit 31:0 of the un-compressed raw data.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGH1</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>Channel 1 un-compressed raw data high register</description>
          <fields>
            <field>
              <name>RAW_DATA1_63_32</name>
              <description>[31:0] Channel 1 Raw Data High Register. This register contains bit 63:32 of the un-compressed raw data.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_PCOUNT_REG2</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Channel 2 preload register for the pattern count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>CRC_PAT_COUNT2</name>
              <description>[19:0] Channel 2 Pattern Counter Preload Register. This register con- tains the number of data patterns in one sector to be compressed before a CRC is performed.</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_SCOUNT_REG2</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>Channel 2 preload register for the sector count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CRC_SEC_COUNT2</name>
              <description>[15:0] Channel 2 Sector Counter Preload Register. This register con- tains the number of sectors in one block of memory.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CURSEC_REG2</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>Channel 2 current sector register contains the sector number which causes CRC fail-ure</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CRC_CURSEC2</name>
              <description>[15:0] Channel 2 Current Sector ID Register. In AUTO mode, this register contains the current sector number of which the signature verification fails. The sector counter is a free running up counter. When a sector fails, the erroneous sector number is logged into current sector ID register and the CRC fail interrupt is generated The sector ID register is frozen until it is read and the CRC fail status bit is cleared by CPU. While it is frozen, it does not capture another erroneous sector number. When this condition happens, an overrun interrupt is generated instead. Once the register is read and the CRC fail interrupt flag is cleared it can capture new erro- neous sector number.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_WDTOPLD2</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>Channel 2 timeout pre-load value to check if within a given time DMA initiates a block transfer</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CRC_WDTOPLD2</name>
              <description>[23:0] Channel 2 Watchdog Timeout Counter Preload Register. This register contains the number of clock cycles within which the DMA must transfer the next block of data patterns.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_BCTOPLD2</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>Channel 2 timeout pre-load value to check if one block of patterns are compressed with a given time</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CRC_BCTOPLD2</name>
              <description>[23:0] Channel 2 Block Complete Timeout Counter Preload Regis- ter. This register contains the number of clock cycles within which the CRC for an entire block needs to complete before a timeout interrupt is generated.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGL2</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>Channel 2 PSA signature low register</description>
          <fields>
            <field>
              <name>PSASIG2_31_0</name>
              <description>[31:0] Channel 2 PSA Signature Low Register. This register contains the value stored at PSASIG2[31:0] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGH2</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>Channel 2 PSA signature high register</description>
          <fields>
            <field>
              <name>PSA_SIG2_63_32</name>
              <description>[31:0] Channel 2 PSA Signature High Register. This register contains the value stored at PSASIG2[63:32] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGL2</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>Channel 2 CRC value low register</description>
          <fields>
            <field>
              <name>CRC2_31_0</name>
              <description>[31:0] Channel 2 CRC Value Low Register. This register contains the current known good signature value stored at CRC2[31:0] regis- ter.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGH2</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>Channel 2 CRC value high register</description>
          <fields>
            <field>
              <name>CRC2_63_32</name>
              <description>[31:0] Channel 2 CRC Value High Register. This register contains the current known good signature value stored at CRC2[63:32] regis- ter.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGL2</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>Channel 2 PSA sector signature low regis-ter</description>
          <fields>
            <field>
              <name>PSASECSIG2_31_0</name>
              <description>[31:0] Channel 2 PSA Sector Signature Low Register. This register contains the value stored at PSASECSIG2[31:0] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGH2</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>Channel 2 PSA sector signature high regis-ter</description>
          <fields>
            <field>
              <name>PSASECSIG2_63_32</name>
              <description>[31:0] Channel 2 PSA Sector Signature High Register. This register contains the value stored at PSASECSIG2[63:32] register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGL2</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>Channel 2 un-compressed raw data low register</description>
          <fields>
            <field>
              <name>RAW_DATA2_31_0</name>
              <description>[31:0] Channel 2 Raw Data Low Register. This register contains bit 31:0 of the un-compressed raw data.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGH2</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>Channel 2 un-compressed raw data high Register</description>
          <fields>
            <field>
              <name>RAW_DATA2_63_32</name>
              <description>[31:0] Channel 2 Raw Data High Register. This register contains bit 63:32 of the un-compressed raw data.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_PCOUNT_REG3</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>Channel 3 preload register for the pattern count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NU41</name>
              <description>[19:0] Reserved</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_SCOUNT_REG3</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>Channel 3 preload register for the sector count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU42</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CURSEC_REG3</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>Channel 3 current sector register contains the sector number which causes CRC fail-ure</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU43</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_WDTOPLD3</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>Channel 3 timeout pre-load value to check if within a given time DMA initiates a block transfer</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU44</name>
              <description>[23:0] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_BCTOPLD3</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>Channel 3 timeout pre-load value to check if one block of patterns are compressed with a given time</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU45</name>
              <description>[23:0] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGL3</name>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <description>Channel 3 PSA signature low register</description>
          <fields>
            <field>
              <name>NU46</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGH3</name>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <description>Channel 3 PSA signature high register</description>
          <fields>
            <field>
              <name>NU47</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGL3</name>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <description>Channel 3 CRC value low register</description>
          <fields>
            <field>
              <name>NU48</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGH3</name>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <description>Channel 3 CRC value high register</description>
          <fields>
            <field>
              <name>NU49</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGL3</name>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <description>Channel 3 PSA sector signature low regis-ter</description>
          <fields>
            <field>
              <name>NU50</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGH3</name>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <description>Channel 3 PSA sector signature high regis-ter</description>
          <fields>
            <field>
              <name>NU51</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGL3</name>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <description>Channel 3 un-compressed raw data low register</description>
          <fields>
            <field>
              <name>NU52</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGH3</name>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <description>Channel 3 un-compressed raw data high Register</description>
          <fields>
            <field>
              <name>NU53</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_PCOUNT_REG4</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>Channel 4 preload register for the pattern count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NU54</name>
              <description>[19:0] Reserved</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_SCOUNT_REG4</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>Channel 4 preload register for the sector count</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU55</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_CURSEC_REG4</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>Channel 4 current sector register contains the sector number which causes CRC fail-ure</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU56</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_WDTOPLD4</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>Channel 4 timeout pre-load value to check if within a given time DMA initiates a block transfer</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU57</name>
              <description>[23:0] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_BCTOPLD4</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>Channel 4 timeout pre-load value to check if one block of patterns are compressed with a given time</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU58</name>
              <description>[23:0] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGL4</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>Channel 4 PSA signature low register</description>
          <fields>
            <field>
              <name>NU59</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SIGREGH4</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>Channel 4 PSA signature high register</description>
          <fields>
            <field>
              <name>NU60</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGL4</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>Channel 4 CRC value low register</description>
          <fields>
            <field>
              <name>NU61</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CRC_REGH4</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>Channel 4 CRC value high register</description>
          <fields>
            <field>
              <name>NU62</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGL4</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>Channel 4 PSA sector signature low regis-ter</description>
          <fields>
            <field>
              <name>NU63</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSA_SECSIGREGH4</name>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <description>Channel 4 PSA sector signature high regis-ter</description>
          <fields>
            <field>
              <name>NU64</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGL4</name>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <description>Channel 4 un-compressed raw data low register</description>
          <fields>
            <field>
              <name>NU65</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RAW_DATAREGH4</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>Channel 4 un-compressed raw data high Register</description>
          <fields>
            <field>
              <name>NU66</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MCRC_BUS_SEL</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Disables either or all tracing of data buses</description>
          <fields>
            <field>
              <name>NU67</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>MEn</name>
              <description>[2:2] MEn. Enable/disables the tracing of VBUSM  0: Tracing of VBUSM master bus has been disabled  1: Tracing of VBUSM master bus has been enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DTCMEn</name>
              <description>[1:1] DTCMEn. Enable/disables the tracing of data TCM 0: Tracing of DTCM_ODD and DTCM_EVEN buses have been disabled 1: Tracing of DTCM_ODD and DTCM_EVEN buses have been enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ITCMEn</name>
              <description>[0:0] ITCMEn. Enable/disables the tracing of instruction TCM  0: Tracing of ITCM bus has been disabled  1: Tracing of ITCM bus has been enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MCRC_RESERVED</name>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <description>0x144 to 0x1FF is reserved area.</description>
          <fields>
            <field>
              <name>NU68</name>
              <description>[31:0] 0x144 to 0x1FF is reserved area.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>HWA_CFG</name>
      <baseAddress>0x55010000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>984</size>
        <usage>registers</usage>
      </addressBlock>
      <description>HWA_CFG</description>
      <registers>
        <register>
          <name>HWACCREG1</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>HWACCREG1</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ACCDYNCLKEN_LEVEL2</name>
              <description>[12:12] Level 2 dynamic clock-gating control :- Setting this register bit to 1 will lead to further power saving by disabling clock during FSM wait state.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>ACCDYNCLKEN</name>
              <description>[11:11] Dynamic Clock-gating Control:Setting this register bit to 1 enables the capability to clock gate the Radar Accelerator core IPs (FFT and CFAR-CA datapath,CFAR-OS datapath, memory compression datapath) based on the ParamSet being executed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>FFT1DEN</name>
              <description>[10:10] ADC buffer sharing mode This register is relevant where the Radar Hardware Accelerator is included in a single device along with the mmWave RF front-end.  In such a case, during active chirp transmission and inline 1st dimension FFT processing, the ACCEL_MEM0 and ACCEL_MEM1 memories of the accelerator are shared as ping-pong ADC buffers.  This register bit needs to be set during this time, so that while the Digital Front End writes ADC samples to the ping buffer, the accelerator automatically accesses (only) the pong buffer, and vice versa.  At the end of the active transmission portion of a frame, this bit can be cleared, so that the accelerator has access to all the four local memories independently.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>ACCRESET</name>
              <description>[8:6] Software Reset Control:   This register provides software reset control for the Radar Hardware Accelerator.  The assertion of these register bits by the main processor will bring the Accelerator Engine to a known reset state.  This is mostly applicable for resetting the accelerator in case of unexpected behavior.  The  sequence to be followed in case software reset is to write 111b to this register and then a 000b</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ACCCLKEN</name>
              <description>[5:3] Clock-gating Control:   This register bit controls the enable/disable for the clock of the Radar Accelerator.  This register bit can be set to 0 to clock-gate the accelerator when not using the accelerator.  Before enabling the accelerator or before configuring the  registers of accelerator, this register bit should be set to 111b first, so that the clock is available.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ACCENABLE</name>
              <description>[2:0] Enable/Disable Control:    A value of ACC_ENABLE = 111b enables the Radar Hardware Accelerator and any other value of the register keeps the Accelerator Engine in disabled state.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG2</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>HWACCREG2</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMA2ACCTRIG</name>
              <description>[15:0] DMA trigger register: This register is relevant whenever DMA triggered mode is used (i.e., TRIGMODE = 011b).  Whenever a DMA channel has finished copying input samples into the local memory of the accelerator and wants to trigger the accelerator, the procedure to follow is to use a second linked DMA channel to write a 16-bit one-hot signature into this register to trigger the accelerator.  In DMA triggered mode, the State Machine keeps monitoring this 16-bit register and waits as long as a specific bit (see DMA2ACC_CHANNEL_TRIGSRC) in this register is zero.  The second linked DMA channel writes a one-hot signature that sets the specific bit, so that the State Machine gets triggered and starts the accelerator operations for that parameter-set.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG3</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>HWACCREG3</description>
          <fields>
            <field>
              <name>CM42DMATRIG</name>
              <description>[31:16] Override accelerator Trigger to DMA.Can be used for triggering the first and second DMA transfer thorugh processor</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU</name>
              <bitWidth>15</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CM42ACCTRIG</name>
              <description>[0:0] Software trigger bit: This register bit is relevant whenever software triggered mode is used (i.e., TRIGMODE = 001b). The main processor software can set this register bit, so that the State Machine gets triggered and starts the accelerator operations for that parameter-set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG4</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>HWACCREG4</description>
          <fields>
            <field>
              <name>SPARE</name>
              <description>[31:0] Spare register</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG5</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>HWACCREG5</description>
          <fields>
            <field>
              <name>BPMPATTERNMSB</name>
              <description>[31:0] BPM pattern MSB: Specifies the BPM pattern to be used to multiply the input samples if BPM removal is enabled</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG6</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>HWACCREG6</description>
          <fields>
            <field>
              <name>BPMPATTERNLSB</name>
              <description>[31:0] BPM pattern LSB: Specifies the BPM pattern to be used to multiply the input samples if BPM removal is enabled</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG7</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>HWACCREG7</description>
          <fields>
            <field>
              <name>NU3</name>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>STG1LUTSELWR</name>
              <description>[24:24] Select Window RAM or Internal RAM: The Internal RAM for Vector Multiplication mode is mapped to the same address space as the Window RAM. Hence, this register bit is required to specify which of these two needs to be selected, when loading the co-efficients via DMA or M4.  0 - Window RAM is selected 1 - Internal RAM for Vector Multiplication mode is selected.  Keep this register bit as 0 always, except during the period when Internal RAM needs to be loaded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <bitWidth>7</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DITHERTWIDEN</name>
              <description>[16:16] Twiddle factor dithering enable: This register-bit is used to enable/disable dithering of twiddle factors in the FFT.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>BPMRATE</name>
              <description>[9:0] BPM rate: Specifies the number of input samples corresponding to each BPM bit.  Minimum valid value for this register is 1.</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG8</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>HWACCREG8</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFTSUMDIV</name>
              <description>[28:24] Right-shifting for Sum Statistic: This register specifies how many LSBs to drop to convert the sum statistics to 24-bit value going to the Output Formatter</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG11</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>HWACCREG11</description>
          <fields>
            <field>
              <name>LFSRLOAD</name>
              <description>[31:31] To load the LFSR seed, a pulse signal needs to be provided, by writing a 1 to  the LFSR_LOAD register-bit. Self clearing</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>NU</name>
              <bitWidth>2</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>LFSRSEED</name>
              <description>[28:0] LFSR seed value  (random pattern) for twiddle factor dithering,</description>
              <bitWidth>29</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG12</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>HWACCREG12</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>ACC_TRIGGER_IN_CLR</name>
              <description>[24:24] Clear trigger status read-only register: This register-bit when set clears the trigger status register ACC_TRIG_IN_STAT described above</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>ACC_TRIGGER_IN_STAT</name>
              <description>[18:0] Debug register for trigger status: This is a read-only status register, which indicates the trigger status of the accelerator, i.e., whether a specific DMA trigger or a Ping-pong trigger or a SW trigger was ever received (refer TRIGMODE in HW_ACC_PARAM register set).  The MSB 16 bits of this register indicate whether a trigger was received via DMA trigger method.  The next two bits (i.e., bit indices 2 and 1) indicate the status of DFE ping-pong switch-based trigger and SW trigger respectively.  The LSB bit is always 1 and can be ignored {DMA2ACCTRIG[15:0],adc_buffer_done,CM42ACCTRIG,1}</description>
              <bitWidth>19</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG13</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>HWACCREG13</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CFAR_THRESH</name>
              <description>[17:0] CFAR Threshold scale factor: This value is used to either multiply or add to the surrounding noise average to determine the threshold used for detection of the present cell under test.  If logarithmic CFAR mode is disabled (i.e., in magnitude or magnitude-squared mode), then the register value is multiplied with the surrounding noise average to determine the threshold, else it is added to the surrounding noise average.  In the former case, this 18-bit register is interpreted as a 14.4 value.  In the latter case (i.e., logarithmic mode), the 18-bit register is interpreted as a 7.11 value.</description>
              <bitWidth>18</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG14</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>HWACCREG14</description>
          <fields>
            <field>
              <name>PARAMDONESTAT</name>
              <description>[31:0] Parameter-set done status: This read-only status register can be used by the main processor to see which parameter-sets are complete that led to the interrupt to the main processor.  The individual bits in this 32-bit status register indicate which of the 32 parameter-sets have completed.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG15</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>HWACCREG15</description>
          <fields>
            <field>
              <name>PARAMDONECLR</name>
              <description>[31:0] Status bits in PARAMDONESTAT are not automatically cleared, but they can be individually cleared by writing to  32-bit register PARAMDONECLR.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFAR_DET_THR</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>CFAR_DET_THR</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CFAR_DET_THR</name>
              <description>[23:0] This register is used to specify the threshold used for the  detection of the present cell under test during CFAR-CA mode when number of samples for left side and right  side noise averaging is 0.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX1VALUE</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>MAX1VALUE</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>MAX1VALUE</name>
              <description>[23:0] Max value: These registers contain the max value on a per-iteration basis.  These registers are meaningful only when Magnitude or Log-Magnitude is enabled.  Only the max values for up to four iterations are recorded in these registers.  For larger number of iterations, use Statistics output mode (FFT_OUT_MODE in  HW_ACC_PARAM register set).</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX1INDEX</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>MAX1INDEX</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>MAX1INDEX</name>
              <description>[11:0] Max index: These registers contain the max index on a per-iteration basis, corresponding to each max value in the MAXn_VALUE registers.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM1LSB</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>ISUM1LSB</description>
          <fields>
            <field>
              <name>ISUM1LSB</name>
              <description>[31:0] Sum statistics: These registers contain the sum of the I outputs and Q outputs on a per-iteration basis.  Only the statistics for up to four iterations are recorded in these registers.  For larger number of iterations, use Statistics output mode (FFT_OUT_MODE in  HW_ACC_PARAM register set).</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM1MSB</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>ISUM1MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ISUM1MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM1LSB</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>QSUM1LSB</description>
          <fields>
            <field>
              <name>QSUM1LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM1MSB</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>QSUM1MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QSUM1MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX2VALUE</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>MAX2VALUE</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>MAX2VALUE</name>
              <description>[23:0] Refer MAX1VALUE</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX2INDEX</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>MAX2INDEX</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>MAX2INDEX</name>
              <description>[11:0] Refer MAX1INDEX</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM2LSB</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>ISUM2LSB</description>
          <fields>
            <field>
              <name>ISUM2LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM2MSB</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>ISUM2MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ISUM2MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM2LSB</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>QSUM2LSB</description>
          <fields>
            <field>
              <name>QSUM2LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM2MSB</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>QSUM2MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QSUM2MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX3VALUE</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>MAX3VALUE</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>MAX3VALUE</name>
              <description>[23:0] Refer MAX1VALUE</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX3INDEX</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>MAX3INDEX</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>MAX3INDEX</name>
              <description>[11:0] Refer MAX1INDEX</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM3LSB</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>ISUM3LSB</description>
          <fields>
            <field>
              <name>ISUM3LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM3MSB</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>ISUM3MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ISUM3MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM3LSB</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>QSUM3LSB</description>
          <fields>
            <field>
              <name>QSUM3LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM3MSB</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>QSUM3MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QSUM3MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX4VALUE</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>MAX4VALUE</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>MAX4VALUE</name>
              <description>[23:0] Refer MAX1INDEX</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MAX4INDEX</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>MAX4INDEX</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>MAX4INDEX</name>
              <description>[11:0] Refer MAX1VALUE</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM4LSB</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>ISUM4LSB</description>
          <fields>
            <field>
              <name>ISUM4LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ISUM4MSB</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>ISUM4MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ISUM4MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM4LSB</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>QSUM4LSB</description>
          <fields>
            <field>
              <name>QSUM4LSB</name>
              <description>[31:0] Refer ISUM1LSB</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSUM4MSB</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>QSUM4MSB</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QSUM4MSB</name>
              <description>[3:0] Refer ISUM1LSB</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFARTEST</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>CFARTEST</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CFARTEST</name>
              <description>[23:0] Reserved.TI internal</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RDSTATUS</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>RDSTATUS</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>LOOPCNT</name>
              <description>[16:5] Running value of the  loop count  when the HWA is executing from PARAM RAM . For Debug only</description>
              <bitWidth>12</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>PARAMADDR</name>
              <description>[4:0] Index of the current parameter set  being executed from  PARAM RAM . For Debug only</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH1DONE</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>SIGDMACH1DONE</description>
          <fields>
            <field>
              <name>SIGDMACH1DONE</name>
              <description>[31:0] Signature for DMA channel 1 completion (tied to 0x0001 in HW). Linked DMA can  copy from one of these SIG_DMACHx_DONE registers into DMA2ACC_TRIG register to set the appropriate register bit to signal the completion of DMA and trigger the accelerator</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH2DONE</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>SIGDMACH2DONE</description>
          <fields>
            <field>
              <name>SIGDMACH2DONE</name>
              <description>[31:0] Signature for DMA channel 2 completion (tied to 0x0002 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH3DONE</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>SIGDMACH3DONE</description>
          <fields>
            <field>
              <name>SIGDMACH3DONE</name>
              <description>[31:0] Signature for DMA channel 3 completion (tied to 0x0004 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH4DONE</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>SIGDMACH4DONE</description>
          <fields>
            <field>
              <name>SIGDMACH4DONE</name>
              <description>[31:0] Signature for DMA channel 4 completion (tied to 0x0008 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH5DONE</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>SIGDMACH5DONE</description>
          <fields>
            <field>
              <name>SIGDMACH5DONE</name>
              <description>[31:0] Signature for DMA channel 5 completion (tied to 0x0010 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH6DONE</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>SIGDMACH6DONE</description>
          <fields>
            <field>
              <name>SIGDMACH6DONE</name>
              <description>[31:0] Signature for DMA channel 6 completion (tied to 0x0020 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH7DONE</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>SIGDMACH7DONE</description>
          <fields>
            <field>
              <name>SIGDMACH7DONE</name>
              <description>[31:0] Signature for DMA channel 7 completion (tied to 0x0040 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH8DONE</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>SIGDMACH8DONE</description>
          <fields>
            <field>
              <name>SIGDMACH8DONE</name>
              <description>[31:0] Signature for DMA channel 8 completion (tied to 0x0080 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH9DONE</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>SIGDMACH9DONE</description>
          <fields>
            <field>
              <name>SIGDMACH9DONE</name>
              <description>[31:0] Signature for DMA channel 9 completion (tied to 0x0100 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH10DONE</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>SIGDMACH10DONE</description>
          <fields>
            <field>
              <name>SIGDMACH10DONE</name>
              <description>[31:0] Signature for DMA channel 10 completion (tied to 0x0200 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH11DONE</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>SIGDMACH11DONE</description>
          <fields>
            <field>
              <name>SIGDMACH11DONE</name>
              <description>[31:0] Signature for DMA channel 11 completion (tied to 0x0040 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH12DONE</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>SIGDMACH12DONE</description>
          <fields>
            <field>
              <name>SIGDMACH12DONE</name>
              <description>[31:0] Signature for DMA channel 12 completion (tied to 0x0080 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH13DONE</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>SIGDMACH13DONE</description>
          <fields>
            <field>
              <name>SIGDMACH13DONE</name>
              <description>[31:0] Signature for DMA channel 13 completion (tied to 0x1000  in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH14DONE</name>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <description>SIGDMACH14DONE</description>
          <fields>
            <field>
              <name>SIGDMACH14DONE</name>
              <description>[31:0] Signature for DMA channel 14 completion (tied to 0x2000 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH15DONE</name>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <description>SIGDMACH15DONE</description>
          <fields>
            <field>
              <name>SIGDMACH15DONE</name>
              <description>[31:0] Signature for DMA channel 15 completion (tied to 0x4000 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SIGDMACH16DONE</name>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <description>SIGDMACH16DONE</description>
          <fields>
            <field>
              <name>SIGDMACH16DONE</name>
              <description>[31:0] Signature for DMA channel 16 completion (tied to 0x8000 in HW)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MEMACCESSERR</name>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <description>MEMACCESSERR</description>
          <fields>
            <field>
              <name>NU3</name>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>STATERRCODE</name>
              <description>[19:16] Reserved.TI internal</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>ERRCODEMASK</name>
              <description>[11:8] Reserved.TI internal</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ERRCODECLR</name>
              <description>[3:0] Reserved.TI internal</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FFTCLIP</name>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <description>FFTCLIP</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLRFFTCLIPSTAT</name>
              <description>[16:16] FFTCLIPSTAT can  be cleared by setting  single-bit register CLRFFTCLIPSTAT, so that the saturation status indication gets cleared back to 0 and any subsequent saturation events can be freshly monitored.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>FFTCLIPSTAT</name>
              <description>[9:0] FFT Clip Status (read-only): This is a read-only status register, which indicates any saturation/clipping events that have happened in the FFT butterfly stages.  Note that each of the 10 butterfly stages in the FFT can be programmed to either saturate the MSB or round the LSB.  Whenever saturation of MSB is used in any stage, there is a possibility that that stage can saturate/clip samples.  In that case, this saturation event is indicated in the corresponding bit in this status registert.  If multiple FFTs are performed, this status register includes any saturation events happening in any of them.</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FFTPEAKCNT</name>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <description>FFTPEAKCNT</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>FFTPEAKCNT</name>
              <description>[11:0] CFAR Detected Peak Count: This is a read-only register that contains the number of detected peaks that are logged in the destination memory, when CFAR Engine is configured in Detected Peaks List mode.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG1RD</name>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <description>HWACCREG1RD</description>
          <fields>
            <field>
              <name>HWACCREG1RD</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG2RD</name>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <description>HWACCREG2RD</description>
          <fields>
            <field>
              <name>HWACCREG2RD</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG3RD</name>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <description>HWACCREG3RD</description>
          <fields>
            <field>
              <name>HWACCREG3RD</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMP_EGE_K0123</name>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <description>CMP_EGE_K0123</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:29] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K3</name>
              <description>[28:24] EGE K-param for the 4th accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU3</name>
              <description>[23:21] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K2</name>
              <description>[20:16] EGE K-param for the 3rd accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[15:13] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K1</name>
              <description>[12:8] EGE K-param for the 2nd accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:5] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K0</name>
              <description>[4:0] EGE K-param for the 1st accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMP_EGE_K4567</name>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <description>CMP_EGE_K4567</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:29] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K7</name>
              <description>[28:24] EGE K-param for the 8th accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU3</name>
              <description>[23:21] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K6</name>
              <description>[20:16] EGE K-param for the 7th accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[15:13] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K5</name>
              <description>[12:8] EGE K-param for the 6th accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:5] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>CMP_EGE_K4</name>
              <description>[4:0] EGE K-param for the 5th accumulator</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_ENABLE</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_ENABLE</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>FSM_LOCKSTEP_SELFTEST_EN</name>
              <description>[17:17] 1: Enable Selftest  for Accelerator FSM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>FSM_LOCKSTEP_EN</name>
              <description>[16:16] 1: Enable Lockstep for Accelerator FSM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>OPONG_PARITY_EN</name>
              <description>[15:15] 1: Enable PARITY for ACCEL_MEM3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>OPING_PARITY_EN</name>
              <description>[14:14] 1: Enable PARITY for ACCEL_MEM2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>IPONG_PARITY_EN</name>
              <description>[13:13] 1: Enable PARITY for ACCEL_MEM1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>IPING_PARITY_EN</name>
              <description>[12:12] 1: Enable PARITY for ACCEL_MEM0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>10</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARAM_ECC_EN</name>
              <description>[1:1] Not used.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WIN_RAM_PARITY_EN</name>
              <description>[0:0] 1: Enable PARITY for Window RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MEMINIT</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>MEMINIT</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>MC_ODD_INIT</name>
              <description>[7:7] 1: Start initialising  MEM_COMPRESSION_ODD_RAM with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>MC_EVEN_INIT</name>
              <description>[6:6] 1: Start initialising  MEM_COMPRESSION_EVEN_RAM with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>OPONG_INIT</name>
              <description>[5:5] 1: Start initialising  ACCEL_MEM3 with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>OPING_INIT</name>
              <description>[4:4] 1: Start initialising  ACCEL_MEM2 with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>IPONG_INIT</name>
              <description>[3:3] 1: Start initialising  ACCEL_MEM1 with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>IPING_INIT</name>
              <description>[2:2] 1: Start initialising  ACCEL_MEM0 with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARAM_INIT</name>
              <description>[1:1] 1: Start initialising  Parameter set RAM with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WIN_RAM_INIT</name>
              <description>[0:0] 1: Start initialising Window RAM with all '0's</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MEMINITDONE</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>MEMINITDONE</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>MC_ODD_INITDONE</name>
              <description>[7:7] 1: Init done status for MEM_COMPRESSION_ODD_RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>MC_EVEN_INITDONE</name>
              <description>[6:6] 1: Init done status for MEM_COMPRESSION_EVEN_RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>OPONG_INITDONE</name>
              <description>[5:5] 1: Init done status for ACCEL_MEM3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>OPING_INITDONE</name>
              <description>[4:4] 1: Init done status for ACCEL_MEM2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>IPONG_INITDONE</name>
              <description>[3:3] 1: Init done status for ACCEL_MEM1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>IPING_INITDONE</name>
              <description>[2:2] 1: Init done status for ACCEL_MEM0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARAM_INITDONE</name>
              <description>[1:1] 1: Init done status for Parameter set RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WIN_RAM_INITDONE</name>
              <description>[0:0] 1: Init done status for Window RAM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_WIN_RAM_ERR_LOC</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_WIN_RAM_ERR_LOC</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_WIN_RAM_ERR_ADDR</name>
              <description>[15:0] [Debug] Address of parity error location within Window RAM</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_PARAM_RAM_ERR_LOC</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_PARAM_RAM_ERR_LOC</description>
          <fields>
            <field>
              <name>SPARE</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_IPING_ERR_LOC</name>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_IPING_ERR_LOC</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_IPING_ERR_ADDR</name>
              <description>[15:0] [Debug ]Address of parity error location within ACCEL_MEM0 (rows 0-1023)</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_IPONG_ERR_LOC</name>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_IPONG_ERR_LOC</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_IPONG_ERR_ADDR</name>
              <description>[15:0] [Debug ]Address of parity error location within ACCEL_MEM1 (rows 0-1023)</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_OPING_ERR_LOC</name>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_OPING_ERR_LOC</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_OPING_ERR_ADDR</name>
              <description>[15:0] [Debug ]Address of parity error location within ACCEL_MEM2 (rows 0-1023)</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_OPONG_ERR_LOC</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_OPONG_ERR_LOC</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_OPONG_ERR_ADDR</name>
              <description>[15:0] [Debug ]Address of parity error location within ACCEL_MEM3 (rows 0-1023)</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FFTINTMEMWRDATA</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>FFTINTMEMWRDATA</description>
          <fields>
            <field>
              <name>FFTINTMEMWRDATA</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FFTINTMEMRDDATA</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>FFTINTMEMRDDATA</description>
          <fields>
            <field>
              <name>FFTINTMEMRDDATA</name>
              <description>[31:0] Reserved.TI internal</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWACCREG16</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>HWACCREG16</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>10</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>PARAMSTOP</name>
              <description>[21:17] These registers are used to control the start and stop index of the parameter-set through which the state machine loops through.  The state machine starts at the parameter-set specified by PARAM_START and loads each parameter-set one after another and runs the accelerator as per that configuration.  When the state machine reaches the parameter-set specified by PARAM_STOP, it loops back to the start index as specified by PARAM_START.</description>
              <bitWidth>5</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>PARAMSTART</name>
              <description>[16:12] These registers are used to control the start and stop index of the parameter-set through which the state machine loops through.  The state machine starts at the parameter-set specified by PARAM_START and loads each parameter-set one after another and runs the accelerator as per that configuration.  When the state machine reaches the parameter-set specified by PARAM_STOP, it loops back to the start index as specified by PARAM_START.</description>
              <bitWidth>5</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NLOOPS</name>
              <description>[11:0] Number of loops: This register controls the number of times the State Machine will loop through the parameter-sets (from a programmed start index till a programmed end index) and run them.  The maximum number of times the loop can be made is run is 4094.  A value of zero programmed in this register means that the looping mechanism is disabled.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST1I_SW</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>DCEST1I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST1I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 0.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST2I_SW</name>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <description>DCEST2I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST2I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 1.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST3I_SW</name>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <description>DCEST3I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST3I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 2.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST4I_SW</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>DCEST4I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST4I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 3.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST5I_SW</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>DCEST5I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST5I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 4.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST6I_SW</name>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <description>DCEST6I_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST6I_SW</name>
              <description>[23:0] This register holds the software programmed dc value I to be subtracted from incoming sample for bcnt = 5.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST1I</name>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <description>DCEST1I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST1I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =0 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST2I</name>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <description>DCEST2I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST2I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =1 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST3I</name>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <description>DCEST3I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST3I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =2 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST4I</name>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <description>DCEST4I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST4I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =3.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST5I</name>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <description>DCEST5I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST5I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =4 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST6I</name>
          <addressOffset>0x15C</addressOffset>
          <size>32</size>
          <description>DCEST6I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST6I</name>
              <description>[23:0] This register holds the estimated dc value I to be subtracted from incoming sample for bcnt =5 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC1I_LSB</name>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <description>DC_ACC1I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC1I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC1I_MSB</name>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <description>DC_ACC1I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC1I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC2I_LSB</name>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <description>DC_ACC2I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC2I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC2I_MSB</name>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <description>DC_ACC2I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC2I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC3I_LSB</name>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <description>DC_ACC3I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC3I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC3I_MSB</name>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <description>DC_ACC3I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC3I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=2</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC4I_LSB</name>
          <addressOffset>0x178</addressOffset>
          <size>32</size>
          <description>DC_ACC4I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC4I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC4I_MSB</name>
          <addressOffset>0x17C</addressOffset>
          <size>32</size>
          <description>DC_ACC4I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC4I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=3</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC5I_LSB</name>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <description>DC_ACC5I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC5I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=4</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC5I_MSB</name>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <description>DC_ACC5I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC5I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=4</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC6I_LSB</name>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <description>DC_ACC6I_LSB</description>
          <fields>
            <field>
              <name>DC_ACC6I_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator I channel  for bcnt=5</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC6I_MSB</name>
          <addressOffset>0x18C</addressOffset>
          <size>32</size>
          <description>DC_ACC6I_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC6I_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator I channel for bcnt=5</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST1Q_SW</name>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <description>DCEST1Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST1Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 0.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST2Q_SW</name>
          <addressOffset>0x194</addressOffset>
          <size>32</size>
          <description>DCEST2Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST2Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 1.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST3Q_SW</name>
          <addressOffset>0x198</addressOffset>
          <size>32</size>
          <description>DCEST3Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST3Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 2.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST4Q_SW</name>
          <addressOffset>0x19C</addressOffset>
          <size>32</size>
          <description>DCEST4Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST4Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 3.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST5Q_SW</name>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <description>DCEST5Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST5Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 4.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST6Q_SW</name>
          <addressOffset>0x1A4</addressOffset>
          <size>32</size>
          <description>DCEST6Q_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST6Q_SW</name>
              <description>[23:0] This register holds the software programmed dc value Q to be subtracted from incoming sample for bcnt = 5.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST1Q</name>
          <addressOffset>0x1A8</addressOffset>
          <size>32</size>
          <description>DCEST1Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST1Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =0 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST2Q</name>
          <addressOffset>0x1AC</addressOffset>
          <size>32</size>
          <description>DCEST2Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST2Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =1 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST3Q</name>
          <addressOffset>0x1B0</addressOffset>
          <size>32</size>
          <description>DCEST3Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST3Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =2 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST4Q</name>
          <addressOffset>0x1B4</addressOffset>
          <size>32</size>
          <description>DCEST4Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST4Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =3.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST5Q</name>
          <addressOffset>0x1B8</addressOffset>
          <size>32</size>
          <description>DCEST5Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST5Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =4 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST6Q</name>
          <addressOffset>0x1BC</addressOffset>
          <size>32</size>
          <description>DCEST6Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCEST6Q</name>
              <description>[23:0] This register holds the estimated dc value Q to be subtracted from incoming sample for bcnt =5 .</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC1Q_LSB</name>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <description>DC_ACC1Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC1Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC1Q_MSB</name>
          <addressOffset>0x1C4</addressOffset>
          <size>32</size>
          <description>DC_ACC1Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC1Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC2Q_LSB</name>
          <addressOffset>0x1C8</addressOffset>
          <size>32</size>
          <description>DC_ACC2Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC2Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC2Q_MSB</name>
          <addressOffset>0x1CC</addressOffset>
          <size>32</size>
          <description>DC_ACC2Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC2Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC3Q_LSB</name>
          <addressOffset>0x1D0</addressOffset>
          <size>32</size>
          <description>DC_ACC3Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC3Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC3Q_MSB</name>
          <addressOffset>0x1D4</addressOffset>
          <size>32</size>
          <description>DC_ACC3Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC3Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=2</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC4Q_LSB</name>
          <addressOffset>0x1D8</addressOffset>
          <size>32</size>
          <description>DC_ACC4Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC4Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC4Q_MSB</name>
          <addressOffset>0x1DC</addressOffset>
          <size>32</size>
          <description>DC_ACC4Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC4Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=3</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC5Q_LSB</name>
          <addressOffset>0x1E0</addressOffset>
          <size>32</size>
          <description>DC_ACC5Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC5Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=4</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC5Q_MSB</name>
          <addressOffset>0x1E4</addressOffset>
          <size>32</size>
          <description>DC_ACC5Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC5Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=4</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC6Q_LSB</name>
          <addressOffset>0x1E8</addressOffset>
          <size>32</size>
          <description>DC_ACC6Q_LSB</description>
          <fields>
            <field>
              <name>DC_ACC6Q_LSB</name>
              <description>[31:0] This register provides the LSB 32 bits value of DC accumulator Q channel  for bcnt=5</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DC_ACC6Q_MSB</name>
          <addressOffset>0x1EC</addressOffset>
          <size>32</size>
          <description>DC_ACC6Q_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DC_ACC6Q_MSB</name>
              <description>[3:0] This register provides the MSB 4 bits value of DC accumulator Q channel for bcnt=5</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC1_CLIP</name>
          <addressOffset>0x1F0</addressOffset>
          <size>32</size>
          <description>DCACC1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC1_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC2_CLIP</name>
          <addressOffset>0x1F4</addressOffset>
          <size>32</size>
          <description>DCACC2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC2_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC3_CLIP</name>
          <addressOffset>0x1F8</addressOffset>
          <size>32</size>
          <description>DCACC3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC3_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC4_CLIP</name>
          <addressOffset>0x1FC</addressOffset>
          <size>32</size>
          <description>DCACC4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC4_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC5_CLIP</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>DCACC5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC5_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCACC6_CLIP</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>DCACC6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCACC6_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q of DC accumulators for bcnt =5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST1_CLIP</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>DCEST1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST1_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST2_CLIP</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>DCEST2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST2_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST3_CLIP</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>DCEST3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST3_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST4_CLIP</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>DCEST4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST4_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST5_CLIP</name>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <description>DCEST5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST5_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST6_CLIP</name>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <description>DCEST6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST6_CLIP</name>
              <description>[0:0] This register contains the clip status of both I/Q DC estimates for bcnt =5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB1_CLIP</name>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <description>DCSUB1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB1_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB2_CLIP</name>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <description>DCSUB2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB2_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB3_CLIP</name>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <description>DCSUB3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB3_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB4_CLIP</name>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <description>DCSUB4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB4_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB5_CLIP</name>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <description>DCSUB5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB5_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCSUB6_CLIP</name>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <description>DCSUB6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCSUB6_CLIP</name>
              <description>[0:0] Indicates the DC subtraction clip status for bcnt =5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST_SHIFT</name>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <description>DCEST_SHIFT</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DCEST_SHIFT</name>
              <description>[3:0] Programmable shift applied to all 6 accumulator outputs. Cannot be bypassed. Scaled accumulator output is shifted by 2^( 2+DCEST_SHIFT). For DCEST_SHIFT = 15 also gives 2^(24) and not 25 (saturate at 24)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST_SCALE</name>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <description>DCEST_SCALE</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>DCEST_SCALE</name>
              <description>[8:0] 9-bit scale applied to all 6 accumulators. Multiplies the accumulator output by DCEST_SCALE/256.This is followed by right shift and truncation.Default value is 256 giving a scale of 1.0. Setting it to 128, gives a scale of 0.5</description>
              <bitWidth>9</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAG_SCALE</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>INTF_MAG_SCALE</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>INTF_MAG_SCALE</name>
              <description>[7:0] Unsigned scaler (5.3) applied to INTERFSUM_MAGn from interference statistics block.Default 8= scale of 1.0</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAG_SHIFT</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>INTF_MAG_SHIFT</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAG_SHIFT</name>
              <description>[3:0] Right shift applied after scaling ΓÇô 2^(4+INTERFSUM_MAG_SHIFT). Can t be more than 2^(17).</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFF_SCALE</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFF_SCALE</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFF_SCALE</name>
              <description>[7:0] Unsigned scaler (5.3) applied to INTERFSUM_MAGDIFFn from interference statistics block.Default 8= scale of 1.0</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFF_SHIFT</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFF_SHIFT</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFF_SHIFT</name>
              <description>[3:0] Right shift applied after scaling ΓÇô 2^(4+INTERFSUM_MAGDIFF_SHIFT). Can t be more than 2^(17).</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_FRAME_ZEROCOUNT</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>INTF_FRAME_ZEROCOUNT</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>INTF_FRAME_ZEROCOUNT</name>
              <description>[19:0] Number of samples that exceeded the threshold in a frame</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_CHIRP_ZEROCOUNT</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>INTF_CHIRP_ZEROCOUNT</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>INTF_CHIRP_ZEROCOUNT</name>
              <description>[11:0] Number of samples that exceeded the threshold in a chirp</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH1_SW</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH1_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH1_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =0</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH2_SW</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH2_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH2_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =1</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH3_SW</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH3_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH3_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =2</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH4_SW</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH4_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH4_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =3</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH5_SW</name>
          <addressOffset>0x268</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH5_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH5_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =4</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH6_SW</name>
          <addressOffset>0x26C</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH6_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH6_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude threshold value  for bcnt =5</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH1_SW</name>
          <addressOffset>0x270</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH1_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH1_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =0</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH2_SW</name>
          <addressOffset>0x274</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH2_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH2_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =1</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH3_SW</name>
          <addressOffset>0x278</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH3_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH3_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =2</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH4_SW</name>
          <addressOffset>0x27C</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH4_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH4_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =3</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH5_SW</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH5_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH5_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =4</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH6_SW</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH6_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH6_SW</name>
              <description>[23:0] This register provides software programmed interference magnitude difference threshold value  for bcnt =5</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC1_LSB</name>
          <addressOffset>0x288</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC1_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC1_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC1_MSB</name>
          <addressOffset>0x28C</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC1_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC1_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC2_LSB</name>
          <addressOffset>0x290</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC2_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC2_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC2_MSB</name>
          <addressOffset>0x294</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC2_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC2_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC3_LSB</name>
          <addressOffset>0x298</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC3_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC3_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC3_MSB</name>
          <addressOffset>0x29C</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC3_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC3_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 2</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC4_LSB</name>
          <addressOffset>0x2A0</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC4_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC4_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC4_MSB</name>
          <addressOffset>0x2A4</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC4_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC4_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 3</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC5_LSB</name>
          <addressOffset>0x2A8</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC5_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC5_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 4</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC5_MSB</name>
          <addressOffset>0x2AC</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC5_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC5_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 4</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC6_LSB</name>
          <addressOffset>0x2B0</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC6_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGACC6_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude (LSB 32 bits) for bcnt = 5</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC6_MSB</name>
          <addressOffset>0x2B4</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC6_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC6_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude  (MSB 4 bits) for bcnt = 5</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC1_LSB</name>
          <addressOffset>0x2B8</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC1_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC1_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC1_MSB</name>
          <addressOffset>0x2BC</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC1_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC1_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC2_LSB</name>
          <addressOffset>0x2C0</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC2_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC2_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC2_MSB</name>
          <addressOffset>0x2C4</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC2_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC2_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC3_LSB</name>
          <addressOffset>0x2C8</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC3_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC3_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC3_MSB</name>
          <addressOffset>0x2CC</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC3_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC3_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 2</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC4_LSB</name>
          <addressOffset>0x2D0</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC4_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC4_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC4_MSB</name>
          <addressOffset>0x2D4</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC4_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC4_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 3</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC5_LSB</name>
          <addressOffset>0x2D8</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC5_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC5_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 4</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC5_MSB</name>
          <addressOffset>0x2DC</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC5_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC5_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 4</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC6_LSB</name>
          <addressOffset>0x2E0</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC6_LSB</description>
          <fields>
            <field>
              <name>INTF_MAGDIFFACC6_LSB</name>
              <description>[31:0] This register contains the accumulator value of the interference magnitude difference (LSB 32 bits) for bcnt = 5</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC6_MSB</name>
          <addressOffset>0x2E4</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC6_MSB</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC6_MSB</name>
              <description>[3:0] This register contains the accumulator value of the interference magnitude difference (MSB 4 bits) for bcnt = 5</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC1_CLIP</name>
          <addressOffset>0x2E8</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC1_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC2_CLIP</name>
          <addressOffset>0x2EC</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC2_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC3_CLIP</name>
          <addressOffset>0x2F0</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC3_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC4_CLIP</name>
          <addressOffset>0x2F4</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC4_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC5_CLIP</name>
          <addressOffset>0x2F8</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC5_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGACC6_CLIP</name>
          <addressOffset>0x2FC</addressOffset>
          <size>32</size>
          <description>INTF_MAGACC6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGACC6_CLIP</name>
              <description>[0:0] Interference magnitude accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC1_CLIP</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC1_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC2_CLIP</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC2_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC3_CLIP</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC3_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC4_CLIP</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC4_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC5_CLIP</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC5_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFACC6_CLIP</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFACC6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFACC6_CLIP</name>
              <description>[0:0] Interference magnitude difference accumulator clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH1</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH1</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH1</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =0</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH2</name>
          <addressOffset>0x31C</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH2</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH2</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =1</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH3</name>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH3</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH3</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =2</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH4</name>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH4</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH4</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =3</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH5</name>
          <addressOffset>0x328</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH5</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH5</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =4</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH6</name>
          <addressOffset>0x32C</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH6</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH6</name>
              <description>[23:0] Indicates interference magnitude threshold by interference statistics for bcnt =5</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH1</name>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH1</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH1</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics  for bcnt =0</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH2</name>
          <addressOffset>0x334</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH2</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH2</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics for bcnt =1</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH3</name>
          <addressOffset>0x338</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH3</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH3</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics for bcnt =2</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH4</name>
          <addressOffset>0x33C</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH4</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH4</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics for bcnt =3</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH5</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH5</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH5</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics for bcnt =4</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH6</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH6</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH6</name>
              <description>[23:0] Indicates interference magnitude difference threshold by interference statistics for bcnt =5</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_SUMMAGTHRESH</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>INTF_SUMMAGTHRESH</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_SUMMAGTHRESH</name>
              <description>[23:0] Indicates the sum of mag values ; only Configured BCNT mag values are added</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_SUMMAGDIFFTHRESH</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>INTF_SUMMAGDIFFTHRESH</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>INTF_SUMMAGDIFFTHRESH</name>
              <description>[23:0] Indicates the sum of magdiff values ; only Configured BCNT magdiff values are added</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_SUMMAGTHRESH_CLIP</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>INTF_SUMMAGTHRESH_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_SUMMAGTHRESH_CLIP</name>
              <description>[0:0] Indicates the clip status of sum of magnitude threshold values</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_SUMMAGDIFFTHRESH_CLIP</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>INTF_SUMMAGDIFFTHRESH_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_SUMMAGDIFFTHRESH_CLIP</name>
              <description>[0:0] Indicates the clip status of sum of magnitude difference threshold values</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE1I</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>CMULTSCALE1I</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE1I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE2I</name>
          <addressOffset>0x35C</addressOffset>
          <size>32</size>
          <description>CMULTSCALE2I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE2I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE3I</name>
          <addressOffset>0x360</addressOffset>
          <size>32</size>
          <description>CMULTSCALE3I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE3I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE4I</name>
          <addressOffset>0x364</addressOffset>
          <size>32</size>
          <description>CMULTSCALE4I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE4I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE5I</name>
          <addressOffset>0x368</addressOffset>
          <size>32</size>
          <description>CMULTSCALE5I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE5I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE6I</name>
          <addressOffset>0x36C</addressOffset>
          <size>32</size>
          <description>CMULTSCALE6I</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE6I</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE1Q</name>
          <addressOffset>0x370</addressOffset>
          <size>32</size>
          <description>CMULTSCALE1Q</description>
          <fields>
            <field>
              <name>NU</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE1Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE2Q</name>
          <addressOffset>0x374</addressOffset>
          <size>32</size>
          <description>CMULTSCALE2Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE2Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE3Q</name>
          <addressOffset>0x378</addressOffset>
          <size>32</size>
          <description>CMULTSCALE3Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE3Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE4Q</name>
          <addressOffset>0x37C</addressOffset>
          <size>32</size>
          <description>CMULTSCALE4Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE4Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE5Q</name>
          <addressOffset>0x380</addressOffset>
          <size>32</size>
          <description>CMULTSCALE5Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE5Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMULTSCALE6Q</name>
          <addressOffset>0x384</addressOffset>
          <size>32</size>
          <description>CMULTSCALE6Q</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>11</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>CMULTSCALE6Q</name>
              <description>[20:0] In CMULT_MODE : 101 , the input samples are multiplied by a different complex scalar CMULTSCALE1I, CMULTSCALE1Q to CMULTSCALE6I, CMULTSCALE6Q per-iteration based on REG_BCNT. Else, a constant complex scalar CMULTSCALE1I and CMULTSCALEQI is applied to all sample across all iterations.</description>
              <bitWidth>21</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CLR_MISC_CLIP</name>
          <addressOffset>0x388</addressOffset>
          <size>32</size>
          <description>CLR_MISC_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR_MISC_CLIP</name>
              <description>[0:0] This clears the following clip register :- dc_acc_clip_status                                                                                                             dc_est_clip_status                                                                                                              intf_stats_mag_accumulator_clip_status                                                                Intf_stats_magdiff_accumulator_clip_status                                                                intf_stats_thresh_mag_clip_status                                                                intf_stats_thresh_magdiff_clip_status                                                                ip_formatter_clip_status                                                                op_formatter_clip_status                                                                intf_stats_sum_mag_val_clip_status                                                                intf_stats_sum_magdiff_val_clip_status               Its a self clearing bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FFTINTMEMADDR</name>
          <addressOffset>0x38C</addressOffset>
          <size>32</size>
          <description>FFTINTMEMADDR</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:25] Reserved.TI internal</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>FFT_INT_MEM_RD</name>
              <description>[24:24] Reserved.TI internal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>NU2</name>
              <description>[23:17] Reserved.TI internal</description>
              <bitWidth>7</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>FFT_INT_MEM_EN</name>
              <description>[16:16] Reserved.TI internal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[15:12] Reserved.TI internal</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>FFT_INT_MEM_SEL</name>
              <description>[11:9] Reserved.TI internal</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>FFT_INT_MEM_ADDR</name>
              <description>[8:0] Reserved.TI internal</description>
              <bitWidth>9</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_STATS_RESET_SW</name>
          <addressOffset>0x390</addressOffset>
          <size>32</size>
          <description>INTF_STATS_RESET_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_STATS_RESET_SW</name>
              <description>[0:0] SW reset for Interference statistics module. Its a self clearing bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCEST_RESET_SW</name>
          <addressOffset>0x394</addressOffset>
          <size>32</size>
          <description>DCEST_RESET_SW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCEST_RESET_SW</name>
              <description>[0:0] Reset for all 6 DC estimation accumulators.Its a self clearing bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IP_OP_FORMATTER_CLIP_STATUS</name>
          <addressOffset>0x398</addressOffset>
          <size>32</size>
          <description>IP_OP_FORMATTER_CLIP_STATUS</description>
          <fields>
            <field>
              <name>NU2</name>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>OP_FORMATTER_CLIP_STATUS</name>
              <description>[16:16] Indicates output formatter clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <bitWidth>15</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>IP_FORMATTER_CLIP_STATUS</name>
              <description>[0:0] Indicates input formatter clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH1_CLIP</name>
          <addressOffset>0x39C</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH1_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH2_CLIP</name>
          <addressOffset>0x3A0</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH2_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH3_CLIP</name>
          <addressOffset>0x3A4</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH3_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH4_CLIP</name>
          <addressOffset>0x3A8</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH4_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH5_CLIP</name>
          <addressOffset>0x3AC</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH5_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGTHRESH6_CLIP</name>
          <addressOffset>0x3B0</addressOffset>
          <size>32</size>
          <description>INTF_MAGTHRESH6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGTHRESH6_CLIP</name>
              <description>[0:0] Interference magnitude threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH1_CLIP</name>
          <addressOffset>0x3B4</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH1_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH1_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH2_CLIP</name>
          <addressOffset>0x3B8</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH2_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH2_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH3_CLIP</name>
          <addressOffset>0x3BC</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH3_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH3_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH4_CLIP</name>
          <addressOffset>0x3C0</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH4_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH4_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH5_CLIP</name>
          <addressOffset>0x3C4</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH5_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH5_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTF_MAGDIFFTHRESH6_CLIP</name>
          <addressOffset>0x3C8</addressOffset>
          <size>32</size>
          <description>INTF_MAGDIFFTHRESH6_CLIP</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INTF_MAGDIFFTHRESH6_CLIP</name>
              <description>[0:0] Interference magnitude difference threshold clip status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_ERR_MASK</name>
          <addressOffset>0x3CC</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_ERR_MASK</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_MASK_OPONG_RAM</name>
              <description>[9:9] When 1'b1 : ACCEL_MEM3 access error is masked.1'b0 : ACCEL_MEM3 access error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_MASK_OPING_RAM</name>
              <description>[8:8] When 1'b1 : ACCEL_MEM2 access error is masked.1'b0 : ACCEL_MEM2 access error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_MASK_IPONG_RAM</name>
              <description>[7:7] When 1'b1 : ACCEL_MEM1 access error is masked.1'b0 : ACCEL_MEM1 access error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_MASK_IPING_RAM</name>
              <description>[6:6] When 1'b1 : ACCEL_MEM0 access error is masked.1'b0 : ACCEL_MEM0 access error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_MASK_OPONG_RAM</name>
              <description>[5:5] When 1'b1 : ACCEL_MEM3 parity error is masked.1'b0 : ACCEL_MEM03 parity error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_MASK_OPING_RAM</name>
              <description>[4:4] When 1'b1 : ACCEL_MEM2 parity error is masked.1'b0 : ACCEL_MEM2 parity error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_MASK_IPONG_RAM</name>
              <description>[3:3] When 1'b1 : ACCEL_MEM1 parity error is masked.1'b0 : ACCEL_MEM1 parity error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_MASK_IPING_RAM</name>
              <description>[2:2] When 1'b1 : ACCEL_MEM0 parity error is masked.1'b0 : ACCEL_MEM0 parity error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_MASK_WINDOW_RAM</name>
              <description>[1:1] When 1'b1 : Window RAM parity error is masked.1'b0 : Window RAM parity error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ERR_MASK_FSM_LOCKSTEP</name>
              <description>[0:0] When 1'b1 : FSM lockstep error is masked.1'b0 : FSM lockstep error is not masked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_ERR_STATUS</name>
          <addressOffset>0x3D0</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_ERR_STATUS</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_OPONG_RAM</name>
              <description>[9:9] Indicates the ACCEL_MEM3 access error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_OPING_RAM</name>
              <description>[8:8] Indicates the ACCEL_MEM2 access error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_IPONG_RAM</name>
              <description>[7:7] Indicates the ACCEL_MEM1 access error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_IPING_RAM</name>
              <description>[6:6] Indicates the ACCEL_MEM0 access error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_OPONG_RAM</name>
              <description>[5:5] Indicates the ACCEL_MEM3 parity error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_OPING_RAM</name>
              <description>[4:4] Indicates the ACCEL_MEM2 parity error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_IPONG_RAM</name>
              <description>[3:3] Indicates the ACCEL_MEM1 parity error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_IPING_RAM</name>
              <description>[2:2] Indicates the ACCEL_MEM0 parity error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_WINDOW_RAM</name>
              <description>[1:1] Indicates the Window RAM parity  error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ERR_STATUS_FSM_LOCKSTEP</name>
              <description>[0:0] Indicates the FSM lockstep error (Masked status)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWA_SAFETY_ERR_STATUS_RAW</name>
          <addressOffset>0x3D4</addressOffset>
          <size>32</size>
          <description>HWA_SAFETY_ERR_STATUS_RAW</description>
          <fields>
            <field>
              <name>NU1</name>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_RAW_OPONG_RAM</name>
              <description>[9:9] Indicates the ACCEL_MEM3 access error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_RAW_OPING_RAM</name>
              <description>[8:8] Indicates the ACCEL_MEM2 access error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_RAW_IPONG_RAM</name>
              <description>[7:7] Indicates the ACCEL_MEM1 access error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ACCESS_ERR_STATUS_RAW_IPING_RAM</name>
              <description>[6:6] Indicates the ACCEL_MEM0 access error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_RAW_OPONG_RAM</name>
              <description>[5:5] Indicates the ACCEL_MEM3 parity error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_RAW_OPING_RAM</name>
              <description>[4:4] Indicates the ACCEL_MEM2 parity error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_RAW_IPONG_RAM</name>
              <description>[3:3] Indicates the ACCEL_MEM1 parity error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_RAW_IPING_RAM</name>
              <description>[2:2] Indicates the ACCEL_MEM0 parity error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_PARITY_ERR_STATUS_RAW_WINDOW_RAM</name>
              <description>[1:1] Indicates the Window RAM parity error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>HWA_SAFETY_ERR_STATUS_RAW_FSM_LOCKSTEP</name>
              <description>[0:0] Indicates the FSM lockstep error (raw status).Set irrespective of HWA_SAFETY_ERR_MASK bit 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPTC_B0</name>
      <baseAddress>0x55020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>860</size>
        <usage>registers</usage>
      </addressBlock>
      <description>Register test environment</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <description>[31:30] PID Scheme: Used to distinguish between old ID scheme and current. Spare bit to encode future schemes EDMA uses 'new scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            <name>PID_SCHEME</name></field>
            <field>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            <name>FUNCTION_INDICATES_A</name></field>
            <field>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>RTL_VERSION</name></field>
            <field>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>MAJOR_REVISION</name></field>
            <field>
              <description>[7:6] Custom revision field: Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>CUSTOM_REVISION_FIELD</name></field>
            <field>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>MINOR_REVISION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>TC Configuration Register</description>
          <fields>
            <field>
              <description>[9:8] Dst Register FIFO Depth Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            <name>DST_REGISTER_FIFO</name></field>
            <field>
              <description>[5:4] Bus Width Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            <name>BUS_WIDTH_PARAMETERIZATION</name></field>
            <field>
              <description>[2:0] Fifo Size Parameterization</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FIFO_SIZE_PARAMETERIZATION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCSTAT</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>TC Status Register</description>
          <fields>
            <field>
              <description>[13:12] Dst FIFO Start Pointer#br#Represents the offset to the head entry of Dst Register FIFO in units of entries. Legal values = 0x0 to 0x3</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            <name>DST_FIFO_START</name></field>
            <field>
              <description>[8:8] Channel Active#br#Channel Active is a logical-OR of each of the BUSY/ACTV signals. The ACTV bit must remain high through the life of a TR.#br#ACTV = 0 : Channel is idle.#br#ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>CHANNEL_ACTIVE</name></field>
            <field>
              <description>[6:4] Destination Active State#br#Specifies the number of TRs that are resident in the Dst Register FIFO at a given instant.#br#Legal values are constrained by the DSTREGDEPTH parameter.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>DESTINATION_ACTIVE_STATE</name></field>
            <field>
              <description>[2:2] Write Status Active#br#WSACTV = 0 : Write status is not pending. Write status has been received for all previously issued write commands.#br#WSACTV = 1 : Write Status is pending. Write status has not been received for all previously issued write commands.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>WRITE_STATUS_ACTIVE</name></field>
            <field>
              <description>[1:1] Source Active State#br#SRCACTV = 0 : Source Active set is idle. Any TR written to Prog Set will immediately transition to Source Active set as long as the Dst FIFO Set is not full [DSTFULL == 1].#br#SRCACTV = 1 : Source Active set is busy either performing read transfers or waiting to perform read transfers for current Transfer Request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SOURCE_ACTIVE_STATE</name></field>
            <field>
              <description>[0:0] Program Register Set Busy#br#PROGBUSY = 0 : Prog set idle and is available for programming.#br#PROGBUSY = 1 : Prog set busy. User should poll for PROGBUSY equal to '0' prior to re-programming the Program Register set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_REGISTER_SET</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTSTAT</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Status:#br#TRDONE = 0 : Condition not detected.#br#TRDONE = 1 : Set when TC has completed a Transfer Request. TRDONE should be set when the write status is returned for the final write of a TR. Cleared when user writes '1' to INTCLR.TRDONE register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Status:#br#PROGEMPTY = 0 : Condition not detected.#br#PROGEMPTY = 1 : Set when Program Register set transitions to empty state. Cleared when user writes '1' to INTCLR.PROGEMPTY register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTEN</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Enable:#br#INTEN.TRDONE = 0 : TRDONE Event is disabled.#br#INTEN.TRDONE = 1 : TRDONE Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Enable:#br#INTEN.PROGEMPTY = 0 : PROGEMPTY Event is disabled.#br#INTEN.PROGEMPTY = 1 : PROGEMPTY Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCLR</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Clear:#br#INTCLR.TRDONE = 0 : Writes of '0' have no effect.#br#INTCLR.TRDONE = 1 : Write of '1' clears INTSTAT.TRDONE bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Clear:#br#INTCLR.PROGEMPTY = 0 : Writes of '0' have no effect.#br#INTCLR.PROGEMPTY = 1 : Write of '1' clears INTSTAT.PROGEMPTY bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCMD</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>Interrupt Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC interrupt:#br#Write of '1' to SET causes TPTC interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_INTERRUPT</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC interrupt#br#Write of '1' to EVAL causes TPTC interrupt to be pulsed if any of the INTSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRSTAT</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>Error Status Register</description>
          <fields>
            <field>
              <description>[3:3] MMR Address Error:#br#MMRAERR = 0 : Condition not detected.#br#MMRAERR = 1 : User attempted to read or write to invalid address configuration memory map. [Is only be set for non-emulation accesses]. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>MMR_ADDRESS_ERROR</name></field>
            <field>
              <description>[2:2] TR Error:#br#TR detected that violates FIFO Mode transfer [SAM or DAM is '1'] alignment rules or has ACNT or BCNT == 0. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>TR_ERROR</name></field>
            <field>
              <description>[0:0] Bus Error Event:#br#BUSERR = 0: Condition not detected.#br#BUSERR = 1: TC has detected an error code on the write response bus or read response bus. Error information is stored in Error Details Register [ERRDET].</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BUS_ERROR_EVENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERREN</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>Error Enable Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt enable for ERRSTAT.MMRAERR:#br#ERREN.MMRAERR = 0 : BUSERR is disabled.#br#ERREN.MMRAERR = 1 : MMRAERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_ENABLE_FOR</name></field>
            <field>
              <description>[2:2] Interrupt enable for ERRSTAT.TRERR:#br#ERREN.TRERR = 0 : BUSERR is disabled.#br#ERREN.TRERR = 1 : TRERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt enable for ERRSTAT.BUSERR:#br#ERREN.BUSERR = 0 : BUSERR is disabled.#br#ERREN.BUSERR = 1 : BUSERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCLR</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>Error Clear Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt clear for ERRSTAT.MMRAERR:#br#ERRCLR.MMRAERR = 0 : Writes of '0' have no effect.#br#ERRCLR.MMRAERR = 1 : Write of '1' clears ERRSTAT.MMRAERR bit. Write of '1' to ERRCLR.MMRAERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_CLEAR_FOR</name></field>
            <field>
              <description>[2:2] Interrupt clear for ERRSTAT.TRERR:#br#ERRCLR.TRERR = 0 : Writes of '0' have no effect.#br#ERRCLR.TRERR = 1 : Write of '1' clears ERRSTAT.TRERR bit. Write of '1' to ERRCLR.TRERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt clear for ERRSTAT.BUSERR:#br#ERRCLR.BUSERR = 0 : Writes of '0' have no effect.#br#ERRCLR.BUSERR = 1 : Write of '1' clears ERRSTAT.BUSERR bit. Write of '1' to  ERRCLR.BUSERR clears the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRDET</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>Error Details Register</description>
          <fields>
            <field>
              <description>[17:17] Contains the OPT.TCCHEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            <name>CONTAINS_THE_OPT_TCCHEN</name></field>
            <field>
              <description>[16:16] Contains the OPT.TCINTEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            <name>CONTAINS_THE_OPT_TCINTEN</name></field>
            <field>
              <description>[13:8] Transfer Complete Code: Contains the OPT.TCC value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[3:0] Transaction Status:#br#Stores the non-zero status/error code that was detected on the read status or write status bus.#br#MS-bit effectively serves as the read vs. write error code.#br#If read status and write status are returned on the same cycle then the TC chooses non-zero version. If both are non-zero then write status is treated as higher priority.#br#Encoding of errors matches the CBA spec.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>TRANSACTION_STATUS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCMD</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>Error Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC error interrupt:#br#Write of '1' to SET causes TPTC error interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_ERROR</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC error interrupt#br#Write of '1' to EVAL causes TPTC error interrupt to be pulsed if any of the ERRSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RDRATE</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Read Rate Register</description>
          <fields>
            <field>
              <description>[2:0] Read Rate Control: Controls the number of cycles between read commands. This is a global setting that applies to all TRs for this TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>READ_RATE_CONTROL</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>POPT</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>Prog Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSRC</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>Prog Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PCNT</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>Prog Set Count</description>
          <fields>
            <field>
              <description>[31:16] B-Dimension count. Number of arrays to be transferred where each array is ACNT in length.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>BDIMENSION_COUNT__NUMBER</name></field>
            <field>
              <description>[15:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PDST</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>Prog Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIDX</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>Prog Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Program Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Program Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PMPPRXY</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>Prog Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAOPT</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>Src Actv Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRC</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNT</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>Src Actv Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADST</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABIDX</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Source Active Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Source Active Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAMPPRXY</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>Src Actv Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNTRLD</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>Src Actv Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Source Active Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRCBREF</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Source Active Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADSTBREF</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Dst address reference is not applicable for Src Active Register Set. Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DST_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABCNT</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Dimension count:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Count Remaining for Src Active Register Set. Represents the amount of data remaining to be read. Initial value is copied from PCNT. TC decrements ACNT and BCNT as necessary after each read command is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BDIMENSION_COUNT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFCNTRLD</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Destination FIFO Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRCBREF</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Destination FIFO Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT0</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC0</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT0</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST0</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX0</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY0</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT0</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT1</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC1</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT1</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST1</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_3</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX1</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY1</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT1</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPTC_B0_1</name>
      <baseAddress>0x55040000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>860</size>
        <usage>registers</usage>
      </addressBlock>
      <description>Register test environment</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <description>[31:30] PID Scheme: Used to distinguish between old ID scheme and current. Spare bit to encode future schemes EDMA uses 'new scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            <name>PID_SCHEME</name></field>
            <field>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            <name>FUNCTION_INDICATES_A</name></field>
            <field>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>RTL_VERSION</name></field>
            <field>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>MAJOR_REVISION</name></field>
            <field>
              <description>[7:6] Custom revision field: Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>CUSTOM_REVISION_FIELD</name></field>
            <field>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>MINOR_REVISION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>TC Configuration Register</description>
          <fields>
            <field>
              <description>[9:8] Dst Register FIFO Depth Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            <name>DST_REGISTER_FIFO</name></field>
            <field>
              <description>[5:4] Bus Width Parameterization</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            <name>BUS_WIDTH_PARAMETERIZATION</name></field>
            <field>
              <description>[2:0] Fifo Size Parameterization</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FIFO_SIZE_PARAMETERIZATION</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TCSTAT</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>TC Status Register</description>
          <fields>
            <field>
              <description>[13:12] Dst FIFO Start Pointer#br#Represents the offset to the head entry of Dst Register FIFO in units of entries. Legal values = 0x0 to 0x3</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            <name>DST_FIFO_START</name></field>
            <field>
              <description>[8:8] Channel Active#br#Channel Active is a logical-OR of each of the BUSY/ACTV signals. The ACTV bit must remain high through the life of a TR.#br#ACTV = 0 : Channel is idle.#br#ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>CHANNEL_ACTIVE</name></field>
            <field>
              <description>[6:4] Destination Active State#br#Specifies the number of TRs that are resident in the Dst Register FIFO at a given instant.#br#Legal values are constrained by the DSTREGDEPTH parameter.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>DESTINATION_ACTIVE_STATE</name></field>
            <field>
              <description>[2:2] Write Status Active#br#WSACTV = 0 : Write status is not pending. Write status has been received for all previously issued write commands.#br#WSACTV = 1 : Write Status is pending. Write status has not been received for all previously issued write commands.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>WRITE_STATUS_ACTIVE</name></field>
            <field>
              <description>[1:1] Source Active State#br#SRCACTV = 0 : Source Active set is idle. Any TR written to Prog Set will immediately transition to Source Active set as long as the Dst FIFO Set is not full [DSTFULL == 1].#br#SRCACTV = 1 : Source Active set is busy either performing read transfers or waiting to perform read transfers for current Transfer Request.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SOURCE_ACTIVE_STATE</name></field>
            <field>
              <description>[0:0] Program Register Set Busy#br#PROGBUSY = 0 : Prog set idle and is available for programming.#br#PROGBUSY = 1 : Prog set busy. User should poll for PROGBUSY equal to '0' prior to re-programming the Program Register set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_REGISTER_SET</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTSTAT</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Status:#br#TRDONE = 0 : Condition not detected.#br#TRDONE = 1 : Set when TC has completed a Transfer Request. TRDONE should be set when the write status is returned for the final write of a TR. Cleared when user writes '1' to INTCLR.TRDONE register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Status:#br#PROGEMPTY = 0 : Condition not detected.#br#PROGEMPTY = 1 : Set when Program Register set transitions to empty state. Cleared when user writes '1' to INTCLR.PROGEMPTY register bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTEN</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Enable:#br#INTEN.TRDONE = 0 : TRDONE Event is disabled.#br#INTEN.TRDONE = 1 : TRDONE Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Enable:#br#INTEN.PROGEMPTY = 0 : PROGEMPTY Event is disabled.#br#INTEN.PROGEMPTY = 1 : PROGEMPTY Event is enabled and contributes to interrupt generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCLR</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <fields>
            <field>
              <description>[1:1] TR Done Event Clear:#br#INTCLR.TRDONE = 0 : Writes of '0' have no effect.#br#INTCLR.TRDONE = 1 : Write of '1' clears INTSTAT.TRDONE bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>TR_DONE_EVENT</name></field>
            <field>
              <description>[0:0] Program Set Empty Event Clear:#br#INTCLR.PROGEMPTY = 0 : Writes of '0' have no effect.#br#INTCLR.PROGEMPTY = 1 : Write of '1' clears INTSTAT.PROGEMPTY bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROGRAM_SET_EMPTY</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTCMD</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>Interrupt Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC interrupt:#br#Write of '1' to SET causes TPTC interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_INTERRUPT</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC interrupt#br#Write of '1' to EVAL causes TPTC interrupt to be pulsed if any of the INTSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRSTAT</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>Error Status Register</description>
          <fields>
            <field>
              <description>[3:3] MMR Address Error:#br#MMRAERR = 0 : Condition not detected.#br#MMRAERR = 1 : User attempted to read or write to invalid address configuration memory map. [Is only be set for non-emulation accesses]. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>MMR_ADDRESS_ERROR</name></field>
            <field>
              <description>[2:2] TR Error:#br#TR detected that violates FIFO Mode transfer [SAM or DAM is '1'] alignment rules or has ACNT or BCNT == 0. No additional error information is recorded.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>TR_ERROR</name></field>
            <field>
              <description>[0:0] Bus Error Event:#br#BUSERR = 0: Condition not detected.#br#BUSERR = 1: TC has detected an error code on the write response bus or read response bus. Error information is stored in Error Details Register [ERRDET].</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BUS_ERROR_EVENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERREN</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>Error Enable Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt enable for ERRSTAT.MMRAERR:#br#ERREN.MMRAERR = 0 : BUSERR is disabled.#br#ERREN.MMRAERR = 1 : MMRAERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_ENABLE_FOR</name></field>
            <field>
              <description>[2:2] Interrupt enable for ERRSTAT.TRERR:#br#ERREN.TRERR = 0 : BUSERR is disabled.#br#ERREN.TRERR = 1 : TRERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt enable for ERRSTAT.BUSERR:#br#ERREN.BUSERR = 0 : BUSERR is disabled.#br#ERREN.BUSERR = 1 : BUSERR is enabled and contributes to the TPTC error interrupt generation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_ENABLE_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCLR</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>Error Clear Register</description>
          <fields>
            <field>
              <description>[3:3] Interrupt clear for ERRSTAT.MMRAERR:#br#ERRCLR.MMRAERR = 0 : Writes of '0' have no effect.#br#ERRCLR.MMRAERR = 1 : Write of '1' clears ERRSTAT.MMRAERR bit. Write of '1' to ERRCLR.MMRAERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>INTERRUPT_CLEAR_FOR</name></field>
            <field>
              <description>[2:2] Interrupt clear for ERRSTAT.TRERR:#br#ERRCLR.TRERR = 0 : Writes of '0' have no effect.#br#ERRCLR.TRERR = 1 : Write of '1' clears ERRSTAT.TRERR bit. Write of '1' to ERRCLR.TRERR does not clear the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_1</name></field>
            <field>
              <description>[0:0] Interrupt clear for ERRSTAT.BUSERR:#br#ERRCLR.BUSERR = 0 : Writes of '0' have no effect.#br#ERRCLR.BUSERR = 1 : Write of '1' clears ERRSTAT.BUSERR bit. Write of '1' to  ERRCLR.BUSERR clears the ERRDET register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>INTERRUPT_CLEAR_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRDET</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>Error Details Register</description>
          <fields>
            <field>
              <description>[17:17] Contains the OPT.TCCHEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            <name>CONTAINS_THE_OPT_TCCHEN</name></field>
            <field>
              <description>[16:16] Contains the OPT.TCINTEN value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            <name>CONTAINS_THE_OPT_TCINTEN</name></field>
            <field>
              <description>[13:8] Transfer Complete Code: Contains the OPT.TCC value programmed by the user for the Read or Write transaction that resulted in an error.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[3:0] Transaction Status:#br#Stores the non-zero status/error code that was detected on the read status or write status bus.#br#MS-bit effectively serves as the read vs. write error code.#br#If read status and write status are returned on the same cycle then the TC chooses non-zero version. If both are non-zero then write status is treated as higher priority.#br#Encoding of errors matches the CBA spec.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>TRANSACTION_STATUS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERRCMD</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>Error Command Register</description>
          <fields>
            <field>
              <description>[1:1] Set TPTC error interrupt:#br#Write of '1' to SET causes TPTC error interrupt to be pulsed unconditionally.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>SET_TPTC_ERROR</name></field>
            <field>
              <description>[0:0] Evaluate state of TPTC error interrupt#br#Write of '1' to EVAL causes TPTC error interrupt to be pulsed if any of the ERRSTAT bits are set to '1'.#br#Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EVALUATE_STATE_OF</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RDRATE</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Read Rate Register</description>
          <fields>
            <field>
              <description>[2:0] Read Rate Control: Controls the number of cycles between read commands. This is a global setting that applies to all TRs for this TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            <name>READ_RATE_CONTROL</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>POPT</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>Prog Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PSRC</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>Prog Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PCNT</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>Prog Set Count</description>
          <fields>
            <field>
              <description>[31:16] B-Dimension count. Number of arrays to be transferred where each array is ACNT in length.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>BDIMENSION_COUNT__NUMBER</name></field>
            <field>
              <description>[15:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PDST</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>Prog Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Program Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIDX</name>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <description>Prog Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Program Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Program Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PMPPRXY</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>Prog Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAOPT</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>Src Actv Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRC</name>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNT</name>
          <addressOffset>0x248</addressOffset>
          <size>32</size>
          <description>Src Actv Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred in first dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADST</name>
          <addressOffset>0x24C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Source Active Register Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABIDX</name>
          <addressOffset>0x250</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Source Active Register Set:#br#B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements]. DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Source B-Idx for Source Active Register Set:#br#B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements]. SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SAMPPRXY</name>
          <addressOffset>0x254</addressOffset>
          <size>32</size>
          <description>Src Actv Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SACNTRLD</name>
          <addressOffset>0x258</addressOffset>
          <size>32</size>
          <description>Src Actv Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Source Active Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SASRCBREF</name>
          <addressOffset>0x25C</addressOffset>
          <size>32</size>
          <description>Src Actv Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Source Active Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SADSTBREF</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>Src Actv Set Dst Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Dst address reference is not applicable for Src Active Register Set. Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DST_ADDRESS_REFERENCE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SABCNT</name>
          <addressOffset>0x264</addressOffset>
          <size>32</size>
          <description>Src Actv Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Dimension count:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Count Remaining for Src Active Register Set. Represents the amount of data remaining to be read. Initial value is copied from PCNT. TC decrements ACNT and BCNT as necessary after each read command is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BDIMENSION_COUNT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFCNTRLD</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Cnt Reload</description>
          <fields>
            <field>
              <description>[15:0] A-Cnt Reload value for Destination FIFO Register set. Value copied from PCNT.ACNT: Represents the originally programmed value of ACNT.#br#The Reload value is used to reinitialize ACNT after each array is serviced [i.e. ACNT decrements to 0]. by the Src offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT bytes]</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ACNT_RELOAD_VALUE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRCBREF</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Addr B-Reference</description>
          <fields>
            <field>
              <description>[31:0] Source address reference for Destination FIFO Register Set:#br#Represents the starting address for the array currently being read. The next array's starting address is calculated as the 'reference address' plus the 'source b-idx' value.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_REFERENCE_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT0</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC0</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT0</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST0</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX0</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY0</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT0</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFOPT1</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Options</description>
          <fields>
            <field>
              <description>[29:28] Debug ID#br#Value driven on the read (tptc_r_dbg_channel_id) and write (tptc_w_dbg_channel_id) command bus.#br#Used at system level for trace/profiling of user selected transfers in systems that include this feature.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            <name>DEBUG_ID</name></field>
            <field>
              <description>[22:22] Transfer complete chaining enable:#br#0: Transfer complete chaining is disabled.#br#1: Transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            <name>TRANSFER_COMPLETE_CHAINING</name></field>
            <field>
              <description>[20:20] Transfer complete interrupt enable:#br#0: Transfer complete interrupt is disabled.#br#1: Transfer complete interrupt is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            <name>TRANSFER_COMPLETE_INTERRUPT</name></field>
            <field>
              <description>[17:12] Transfer Complete Code: The 6-bit code is used to set the relevant bit in CER or IPR of the TPCC module.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            <name>TRANSFER_COMPLETE_CODE</name></field>
            <field>
              <description>[10:8] FIFO width control: Applies if either SAM or DAM is set to FIFO mode.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>FIFO_WIDTH_CONTROL</name></field>
            <field>
              <description>[6:4] Transfer Priority:#br#0: Priority 0 - Highest priority#br#1: Priority 1 ...#br#7: Priority 7 - Lowest priority</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            <name>TRANSFER_PRIORITY</name></field>
            <field>
              <description>[1:1] Destination Address Mode within an array:#br#0: INCR Dst addressing within an array increments.#br#1: FIFO Dst addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>DESTINATION_ADDRESS_MODE</name></field>
            <field>
              <description>[0:0] Source Address Mode within an array:#br#0: INCR Src addressing within an array increments.#br#1: FIFO Src addressing within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_MODE</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFSRC1</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Src Address</description>
          <fields>
            <field>
              <description>[31:0] Source address is not applicable for Dst FIFO Register Set: Reads return 0x0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SOURCE_ADDRESS_IS_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFACNT1</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set A-Count</description>
          <fields>
            <field>
              <description>[22:0] A-Dimension count. Number of bytes to be transferred infirst dimension.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>0</bitOffset>
            <name>ADIMENSION_COUNT__NUMBER_2</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFDST1</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Dst Address</description>
          <fields>
            <field>
              <description>[31:0] Destination address for Dst FIFO Register Set:#br#Initial value is copied from PDST.DADDR.#br#TC updates value according to destination addressing mode [OPT.SAM] and/or dest index value [BIDX.DBIDX] after each write command is issued.#br#When a TR is complete the final value should be the address of the last write command issued.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>DESTINATION_ADDRESS_FOR_3</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBIDX1</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Dim Idx</description>
          <fields>
            <field>
              <description>[31:16] Dest B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Destination arrays: Represents the offset in bytes between the starting address of each destination array [recall that there are BCNT arrays of ACNT elements].#br#DBIDX is always used regardless of whether DAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>DEST_BIDX_FOR</name></field>
            <field>
              <description>[15:0] Src B-Idx for Dest FIFO Register Set.#br#Value copied from PBIDX: B-Idx offset between Source arrays: Represents the offset in bytes between the starting address of each source array [recall that there are BCNT arrays of ACNT elements].#br#SBIDX is always used regardless of whether SAM is Increment or FIFO mode.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>SRC_BIDX_FOR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFMPPRXY1</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set Mem Protect Proxy</description>
          <fields>
            <field>
              <description>[9:9] Secure Level: Deprecated, always read as 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            <name>SECURE_LEVEL</name></field>
            <field>
              <description>[8:8] Privilege Level:#br#PRIV = 0 : User level privilege#br#PRIV = 1 : Supervisor level privilege#br#PMPPRXY.PRIV is always updated with the value from the configuration bus privilege field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIV value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the PRIV of the external host that sets up the DMA transaction.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PRIVILEGE_LEVEL</name></field>
            <field>
              <description>[3:0] Privilege ID:#br#PMPPRXY.PRIVID is always updated with the value from configuration bus privilege ID field on any/every write to Program Set BIDX Register [trigger register].#br#The PRIVID value for the SA Set and DF Set are copied from the value in the Program set along with the remainder of the parameter values.The privilege ID is issued on the VBusM read and write command bus such that the target endpoints can perform memory protection checks based on the privid of the external host that sets up the DMA transaction.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFBCNT1</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>Dst FIFO Set B-Count</description>
          <fields>
            <field>
              <description>[15:0] B-Count Remaining for Dst Register Set:#br#Number of arrays to be transferred where each array is ACNT in length.#br#Represents the amount of data remaining to be written.#br#Initial value is copied from PCNT.#br#TC decrements ACNT and BCNT as necessary after each write dataphase is issued. Final value should be 0 when TR is complete.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            <name>BCOUNT_REMAINING_FOR_1</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPCC_B</name>
      <baseAddress>0x55080000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>16416</size>
        <usage>registers</usage>
      </addressBlock>
      <description>TPCC</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] PID Scheme:  Used to distinguish between old ID scheme and  current. Spare bit to encode future schemes EDMA uses 'new  scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>RES1</name>
              <description>[29:28] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RTL</name>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MAJOR</name>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom revision field:  Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MINOR</name>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>CC Configuration Register</description>
          <fields>
            <field>
              <name>RES2</name>
              <description>[31:26] RESERVE FIELD</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>MPEXIST</name>
              <description>[25:25] Memory Protection Existence MPEXIST = 0 : No memory  protection. MPEXIST = 1 : Memory Protection logic included.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CHMAPEXIST</name>
              <description>[24:24] Channel Mapping Existence CHMAPEXIST = 0 : No Channel  mapping. CHMAPEXIST = 1 : Channel mapping logic included.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES3</name>
              <description>[23:22] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>NUMREGN</name>
              <description>[21:20] Number of MP and Shadow regions</description>
              <bitWidth>2</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES4</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NUMTC</name>
              <description>[18:16] Number of Queues/Number of TCs</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES5</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>NUMPAENTRY</name>
              <description>[14:12] Number of PaRAM entries</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES6</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>NUMINTCH</name>
              <description>[10:8] Number of Interrupt Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES7</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>NUMQDMACH</name>
              <description>[6:4] Number of QDMA Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES8</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>NUMDMACH</name>
              <description>[2:0] Number of DMA Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QCHMAPN</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>QDMA Channel N Mapping Register</description>
          <fields>
            <field>
              <name>RES10</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>PAENTRY</name>
              <description>[13:5] PaRAM Entry number for QDMA Channel N.</description>
              <bitWidth>9</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TRWORD</name>
              <description>[4:2] TRWORD points to the specific trigger word of the PaRAM  Entry defined by PAENTRY. A write to the trigger word  results in a QDMA Event being recognized.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DMAQNUMN</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>DMA Queue Number Register n Contains the Event queue number  to be used for the corresponding DMA Channel.</description>
          <fields>
            <field>
              <name>RES11</name>
              <description>[31:31] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[30:28] DMA Queue Number for event #7</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>RES12</name>
              <description>[27:27] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[26:24] DMA Queue Number for event #6</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES13</name>
              <description>[23:23] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[22:20] DMA Queue Number for event #5</description>
              <bitWidth>3</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES14</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[18:16] DMA Queue Number for event #4</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES15</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[14:12] DMA Queue Number for event #3</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES16</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[10:8] DMA Queue Number for event #2</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES17</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[6:4] DMA Queue Number for event #1</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES18</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[2:0] DMA Queue Number for event #0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QDMAQNUM</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>QDMA Queue Number Register Contains the Event queue number  to be used for the corresponding QDMA Channel.</description>
          <fields>
            <field>
              <name>RES19</name>
              <description>[31:31] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[30:28] QDMA Queue Number for event #7</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>RES20</name>
              <description>[27:27] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[26:24] QDMA Queue Number for event #6</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES21</name>
              <description>[23:23] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[22:20] QDMA Queue Number for event #5</description>
              <bitWidth>3</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES22</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[18:16] QDMA Queue Number for event #4</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES23</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[14:12] QDMA Queue Number for event #3</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES24</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[10:8] QDMA Queue Number for event #2</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES25</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[6:4] QDMA Queue Number for event #1</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES26</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[2:0] QDMA Queue Number for event #0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QUETCMAP</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Queue to TC Mapping</description>
          <fields>
            <field>
              <name>RES27</name>
              <description>[31:7] RESERVE FIELD</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TCNUMQ1</name>
              <description>[6:4] TC Number for Queue N: Defines the TC number that Event  Queue N TRs are written to.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES28</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TCNUMQ0</name>
              <description>[2:0] TC Number for Queue N: Defines the TC number that Event  Queue N TRs are written to.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QUEPRI</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Queue Priority</description>
          <fields>
            <field>
              <name>RES29</name>
              <description>[31:7] RESERVE FIELD</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>PRIQ1</name>
              <description>[6:4] Priority Level for Queue 1 Dictates the priority level used  for the OPTIONS field programmation for Qn TRs. Sets the  priority used for TC read and write commands.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES30</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>PRIQ0</name>
              <description>[2:0] Priority Level for Queue 0 Dictates the priority level used  for the OPTIONS field programmation for Qn TRs. Sets the  priority used for TC read and write commands.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMR</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Event Missed Register:  The Event Missed register is set if  2 events are received without the first event being cleared  or if a Null TR is serviced. Chained events (CER) Set  Events (ESR) and normal events (ER) are treated  individually. If any bit in the EMR register is set (and all  errors (including QEMR/CCERR) were previously clear) then  an error will be signaled with TPCC error interrupt.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event Missed #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event Missed #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event Missed #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event Missed #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event Missed #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event Missed #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event Missed #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event Missed #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event Missed #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event Missed #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event Missed #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event Missed #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event Missed #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event Missed #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event Missed #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event Missed #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event Missed #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event Missed #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event Missed #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event Missed #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event Missed #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event Missed #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event Missed #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event Missed #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMRH</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Event Missed Register (High Part):  The Event Missed  register is set if 2 events are received without the first  event being cleared or if a Null TR is serviced. Chained  events (CER) Set Events (ESR) and normal events (ER) are  treated individually. If any bit in the EMR register is set  (and all errors (including QEMR/CCERR) were previously  clear) then an error will be signaled with TPCC error  interrupt.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event Missed #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event Missed #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event Missed #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event Missed #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event Missed #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event Missed #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event Missed #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event Missed #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event Missed #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event Missed #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event Missed #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event Missed #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event Missed #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event Missed #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event Missed #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event Missed #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event Missed #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event Missed #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event Missed #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event Missed #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event Missed #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event Missed #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event Missed #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event Missed #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event Missed #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event Missed #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event Missed #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event Missed #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event Missed #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event Missed #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event Missed #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event Missed #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMCR</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Event Missed Clear Register:  CPU write of '1' to the  EMCR.En bit causes the EMR.En bit to be cleared. CPU write  of '0' has no effect.. All error bits must be cleared before  additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event Missed Clear #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event Missed Clear #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event Missed Clear #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event Missed Clear #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event Missed Clear #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event Missed Clear #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event Missed Clear #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event Missed Clear #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event Missed Clear #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event Missed Clear #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event Missed Clear #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event Missed Clear #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event Missed Clear #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event Missed Clear #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event Missed Clear #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event Missed Clear #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event Missed Clear #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event Missed Clear #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event Missed Clear #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event Missed Clear #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event Missed Clear #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event Missed Clear #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event Missed Clear #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event Missed Clear #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed Clear #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed Clear #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed Clear #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed Clear #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed Clear #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed Clear #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed Clear #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed Clear #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMCRH</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Event Missed Clear Register (High Part):  CPU write of '1'  to the EMCR.En bit causes the EMR.En bit to be cleared. CPU  write of '0' has no effect.. All error bits must be cleared  before additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event Missed Clear #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event Missed Clear #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event Missed Clear #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event Missed Clear #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event Missed Clear #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event Missed Clear #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event Missed Clear #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event Missed Clear #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event Missed Clear #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event Missed Clear #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event Missed Clear #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event Missed Clear #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event Missed Clear #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event Missed Clear #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event Missed Clear #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event Missed Clear #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event Missed Clear #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event Missed Clear #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event Missed Clear #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event Missed Clear #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event Missed Clear #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event Missed Clear #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event Missed Clear #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event Missed Clear #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event Missed Clear #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event Missed Clear #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event Missed Clear #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event Missed Clear #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event Missed Clear #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event Missed Clear #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event Missed Clear  #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event Missed Clear #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEMR</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>QDMA Event Missed Register:  The QDMA Event Missed register  is set if 2 QDMA events are detected without the first event  being cleared or if a Null TR is serviced.. If any bit in  the QEMR register is set (and all errors (including  EMR/CCERR) were previously clear) then an error will be  signaled with TPCC error interrupt.</description>
          <fields>
            <field>
              <name>RES31</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEMCR</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>QDMA Event Missed Clear Register:  CPU write of '1' to the  QEMCR.En bit causes the QEMR.En bit to be cleared. CPU write  of '0' has no effect.. All error bits must be cleared before  additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>RES32</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed Clear #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed Clear #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed Clear #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed Clear #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed Clear #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed Clear #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed Clear #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed Clear #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCERR</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>CC Error Register</description>
          <fields>
            <field>
              <name>RES33</name>
              <description>[31:17] RESERVE FIELD</description>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TCERR</name>
              <description>[16:16] Transfer Completion Code Error:  TCCERR = 0 : Total number  of allowed TCCs outstanding has not been reached. TCCERR = 1  : Total number of allowed TCCs has been reached.  TCCERR can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors were previously clear) then an error will be  signaled with TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES34</name>
              <description>[15:8] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>QTHRXCD7</name>
              <description>[7:7] Queue Threshold Error for Q7:  QTHRXCD7 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD7 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD7 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>QTHRXCD6</name>
              <description>[6:6] Queue Threshold Error for Q6:  QTHRXCD6 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD6 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD6 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>QTHRXCD5</name>
              <description>[5:5] Queue Threshold Error for Q5:  QTHRXCD5 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD5 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD5 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>QTHRXCD4</name>
              <description>[4:4] Queue Threshold Error for Q4:  QTHRXCD4 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD4 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD4 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QTHRXCD3</name>
              <description>[3:3] Queue Threshold Error for Q3:  QTHRXCD3 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD3 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD3 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>QTHRXCD2</name>
              <description>[2:2] Queue Threshold Error for Q2:  QTHRXCD2 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD2 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD2 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QTHRXCD1</name>
              <description>[1:1] Queue Threshold Error for Q1:  QTHRXCD1 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD1 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD1 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>QTHRXCD0</name>
              <description>[0:0] Queue Threshold Error for Q0:  QTHRXCD0 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD0 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD0 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCERRCLR</name>
          <addressOffset>0x31C</addressOffset>
          <size>32</size>
          <description>CC Error Clear Register</description>
          <fields>
            <field>
              <name>RES35</name>
              <description>[31:17] RESERVE FIELD</description>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TCERR</name>
              <description>[16:16] Clear Error for CCERR.TCERR:  Write of '1' clears the value  of CCERR bit N. Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES36</name>
              <description>[15:8] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>QTHRXCD7</name>
              <description>[7:7] Clear error for CCERR.QTHRXCD7:  Write of '1' clears the  values of QSTAT7.WM QSTAT7.THRXCD CCERR.QTHRXCD7 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>QTHRXCD6</name>
              <description>[6:6] Clear error for CCERR.QTHRXCD6:  Write of '1' clears the  values of QSTAT6.WM QSTAT6.THRXCD CCERR.QTHRXCD6 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>QTHRXCD5</name>
              <description>[5:5] Clear error for CCERR.QTHRXCD5:  Write of '1' clears the  values of QSTAT5.WM QSTAT5.THRXCD CCERR.QTHRXCD5 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>QTHRXCD4</name>
              <description>[4:4] Clear error for CCERR.QTHRXCD4:  Write of '1' clears the  values of QSTAT4.WM QSTAT4.THRXCD CCERR.QTHRXCD4 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QTHRXCD3</name>
              <description>[3:3] Clear error for CCERR.QTHRXCD3:  Write of '1' clears the  values of QSTAT3.WM QSTAT3.THRXCD CCERR.QTHRXCD3 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>QTHRXCD2</name>
              <description>[2:2] Clear error for CCERR.QTHRXCD2:  Write of '1' clears the  values of QSTAT2.WM QSTAT2.THRXCD CCERR.QTHRXCD2 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QTHRXCD1</name>
              <description>[1:1] Clear error for CCERR.QTHRXCD1:  Write of '1' clears the  values of QSTAT1.WM QSTAT1.THRXCD CCERR.QTHRXCD1 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>QTHRXCD0</name>
              <description>[0:0] Clear error for CCERR.QTHRXCD0:  Write of '1' clears the  values of QSTAT0.WM QSTAT0.THRXCD CCERR.QTHRXCD0 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EEVAL</name>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <description>Error Eval Register</description>
          <fields>
            <field>
              <name>RES37</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Error Interrupt Set:  CPU write of '1' to the SET bit causes  the TPCC error interrupt to be pulsed regardless of state of  EMR/EMRH QEMR or CCERR. CPU write of '0' has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Error Interrupt Evaluate:  CPU write of '1' to the EVAL bit  causes the TPCC error interrupt to be pulsed if any errors  have not been cleared in the EMR/EMRH QEMR or CCERR  registers. CPU write of '0' has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DRAEM</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>DMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any DMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any DMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region M  interrupt.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] DMA Region Access enable for Region M bit #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] DMA Region Access enable for Region M bit #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] DMA Region Access enable for Region M bit #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] DMA Region Access enable for Region M bit #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] DMA Region Access enable for Region M bit #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] DMA Region Access enable for Region M bit #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] DMA Region Access enable for Region M bit #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] DMA Region Access enable for Region M bit #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] DMA Region Access enable for Region M bit #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] DMA Region Access enable for Region M bit #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] DMA Region Access enable for Region M bit #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] DMA Region Access enable for Region M bit #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] DMA Region Access enable for Region M bit #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] DMA Region Access enable for Region M bit #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] DMA Region Access enable for Region M bit #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] DMA Region Access enable for Region M bit #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] DMA Region Access enable for Region M bit #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] DMA Region Access enable for Region M bit #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] DMA Region Access enable for Region M bit #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] DMA Region Access enable for Region M bit #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] DMA Region Access enable for Region M bit #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] DMA Region Access enable for Region M bit #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] DMA Region Access enable for Region M bit #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] DMA Region Access enable for Region M bit #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] DMA Region Access enable for Region M bit #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] DMA Region Access enable for Region M bit #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] DMA Region Access enable for Region M bit #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] DMA Region Access enable for Region M bit #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] DMA Region Access enable for Region M bit #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] DMA Region Access enable for Region M bit #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] DMA Region Access enable for Region M bit #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] DMA Region Access enable for Region M bit #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DRAEHM</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>DMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any DMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any DMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region M  interrupt.  En = 0 : Accesses via Region M address space to  Bit N in any DMA Channel Register are not allowed. Reads  will return 'b0 on Bit N and writes will not modify the  state of bit N. Enabled interrupt bits for bit N do not  contribute to the generation of the TPCC region M interrupt.  En = 1 : Accesses via Region M address space to Bit N in any  DMA Channel Register are allowed. Reads will return the  value from Bit N and writes will modify the state of bit N.  Enabled interrupt bits for bit N do contribute to the  generation of the TPCC region M interrupt.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] DMA Region Access enable for Region M bit #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] DMA Region Access enable for Region M bit #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] DMA Region Access enable for Region M bit #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] DMA Region Access enable for Region M bit #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] DMA Region Access enable for Region M bit #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] DMA Region Access enable for Region M bit #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] DMA Region Access enable for Region M bit #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] DMA Region Access enable for Region M bit #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] DMA Region Access enable for Region M bit #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] DMA Region Access enable for Region M bit #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] DMA Region Access enable for Region M bit #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] DMA Region Access enable for Region M bit #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] DMA Region Access enable for Region M bit #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] DMA Region Access enable for Region M bit #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] DMA Region Access enable for Region M bit #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] DMA Region Access enable for Region M bit #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] DMA Region Access enable for Region M bit #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] DMA Region Access enable for Region M bit #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] DMA Region Access enable for Region M bit #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] DMA Region Access enable for Region M bit #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] DMA Region Access enable for Region M bit #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] DMA Region Access enable for Region M bit #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] DMA Region Access enable for Region M bit #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] DMA Region Access enable for Region M bit #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] DMA Region Access enable for Region M bit #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] DMA Region Access enable for Region M bit #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] DMA Region Access enable for Region M bit #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] DMA Region Access enable for Region M bit #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] DMA Region Access enable for Region M bit #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] DMA Region Access enable for Region M bit #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] DMA Region Access enable for Region M bit #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] DMA Region Access enable for Region M bit #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QRAEN</name>
          <addressOffset>0x380</addressOffset>
          <size>32</size>
          <description>QDMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any QDMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any QDMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region n  interrupt.</description>
          <fields>
            <field>
              <name>RES38</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] QDMA Region Access enable for Region M bit #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] QDMA Region Access enable for Region M bit #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] QDMA Region Access enable for Region M bit #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] QDMA Region Access enable for Region M bit #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] QDMA Region Access enable for Region M bit #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] QDMA Region Access enable for Region M bit #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] QDMA Region Access enable for Region M bit #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] QDMA Region Access enable for Region M bit #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE0</name>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 0</description>
          <fields>
            <field>
              <name>RES39</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE1</name>
          <addressOffset>0x404</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 1</description>
          <fields>
            <field>
              <name>RES40</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE2</name>
          <addressOffset>0x408</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 2</description>
          <fields>
            <field>
              <name>RES41</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE3</name>
          <addressOffset>0x40C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 3</description>
          <fields>
            <field>
              <name>RES42</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE4</name>
          <addressOffset>0x410</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 4</description>
          <fields>
            <field>
              <name>RES43</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE5</name>
          <addressOffset>0x414</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 5</description>
          <fields>
            <field>
              <name>RES44</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE6</name>
          <addressOffset>0x418</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 6</description>
          <fields>
            <field>
              <name>RES45</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE7</name>
          <addressOffset>0x41C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 7</description>
          <fields>
            <field>
              <name>RES46</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE8</name>
          <addressOffset>0x420</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 8</description>
          <fields>
            <field>
              <name>RES47</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE9</name>
          <addressOffset>0x424</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 9</description>
          <fields>
            <field>
              <name>RES48</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE10</name>
          <addressOffset>0x428</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 0</description>
          <fields>
            <field>
              <name>RES49</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE11</name>
          <addressOffset>0x42C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 11</description>
          <fields>
            <field>
              <name>RES50</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE12</name>
          <addressOffset>0x430</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 12</description>
          <fields>
            <field>
              <name>RES51</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE13</name>
          <addressOffset>0x434</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 13</description>
          <fields>
            <field>
              <name>RES52</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE14</name>
          <addressOffset>0x438</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 14</description>
          <fields>
            <field>
              <name>RES53</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE15</name>
          <addressOffset>0x43C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 15</description>
          <fields>
            <field>
              <name>RES54</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSTATN</name>
          <addressOffset>0x600</addressOffset>
          <size>32</size>
          <description>QSTATn Register Set</description>
          <fields>
            <field>
              <name>RES55</name>
              <description>[31:25] RESERVE FIELD</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>THRXCD</name>
              <description>[24:24] Threshold Exceeded:  THRXCD = 0 : Threshold specified by  QWMTHR(A  B).Qn has not been exceeded. THRXCD = 1 : Threshold  specified by QWMTHR(A  B).Qn has been exceeded.  QSTATn.THRXCD is cleared via  CCERR.WMCLRn bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES56</name>
              <description>[23:21] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>WM</name>
              <description>[20:16] Watermark for Maximum Queue Usage:  Watermark tracks the  most entries that have been in QueueN since reset or since  the last time that the watermark (WM) was cleared. QSTATn.WM  is cleared via CCERR.WMCLRn bit.  Legal values = 0x0 (empty)  to 0x10 (full)</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES57</name>
              <description>[15:13] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>NUMVAL</name>
              <description>[12:8] Number of Valid Entries in QueueN:  Represents the total  number of entries residing in the Queue Manager FIFO at a  given instant. Always enabled. Legal values = 0x0 (empty) to  0x10 (full)</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES58</name>
              <description>[7:4] RESERVE FIELD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STRTPTR</name>
              <description>[3:0] Start Pointer:  Represents the offset to the head entry of  QueueN in units of entries. Always enabled. Legal values  = 0x0 (0th entry) to 0xF (15th entry)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QWMTHRA</name>
          <addressOffset>0x620</addressOffset>
          <size>32</size>
          <description>Queue Threshold A for Q[3:0]:  CCERR.QTHRXCDn and  QSTATn.THRXCD error bit is set when the number of Events in  QueueN at an instant in time (visible via QSTATn.NUMVAL)  equals or exceeds the value specified by QWMTHRA.Qn. Legal  values = 0x0 (ever used?) to 0x10 (ever full?) A value of  0x11 disables threshold errors.</description>
          <fields>
            <field>
              <name>RES59</name>
              <description>[31:13] RESERVE FIELD</description>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Q1</name>
              <description>[12:8] Queue Threshold for Q1 value</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES60</name>
              <description>[7:5] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>Q0</name>
              <description>[4:0] Queue Threshold for Q0 value</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCSTAT</name>
          <addressOffset>0x640</addressOffset>
          <size>32</size>
          <description>CC Status Register</description>
          <fields>
            <field>
              <name>RES61</name>
              <description>[31:24] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>QUEACTV7</name>
              <description>[23:23] Queue 7 Active QUEACTV7 = 0 : No Evts are queued in Q7.  QUEACTV7 = 1 : At least one TR is queued in Q7.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>QUEACTV6</name>
              <description>[22:22] Queue 6 Active QUEACTV6 = 0 : No Evts are queued in Q6.  QUEACTV6 = 1 : At least one TR is queued in Q6.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>QUEACTV5</name>
              <description>[21:21] Queue 5 Active QUEACTV5 = 0 : No Evts are queued in Q5.  QUEACTV5 = 1 : At least one TR is queued in Q5.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>QUEACTV4</name>
              <description>[20:20] Queue 4 Active QUEACTV4 = 0 : No Evts are queued in Q4.  QUEACTV4 = 1 : At least one TR is queued in Q4.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>QUEACTV3</name>
              <description>[19:19] Queue 3 Active QUEACTV3 = 0 : No Evts are queued in Q3.  QUEACTV3 = 1 : At least one TR is queued in Q3.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>QUEACTV2</name>
              <description>[18:18] Queue 2 Active QUEACTV2 = 0 : No Evts are queued in Q2.  QUEACTV2 = 1 : At least one TR is queued in Q2.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>QUEACTV1</name>
              <description>[17:17] Queue 1 Active QUEACTV1 = 0 : No Evts are queued in Q1.  QUEACTV1 = 1 : At least one TR is queued in Q1.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>QUEACTV0</name>
              <description>[16:16] Queue 0 Active QUEACTV0 = 0 : No Evts are queued in Q0.  QUEACTV0 = 1 : At least one TR is queued in Q0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES62</name>
              <description>[15:14] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>COMPACTV</name>
              <description>[13:8] Completion Request Active:  Counter that tracks the total  number of completion requests submitted to the TC. The  counter increments when a TR is submitted with TCINTEN or  TCCHEN set to '1'. The counter decrements for every valid  completion code received from any of the external TCs. The  CC will not service new TRs if COMPACTV count is already at  the limit.   COMPACTV = 0 : No completion requests  outstanding. COMPACTV = 1: Total of '1' completion request  outstanding. ... COMPACTV = 63 : Total of 63 completion  requests are outstanding. No additional TRs will be  submitted until count is less than 63.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES63</name>
              <description>[7:5] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ACTV</name>
              <description>[4:4] Channel Controller Active:  Channel Controller Active is a  logical-OR of each of the ACTV signals. The ACTV bit must  remain high through the life of a TR.  ACTV = 0 : Channel is  idle. ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES64</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TRACTV</name>
              <description>[2:2] Transfer Request Active: TRACTV = 0 : Transfer Request  processing/submission logic is inactive. TRACTV = 1 :  Transfer Request processing/submission logic is active.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QEVTACTV</name>
              <description>[1:1] QDMA Event Active: QEVTACTV = 0 : No enabled QDMA Events are  active within the CC. QEVTACTV = 1 : At least one enabled  DMA Event (ER &amp; EER ESR CER) is active within the CC.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVTACTV</name>
              <description>[0:0] DMA Event Active: EVTACTV = 0 : No enabled DMA Events are  active within the CC. EVTACTV = 1 : At least one enabled DMA  Event (ER &amp; EER ESR CER) is active within the CC.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETCTL</name>
          <addressOffset>0x700</addressOffset>
          <size>32</size>
          <description>Advanced Event Trigger Control</description>
          <fields>
            <field>
              <name>EN</name>
              <description>[31:31] AET Enable: EN = 0 : AET event generation is disabled. EN =  1 : AET event generation is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>RES65</name>
              <description>[30:14] RESERVE FIELD</description>
              <bitWidth>17</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ENDINT</name>
              <description>[13:8] AET End Interrupt: Dictates the completion interrupt number  that will force the tpcc_aet signal to be deasserted (low)</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES66</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TYPE</name>
              <description>[6:6] AET Event Type: TYPE = 0 : Event specified by STARTEVT  applies to DMA Events (set by ER ESR or CER) TYPE = 1 :  Event specified by STARTEVT applies to QDMA Events</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>STRTEVT</name>
              <description>[5:0] AET Start Event: Dictates the Event Number that will force  the tpcc_aet signal to be asserted (high)</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETSTAT</name>
          <addressOffset>0x704</addressOffset>
          <size>32</size>
          <description>Advanced Event Trigger Stat</description>
          <fields>
            <field>
              <name>RES67</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>STAT</name>
              <description>[0:0] AET Status: AETSTAT = 0 : tpcc_aet is currently low. AETSTAT  = 1 : tpcc_aet is currently high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETCMD</name>
          <addressOffset>0x708</addressOffset>
          <size>32</size>
          <description>AET Command</description>
          <fields>
            <field>
              <name>RES68</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR</name>
              <description>[0:0] AET Clear command: CPU write of '1' to the CLR bit causes  the tpcc_aet output signal and AETSTAT.STAT register to be  cleared. CPU write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ER</name>
          <addressOffset>0x1000</addressOffset>
          <size>32</size>
          <description>Event Register:  If ER.En bit is set and the EER.En bit is  also set then the corresponding DMA channel is prioritized  vs. other pending DMA events for submission to the TC. ER.En  bit is set when the input event #n transitions from inactive  (low) to active (high) regardless of the state of EER.En  bit. ER.En bit is cleared when the corresponding event is  prioritized and serviced. If the ER.En bit is already set  and a new inactive to active transition is detected on the  input event #n input AND the corresponding bit in the EER  register is set then the corresponding bit in the Event  Missed Register is set. Event N can be cleared via sw by  writing a '1' to the ECR pseudo-register.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERH</name>
          <addressOffset>0x1004</addressOffset>
          <size>32</size>
          <description>Event Register (High Part):  If ERH.En bit is set and the  EERH.En bit is also set then the corresponding DMA channel  is prioritized vs. other pending DMA events for submission  to the TC. ERH.En bit is set when the input event #n  transitions from inactive (low) to active (high) regardless  of the state of EERH.En bit. ER.En bit is cleared when the  corresponding event is prioritized and serviced. If the  ERH.En bit is already set and a new inactive to active  transition is detected on the input event #n input AND the  corresponding bit in the EERH register is set then the  corresponding bit in the Event Missed Register is set. Event  N can be cleared via sw by writing a '1' to the ECRH  pseudo-register.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECR</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>Event Clear Register:  CPU write of '1' to the ECR.En bit  causes the ER.En bit to be cleared. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECRH</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>Event Clear Register (High Part):  CPU write of '1' to the  ECRH.En bit causes the ERH.En bit to be cleared. CPU write  of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESR</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Event Set Register:  CPU write of '1' to the ESR.En bit  causes the ER.En bit to be set. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESRH</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Event Set Register (High Part)  CPU write of '1' to the  ESRH.En bit causes the ERH.En bit to be set. CPU write of  '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CER</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Chained Event Register:  If CER.En bit is set (regardless of  state of EER.En) then the corresponding DMA channel is  prioritized vs. other pending DMA events for submission to  the TC. CER.En bit is set when a chaining completion code is  returned from one of the 3PTCs via the completion interface  or is generated internally via Early Completion path. CER.En  bit is cleared when the corresponding event is prioritized  and serviced. If the CER.En bit is already set and the  corresponding chaining completion code is returned from the  TC then the corresponding bit in the Event Missed Register  is set. CER.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CERH</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Chained Event Register (High Part):  If CERH.En bit is set  (regardless of state of EERH.En) then the corresponding DMA  channel is prioritized vs. other pending DMA events for  submission to the TC. CERH.En bit is set when a chaining  completion code is returned from one of the 3PTCs via the  completion interface or is generated internally via Early  Completion path. CERH.En bit is cleared when the  corresponding event is prioritized and serviced. If the  CERH.En bit is already set and the corresponding chaining  completion code is returned from the TC then the  corresponding bit in the Event Missed Register is set.  CERH.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EER</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>Event Enable Register:  Enables DMA transfers for ER.En  pending events. ER.En is set based on externally asserted  events (via tpcc_eventN_pi). This register has no effect on  Chained Event Register (CER) or Event Set Register (ESR).  Note that if a bit is set in ER.En while EER.En is disabled  no action is taken. If EER.En is enabled at a later point  (and ER.En has not been cleared via SW) then the event will  be recognized as a valid 'TR Sync' EER.En is not directly  writeable. Events can be enabled via writes to EESR and can  be disabled via writes to EECR register.   EER.En = 0: ER.En  is not enabled to trigger DMA transfers.  EER.En = 1: ER.En  is enabled to trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EERH</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Event Enable Register (High Part):  Enables DMA transfers  for ERH.En pending events. ERH.En is set based on externally  asserted events (via tpcc_eventN_pi). This register has no  effect on Chained Event Register (CERH) or Event Set  Register (ESRH). Note that if a bit is set in ERH.En while  EERH.En is disabled no action is taken. If EERH.En is  enabled at a later point (and ERH.En has not been cleared  via SW) then the event will be recognized as a valid 'TR  Sync' EERH.En is not directly writeable. Events can be  enabled via writes to EESRH and can be disabled via writes  to EECRH register.   EERH.En = 0: ER.En is not enabled to  trigger DMA transfers.  EERH.En = 1: ER.En is enabled to  trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECR</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register:  CPU write of '1' to the  EECR.En bit causes the EER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECRH</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register (High Part):  CPU write of '1'  to the EECRH.En bit causes the EERH.En bit to be cleared.  CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESR</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register:  CPU write of '1' to the EESR.En  bit causes the EER.En bit to be set. CPU write of '0' has no  effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESRH</name>
          <addressOffset>0x1034</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register (High Part):  CPU write of '1' to  the EESRH.En bit causes the EERH.En bit to be set. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SER</name>
          <addressOffset>0x1038</addressOffset>
          <size>32</size>
          <description>Secondary Event Register:  The secondary event register is  used along with the Event Register (ER) to provide  information on the state of an Event.   En = 0 : Event is  not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SERH</name>
          <addressOffset>0x103C</addressOffset>
          <size>32</size>
          <description>Secondary Event Register (High Part):  The secondary event  register is used along with the Event Register (ERH) to  provide information on the state of an Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECR</name>
          <addressOffset>0x1040</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register:  The secondary event clear  register is used to clear the status of the SER registers.   CPU write of '1' to the SECR.En bit clears the SER register.  CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECRH</name>
          <addressOffset>0x1044</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register (High Part):  The secondary  event clear register is used to clear the status of the SERH  registers.  CPU write of '1' to the SECRH.En bit clears the  SERH register. CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IER</name>
          <addressOffset>0x1050</addressOffset>
          <size>32</size>
          <description>Int Enable Register:  IER.In is not directly writeable.  Interrupts can be enabled via writes to IESR and can be  disabled via writes to IECR register.  IER.In = 0: IPR.In is  NOT enabled for interrupts. IER.In = 1: IPR.In IS enabled  for interrupts.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IERH</name>
          <addressOffset>0x1054</addressOffset>
          <size>32</size>
          <description>Int Enable Register (High Part):  IERH.In is not directly  writeable. Interrupts can be enabled via writes to IESRH and  can be disabled via writes to IECRH register.  IERH.In = 0:  IPRH.In is NOT enabled for interrupts. IERH.In = 1: IPRH.In  IS enabled for interrupts.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECR</name>
          <addressOffset>0x1058</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register:  CPU write of '1' to the IECR.In  bit causes the IER.In bit to be cleared. CPU write of '0'  has no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECRH</name>
          <addressOffset>0x105C</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register (High Part):  CPU write of '1' to  the IECRH.In bit causes the IERH.In bit to be cleared. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESR</name>
          <addressOffset>0x1060</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register:  CPU write of '1' to the IESR.In  bit causes the IESR.In bit to be set. CPU write of '0' has  no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESRH</name>
          <addressOffset>0x1064</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register (High Part):  CPU write of '1' to  the IESRH.In bit causes the IESRH.In bit to be set. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPR</name>
          <addressOffset>0x1068</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register:  IPR.In bit is set when a  interrupt completion code with TCC of N is detected. IPR.In  bit is cleared via software by writing a '1' to ICR.In bit.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPRH</name>
          <addressOffset>0x106C</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register (High Part):  IPRH.In bit is set  when a interrupt completion code with TCC of N is detected.  IPRH.In bit is cleared via software by writing a '1' to  ICRH.In bit.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x1070</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register:  CPU write of '1' to the ICR.In  bit causes the IPR.In bit to be cleared. CPU write of '0'  has no effect.  All IPR.In bits must be cleared before  additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICRH</name>
          <addressOffset>0x1074</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register (High Part):  CPU write of '1' to  the ICRH.In bit causes the IPRH.In bit to be cleared. CPU  write of '0' has no effect.  All IPRH.In bits must be  cleared before additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IEVAL</name>
          <addressOffset>0x1078</addressOffset>
          <size>32</size>
          <description>Interrupt Eval Register</description>
          <fields>
            <field>
              <name>RES69</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Interrupt Set:  CPU write of '1' to the SETn bit causes the  tpcc_intN output signal to be pulsed egardless of state of  interrupts enable (IERn) and status (IPRn). CPU write of '0'  has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Interrupt Evaluate:  CPU write of '1' to the EVALn bit  causes the tpcc_intN output signal to be pulsed if any  enabled interrupts (IERn) are still pending (IPRn). CPU  write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QER</name>
          <addressOffset>0x1080</addressOffset>
          <size>32</size>
          <description>QDMA Event Register:  If QER.En bit is set then the  corresponding QDMA channel is prioritized vs. other qdma  events for submission to the TC. QER.En bit is set when a  vbus write byte matches the address defined in the QCHMAPn  register. QER.En bit is cleared when the corresponding event  is prioritized and serviced. QER.En is also cleared when  user writes a '1' to the QSECR.En bit. If the QER.En bit is  already set and a new QDMA event is detected due to user  write to QDMA trigger location and QEER register is set  then the corresponding bit in the QDMA Event Missed Register  is set.</description>
          <fields>
            <field>
              <name>RES70</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEER</name>
          <addressOffset>0x1084</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Register:  Enabled/disabled QDMA address  comparator for QDMA Channel N. QEER.En is not directly  writeable. QDMA channels can be enabled via writes to QEESR  and can be disabled via writes to QEECR register.  QEER.En =  1 The corresponding QDMA channel comparator is enabled and  Events will be recognized and latched in QER.En. QEER.En =  0 The corresponding QDMA channel comparator is disabled.  Events will not be recognized/latched in QER.En.</description>
          <fields>
            <field>
              <name>RES71</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEECR</name>
          <addressOffset>0x1088</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Clear Register:  CPU write of '1' to the  QEECR.En bit causes the QEER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES72</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEESR</name>
          <addressOffset>0x108C</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Set Register:  CPU write of '1' to the  QEESR.En bit causes the QEESR.En bit to be set. CPU write of  '0' has no effect..</description>
          <fields>
            <field>
              <name>RES73</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSER</name>
          <addressOffset>0x1090</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Register:  The QDMA secondary event  register is used along with the QDMA Event Register (QER) to  provide information on the state of a QDMA Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>RES74</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSECR</name>
          <addressOffset>0x1094</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Clear Register:  The secondary event  clear register is used to clear the status of the QSER and  QER register (note that this is slightly different than the  SER operation which does not clear the ER.En register).   CPU write of '1' to the QSECR.En bit clears the QSER.En and  QER.En register fields. CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES75</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ER_RN</name>
          <addressOffset>0x2000</addressOffset>
          <size>32</size>
          <description>Event Register:  If ER.En bit is set and the EER.En bit is  also set then the corresponding DMA channel is prioritized  vs. other pending DMA events for submission to the TC. ER.En  bit is set when the input event #n transitions from inactive  (low) to active (high) regardless of the state of EER.En  bit. ER.En bit is cleared when the corresponding event is  prioritized and serviced. If the ER.En bit is already set  and a new inactive to active transition is detected on the  input event #n input AND the corresponding bit in the EER  register is set then the corresponding bit in the Event  Missed Register is set. Event N can be cleared via sw by  writing a '1' to the ECR pseudo-register.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERH_RN</name>
          <addressOffset>0x2004</addressOffset>
          <size>32</size>
          <description>Event Register (High Part):  If ERH.En bit is set and the  EERH.En bit is also set then the corresponding DMA channel  is prioritized vs. other pending DMA events for submission  to the TC. ERH.En bit is set when the input event #n  transitions from inactive (low) to active (high) regardless  of the state of EERH.En bit. ER.En bit is cleared when the  corresponding event is prioritized and serviced. If the  ERH.En bit is already set and a new inactive to active  transition is detected on the input event #n input AND the  corresponding bit in the EERH register is set then the  corresponding bit in the Event Missed Register is set. Event  N can be cleared via sw by writing a '1' to the ECRH  pseudo-register.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECR_RN</name>
          <addressOffset>0x2008</addressOffset>
          <size>32</size>
          <description>Event Clear Register:  CPU write of '1' to the ECR.En bit  causes the ER.En bit to be cleared. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECRH_RN</name>
          <addressOffset>0x200C</addressOffset>
          <size>32</size>
          <description>Event Clear Register (High Part):  CPU write of '1' to the  ECRH.En bit causes the ERH.En bit to be cleared. CPU write  of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESR_RN</name>
          <addressOffset>0x2010</addressOffset>
          <size>32</size>
          <description>Event Set Register:  CPU write of '1' to the ESR.En bit  causes the ER.En bit to be set. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESRH_RN</name>
          <addressOffset>0x2014</addressOffset>
          <size>32</size>
          <description>Event Set Register (High Part)  CPU write of '1' to the  ESRH.En bit causes the ERH.En bit to be set. CPU write of  '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CER_RN</name>
          <addressOffset>0x2018</addressOffset>
          <size>32</size>
          <description>Chained Event Register:  If CER.En bit is set (regardless of  state of EER.En) then the corresponding DMA channel is  prioritized vs. other pending DMA events for submission to  the TC. CER.En bit is set when a chaining completion code is  returned from one of the 3PTCs via the completion interface  or is generated internally via Early Completion path. CER.En  bit is cleared when the corresponding event is prioritized  and serviced. If the CER.En bit is already set and the  corresponding chaining completion code is returned from the  TC then the corresponding bit in the Event Missed Register  is set. CER.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CERH_RN</name>
          <addressOffset>0x201C</addressOffset>
          <size>32</size>
          <description>Chained Event Register (High Part):  If CERH.En bit is set  (regardless of state of EERH.En) then the corresponding DMA  channel is prioritized vs. other pending DMA events for  submission to the TC. CERH.En bit is set when a chaining  completion code is returned from one of the 3PTCs via the  completion interface or is generated internally via Early  Completion path. CERH.En bit is cleared when the  corresponding event is prioritized and serviced. If the  CERH.En bit is already set and the corresponding chaining  completion code is returned from the TC then the  corresponding bit in the Event Missed Register is set.  CERH.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EER_RN</name>
          <addressOffset>0x2020</addressOffset>
          <size>32</size>
          <description>Event Enable Register:  Enables DMA transfers for ER.En  pending events. ER.En is set based on externally asserted  events (via tpcc_eventN_pi). This register has no effect on  Chained Event Register (CER) or Event Set Register (ESR).  Note that if a bit is set in ER.En while EER.En is disabled  no action is taken. If EER.En is enabled at a later point  (and ER.En has not been cleared via SW) then the event will  be recognized as a valid 'TR Sync' EER.En is not directly  writeable. Events can be enabled via writes to EESR and can  be disabled via writes to EECR register.   EER.En = 0: ER.En  is not enabled to trigger DMA transfers.  EER.En = 1: ER.En  is enabled to trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EERH_RN</name>
          <addressOffset>0x2024</addressOffset>
          <size>32</size>
          <description>Event Enable Register (High Part):  Enables DMA transfers  for ERH.En pending events. ERH.En is set based on externally  asserted events (via tpcc_eventN_pi). This register has no  effect on Chained Event Register (CERH) or Event Set  Register (ESRH). Note that if a bit is set in ERH.En while  EERH.En is disabled no action is taken. If EERH.En is  enabled at a later point (and ERH.En has not been cleared  via SW) then the event will be recognized as a valid 'TR  Sync' EERH.En is not directly writeable. Events can be  enabled via writes to EESRH and can be disabled via writes  to EECRH register.   EERH.En = 0: ER.En is not enabled to  trigger DMA transfers.  EERH.En = 1: ER.En is enabled to  trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECR_RN</name>
          <addressOffset>0x2028</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register:  CPU write of '1' to the  EECR.En bit causes the EER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECRH_RN</name>
          <addressOffset>0x202C</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register (High Part):  CPU write of '1'  to the EECRH.En bit causes the EERH.En bit to be cleared.  CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESR_RN</name>
          <addressOffset>0x2030</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register:  CPU write of '1' to the EESR.En  bit causes the EER.En bit to be set. CPU write of '0' has no  effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESRH_RN</name>
          <addressOffset>0x2034</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register (High Part):  CPU write of '1' to  the EESRH.En bit causes the EERH.En bit to be set. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SER_RN</name>
          <addressOffset>0x2038</addressOffset>
          <size>32</size>
          <description>Secondary Event Register:  The secondary event register is  used along with the Event Register (ER) to provide  information on the state of an Event.   En = 0 : Event is  not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SERH_RN</name>
          <addressOffset>0x203C</addressOffset>
          <size>32</size>
          <description>Secondary Event Register (High Part):  The secondary event  register is used along with the Event Register (ERH) to  provide information on the state of an Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECR_RN</name>
          <addressOffset>0x2040</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register:  The secondary event clear  register is used to clear the status of the SER registers.   CPU write of '1' to the SECR.En bit clears the SER register.  CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECRH_RN</name>
          <addressOffset>0x2044</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register (High Part):  The secondary  event clear register is used to clear the status of the SERH  registers.  CPU write of '1' to the SECRH.En bit clears the  SERH register. CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IER_RN</name>
          <addressOffset>0x2050</addressOffset>
          <size>32</size>
          <description>Int Enable Register:  IER.In is not directly writeable.  Interrupts can be enabled via writes to IESR and can be  disabled via writes to IECR register.  IER.In = 0: IPR.In is  NOT enabled for interrupts. IER.In = 1: IPR.In IS enabled  for interrupts.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IERH_RN</name>
          <addressOffset>0x2054</addressOffset>
          <size>32</size>
          <description>Int Enable Register (High Part):  IERH.In is not directly  writeable. Interrupts can be enabled via writes to IESRH and  can be disabled via writes to IECRH register.  IERH.In = 0:  IPRH.In is NOT enabled for interrupts. IERH.In = 1: IPRH.In  IS enabled for interrupts.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECR_RN</name>
          <addressOffset>0x2058</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register:  CPU write of '1' to the IECR.In  bit causes the IER.In bit to be cleared. CPU write of '0'  has no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECRH_RN</name>
          <addressOffset>0x205C</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register (High Part):  CPU write of '1' to  the IECRH.In bit causes the IERH.In bit to be cleared. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESR_RN</name>
          <addressOffset>0x2060</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register:  CPU write of '1' to the IESR.In  bit causes the IESR.In bit to be set. CPU write of '0' has  no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESRH_RN</name>
          <addressOffset>0x2064</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register (High Part):  CPU write of '1' to  the IESRH.In bit causes the IESRH.In bit to be set. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPR_RN</name>
          <addressOffset>0x2068</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register:  IPR.In bit is set when a  interrupt completion code with TCC of N is detected. IPR.In  bit is cleared via software by writing a '1' to ICR.In bit.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPRH_RN</name>
          <addressOffset>0x206C</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register (High Part):  IPRH.In bit is set  when a interrupt completion code with TCC of N is detected.  IPRH.In bit is cleared via software by writing a '1' to  ICRH.In bit.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICR_RN</name>
          <addressOffset>0x2070</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register:  CPU write of '1' to the ICR.In  bit causes the IPR.In bit to be cleared. CPU write of '0'  has no effect.  All IPR.In bits must be cleared before  additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICRH_RN</name>
          <addressOffset>0x2074</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register (High Part):  CPU write of '1' to  the ICRH.In bit causes the IPRH.In bit to be cleared. CPU  write of '0' has no effect.  All IPRH.In bits must be  cleared before additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IEVAL_RN</name>
          <addressOffset>0x2078</addressOffset>
          <size>32</size>
          <description>Interrupt Eval Register</description>
          <fields>
            <field>
              <name>RES76</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Interrupt Set:  CPU write of '1' to the SETn bit causes the  tpcc_intN output signal to be pulsed egardless of state of  interrupts enable (IERn) and status (IPRn). CPU write of '0'  has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Interrupt Evaluate:  CPU write of '1' to the EVALn bit  causes the tpcc_intN output signal to be pulsed if any  enabled interrupts (IERn) are still pending (IPRn). CPU  write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QER_RN</name>
          <addressOffset>0x2080</addressOffset>
          <size>32</size>
          <description>QDMA Event Register:  If QER.En bit is set then the  corresponding QDMA channel is prioritized vs. other qdma  events for submission to the TC. QER.En bit is set when a  vbus write byte matches the address defined in the QCHMAPn  register. QER.En bit is cleared when the corresponding event  is prioritized and serviced. QER.En is also cleared when  user writes a '1' to the QSECR.En bit. If the QER.En bit is  already set and a new QDMA event is detected due to user  write to QDMA trigger location and QEER register is set  then the corresponding bit in the QDMA Event Missed Register  is set.</description>
          <fields>
            <field>
              <name>RES77</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEER_RN</name>
          <addressOffset>0x2084</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Register:  Enabled/disabled QDMA address  comparator for QDMA Channel N. QEER.En is not directly  writeable. QDMA channels can be enabled via writes to QEESR  and can be disabled via writes to QEECR register.  QEER.En =  1 The corresponding QDMA channel comparator is enabled and  Events will be recognized and latched in QER.En. QEER.En =  0 The corresponding QDMA channel comparator is disabled.  Events will not be recognized/latched in QER.En.</description>
          <fields>
            <field>
              <name>RES78</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEECR_RN</name>
          <addressOffset>0x2088</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Clear Register:  CPU write of '1' to the  QEECR.En bit causes the QEER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES79</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEESR_RN</name>
          <addressOffset>0x208C</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Set Register:  CPU write of '1' to the  QEESR.En bit causes the QEESR.En bit to be set. CPU write of  '0' has no effect..</description>
          <fields>
            <field>
              <name>RES80</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSER_RN</name>
          <addressOffset>0x2090</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Register:  The QDMA secondary event  register is used along with the QDMA Event Register (QER) to  provide information on the state of a QDMA Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>RES81</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSECR_RN</name>
          <addressOffset>0x2094</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Clear Register:  The secondary event  clear register is used to clear the status of the QSER and  QER register (note that this is slightly different than the  SER operation which does not clear the ER.En register).   CPU write of '1' to the QSECR.En bit clears the QSER.En and  QER.En register fields. CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES82</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>OPT</name>
          <addressOffset>0x4000</addressOffset>
          <size>32</size>
          <description>Options Parameter</description>
          <fields>
            <field>
              <name>PRIV</name>
              <description>[31:31] Privilege level:  privilege level (supervisor vs. user) for  the host/cpu/dma that programmed this PaRAM Entry. Value is  set with the vbus priv value when any part of the PaRAM  Entry is written. Not writeable via vbus wdata bus. Is  readable via VBus rdata bus.  PRIV = 0 : User level  privilege PRIV = 1 : Supervisor level privilege</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>RES83</name>
              <description>[30:28] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>PRIVID</name>
              <description>[27:24] Privilege ID:  Privilege ID for the external host/cpu/dma  that programmed this PaRAM Entry. This value is set with the  vbus privid value when any part of the PaRAM Entry is  written. Not writeable via vbus wdata bus. Is readable via  VBus rdata bus.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>ITCCHEN</name>
              <description>[23:23] Intermediate transfer completion chaining enable:  0:  Intermediate transfer complete chaining is disabled. 1:  Intermediate transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>TCCHEN</name>
              <description>[22:22] Transfer complete chaining enable:  0: Transfer complete  chaining is disabled. 1: Transfer complete chaining is  enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>ITCINTEN</name>
              <description>[21:21] Intermediate transfer completion interrupt enable:  0:  Intermediate transfer complete interrupt is disabled. 1:  Intermediate transfer complete interrupt is enabled  (corresponding IER[TCC] bit must be set to 1 to generate  interrupt)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>TCINTEN</name>
              <description>[20:20] Transfer complete interrupt enable:  0: Transfer complete  interrupt is disabled. 1: Transfer complete interrupt is  enabled (corresponding IER[TCC] bit must be set to 1 to  generate interrupt)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>WIMODE</name>
              <description>[19:19] Backward compatibility mode:  0: Normal operation 1 : WI  Backwards Compatibility mode forces BCNT to be adjusted by  '1' upon TR submission (0 means 1 1 means 2 ... ) and  forces ACNT to be treated as a word-count (left shifted by 2  by hardware to create byte cnt for TR submission)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>RES84</name>
              <description>[18:18] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>TCC</name>
              <description>[17:12] Transfer Complete Code:  The 6-bit code is used to set the  relevant bit in CER (bit CER[TCC]) for chaining or in IER  (bit IER[TCC]) for interrupts.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TCCMODE</name>
              <description>[11:11] Transfer complete code mode:  Indicates the point at which a  transfer is considered completed. Applies to both chaining  and interrupt.  0: Normal Completion A transfer is  considered completed after the transfer parameters are  returned to the CC from the TC (which was returned from the  peripheral). 1: Early Completion A transfer is considered  completed after the CC submits a TR to the TC. CC generates  completion code internally .</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>FWID</name>
              <description>[10:8] FIFO width:  Applies if either SAM or DAM is set to FIFO  mode. Pass-thru to TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES85</name>
              <description>[7:4] RESERVE FIELD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STATIC</name>
              <description>[3:3] Static Entry:  0: Entry is updated as normal 1: Entry is  static Count and Address updates are not updated after TRP  is submitted. Linking is not performed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SYNCDIM</name>
              <description>[2:2] Transfer Synchronization Dimension:  0: A-Sync Each event  triggers the transfer of ACNT elements. 1: AB-Sync Each  event triggers the transfer of BCNT arrays of ACNT elements</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DAM</name>
              <description>[1:1] Destination Address Mode:  Destination Address Mode within  an array. Pass-thru to TC.  0: INCR Dst addressing within  an array increments. Dst is not a FIFO. 1: FIFO Dst  addressing within an array wraps around upon reaching FIFO  width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SAM</name>
              <description>[0:0] Source Address Mode:  Source Address Mode within an array.  Pass-thru to TC.  0: INCR Src addressing within an array  increments. Source is not a FIFO. 1: FIFO Src addressing  within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SRC</name>
          <addressOffset>0x4004</addressOffset>
          <size>32</size>
          <description>Source Address</description>
          <fields>
            <field>
              <name>SRC</name>
              <description>[31:0] Source Address:  The 32-bit source address parameters  specify the starting byte address of the source . If SAM is  set to FIFO mode then the user should program the Source  address to be aligned to the value specified by the OPT.FWID  field. No errors are recognized here but TC will assert  error if this is not true.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ABCNT</name>
          <addressOffset>0x4008</addressOffset>
          <size>32</size>
          <description>A and B byte count</description>
          <fields>
            <field>
              <name>BCNT</name>
              <description>[31:16] BCNT : Count for 2nd Dimension:  BCNT is a 16-bit unsigned  value that specifies the number of arrays of length ACNT.  For normal operation valid values for BCNT can be anywhere  between 1 and 65535. Therefore the maximum number of arrays  in a frame is 65535 (64K-1 arrays). BCNT=1 means 1 array in  the frame and BCNT=0 means 0 arrays in the frame.   In  normal mode a BCNT of '0' is considered as either a Null or  Dummy transfer. A Dummy or Null transfer will generate a  Completion code depending on the settings of the completion  bit fields of the OPT field.   If the OPT.WIMODE bit is set  then the programmed BCNT value will be incremented by '1'  before submission to TC. I.e. 0 means 1 1 means 2 2 means  3 ...</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ACNT</name>
              <description>[15:0] ACNT : number of bytes in 1st dimension:  ACNT represents  the number of bytes within the first dimension of a  transfer. ACNT is a 16-bit unsigned value with valid values  between 0 and 65535. Therefore the maximum number of bytes  in an array is 65535 bytes (64K-1 bytes). ACNT must be  greater than or equal to '1' for a TR to be submitted to TC.  An ACNT of '0' is considered as either a null or dummy  transfer. A Dummy or Null transfer will generate a  Completion code depending on the settings of the completion  bit fields of the OPT field.  If the OPT.WIMODE bit is set  then the ACNT field represents a word count. The CC must  internally multiply by 4 to translate the word count to a  byte count prior to submission to the TC. The 2 MSBs of the  16-bit ACNT are reserved and should always be written as  'b00 by the user. If user writes a value other than 0 it  will still be treated as 0 since the multiply-by-4 operation  (to translate between a word count and a byte count) will  drop the 2 msbits. For dummy and null transfer definition  the ACNT definition will disregard the 2 msbits. I.e. a  programmed ACNT value of 0x8000 in WI-mode will be treated  as 0 byte transfer resulting in null or dummy operation  dependent on the state of BCNT and CCNT.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DST</name>
          <addressOffset>0x400C</addressOffset>
          <size>32</size>
          <description>Destination Address</description>
          <fields>
            <field>
              <name>DST</name>
              <description>[31:0] Destination Address:  The 32-bit destination address  parameters specify the starting byte address of the  destination. If DAM is set to FIFO mode then the user should  program the Destination address to be aligned to the value  specified by the OPT.FWID field. No errors are recognized  here but TC will assert error if this is not true.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BIDX</name>
          <addressOffset>0x4010</addressOffset>
          <size>32</size>
          <description>Register description is not available</description>
          <fields>
            <field>
              <name>DBIDX</name>
              <description>[31:16] Destination 2nd Dimension Index:  DBIDX is a 16-bit signed  value (2's complement) used for destination address  modification in between each array in the 2nd dimension. It  is a signed value between -32768 and 32767. It provides a  byte address offset from the beginning of the destination  array to the beginning of the next destination array within  the current frame. It applies to both A-Sync and AB-Sync  transfers.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SBIDX</name>
              <description>[15:0] Source 2nd Dimension Index:  SBIDX is a 16-bit signed value  (2's complement) used for source address modification in  between each array in the 2nd dimension. It is a signed  value between -32768 and 32767. It provides a byte address  offset from the beginning of the source array to the  beginning of the next source array. It applies to both  A-sync and AB-sync transfers.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LNK</name>
          <addressOffset>0x4014</addressOffset>
          <size>32</size>
          <description>Link and Reload parameters</description>
          <fields>
            <field>
              <name>BCNTRLD</name>
              <description>[31:16] BCNT Reload:  BCNTRLD is a 16-bit unsigned value used to  reload the BCNT field once the last array in the 2nd  dimension is transferred. This field is only used for  A-Sync'ed transfers. In this case the CC decrements the  BCNT value by one on each TR submission. When BCNT  (conceptually) reaches zero then the CC decrements CCNT and  uses the BCNTRLD value to reinitialize the BCNT value. For  AB-synchronized transfers the CC submits the BCNT in the TR  and therefore the TC is responsible to keep track of BCNT  not thus BCNTRLD is a don't care field.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>LINK</name>
              <description>[15:0] Link Address:  The CC provides a mechanism to reload the  current PaRAM Entry upon its natural termination (i.e.  after count fields are decremented to '0') with a new PaRAM  Entry. This is called 'linking'. The 16-bit parameter LINK  specifies the byte address offset in the PaRAM from which  the CC loads/reloads the next PaRAM entry in the link. The  CC should disregard the value in the upper 2 bits of the  LINK field as well as the lower 5-bits of the LINK field.  The upper two bits are ignored such that the user can  program either the 'literal' byte address of the LINK  parameter or the 'PaRAM base-relative' address of the link  field. Therefore if the user uses the literal address with  a range from 0x4000 to 0x7FFF it will be treated as a  PaRAM-base-relative value of 0x0000 to 0x3FFF. The lower-5  bits are ignored and treated as 'b00000 thereby  guaranteeing that all Link pointers point to a 32-byte  aligned PaRAM entry. In the latter case (5-lsbs) behavior  is undefined for the user (i.e. don't have to test it). In  the former case (2 msbs) user should be able to take  advantage of this feature (i.e. do have to test it). If a  Link Update is requested to a PaRAM address that is beyond  the actual range of implemented PaRAM then the Link will be  treated as a Null Linkand all 0s plus 0xFFFF will be written  to the current entry location.   A LINK value of 0xFFFF is  referred to as a NULL link which should cause the CC to  write 0x0 to all entries of the current PaRAM Entry except  for the LINK field which is set to 0xFFFF. The  Priv/Privid/Secure state is overwritten to 0x0 when linking.  MSBs and LSBS should not be masked when comparing against  the 0xFFFF value. I.e. a value of 0x3FFE is a non-NULL  PaRAM link field.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CIDX</name>
          <addressOffset>0x4018</addressOffset>
          <size>32</size>
          <description>Register description is not available</description>
          <fields>
            <field>
              <name>DCIDX</name>
              <description>[31:16] Destination Frame Index:  DCIDX is a 16-bit signed value  (2's complement) used for destination address modification  for the 3rd dimension. It is a signed value between -32768  and 32767. It provides a byte address offset from the  beginning of the current array (pointed to by DST address)  to the beginning of the first destination array in the next  frame. It applies to both A-sync and AB-sync transfers. Note  that when DCIDX is applied the current array in an A-sync  transfer is the last array in the frame while the current  array in a ABsync transfer is the first array in the frame.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SCIDX</name>
              <description>[15:0] Source Frame Index:  SCIDX is a 16-bit signed value (2's  complement) used for source address modification for the 3rd  dimension. It is a signed value between -32768 and 32767. It  provides a byte address offset from the beginning of the  current array (pointed to by SRC address) to the beginning  of the first source array in the next frame. It applies to  both A-sync and AB-sync transfers. Note that when SCIDX is  applied the current array in an A-sync transfer is the last  array in the frame while the current array in a AB-sync  transfer is the first array in the frame.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCNT</name>
          <addressOffset>0x401C</addressOffset>
          <size>32</size>
          <description>C byte count</description>
          <fields>
            <field>
              <name>RES86</name>
              <description>[31:16] RESERVE FIELD</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CCNT</name>
              <description>[15:0] CCNT : Count for 3rd Dimension:  CCNT is a 16-bit unsigned  value that specifies the number of frames in a block. Valid  values for CCNT can be anywhere between 1 and 65535.  Therefore the maximum number of frames in a block is 65535  (64K-1 frames). CCNT of '1' means '1' frame in the block  and CCNT of '0' means '0' frames in the block. A CCNT value  of '0' is considered as either a null or dummy transfer. A  Dummy or Null transfer will generate a Completion code  depending on the settings of the completion bit fields of  the OPT field.   WIMODE has no affect on CCNT operation.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TPCC_A</name>
      <baseAddress>0x56000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>16416</size>
        <usage>registers</usage>
      </addressBlock>
      <description>TPCC</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Peripheral ID Register</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] PID Scheme:  Used to distinguish between old ID scheme and  current. Spare bit to encode future schemes EDMA uses 'new  scheme' indicated with value of 0x1.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>RES1</name>
              <description>[29:28] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] Function indicates a software compatible module family.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RTL</name>
              <description>[15:11] RTL Version</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MAJOR</name>
              <description>[10:8] Major Revision</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom revision field:  Not used on this version of EDMA.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MINOR</name>
              <description>[5:0] Minor Revision</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCCFG</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>CC Configuration Register</description>
          <fields>
            <field>
              <name>RES2</name>
              <description>[31:26] RESERVE FIELD</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>MPEXIST</name>
              <description>[25:25] Memory Protection Existence MPEXIST = 0 : No memory  protection. MPEXIST = 1 : Memory Protection logic included.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CHMAPEXIST</name>
              <description>[24:24] Channel Mapping Existence CHMAPEXIST = 0 : No Channel  mapping. CHMAPEXIST = 1 : Channel mapping logic included.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES3</name>
              <description>[23:22] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>NUMREGN</name>
              <description>[21:20] Number of MP and Shadow regions</description>
              <bitWidth>2</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES4</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>NUMTC</name>
              <description>[18:16] Number of Queues/Number of TCs</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES5</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>NUMPAENTRY</name>
              <description>[14:12] Number of PaRAM entries</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES6</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>NUMINTCH</name>
              <description>[10:8] Number of Interrupt Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES7</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>NUMQDMACH</name>
              <description>[6:4] Number of QDMA Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES8</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>NUMDMACH</name>
              <description>[2:0] Number of DMA Channels</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QCHMAPN</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>QDMA Channel N Mapping Register</description>
          <fields>
            <field>
              <name>RES10</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>PAENTRY</name>
              <description>[13:5] PaRAM Entry number for QDMA Channel N.</description>
              <bitWidth>9</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TRWORD</name>
              <description>[4:2] TRWORD points to the specific trigger word of the PaRAM  Entry defined by PAENTRY. A write to the trigger word  results in a QDMA Event being recognized.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DMAQNUMN</name>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <description>DMA Queue Number Register n Contains the Event queue number  to be used for the corresponding DMA Channel.</description>
          <fields>
            <field>
              <name>RES11</name>
              <description>[31:31] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[30:28] DMA Queue Number for event #7</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>RES12</name>
              <description>[27:27] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[26:24] DMA Queue Number for event #6</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES13</name>
              <description>[23:23] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[22:20] DMA Queue Number for event #5</description>
              <bitWidth>3</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES14</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[18:16] DMA Queue Number for event #4</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES15</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[14:12] DMA Queue Number for event #3</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES16</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[10:8] DMA Queue Number for event #2</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES17</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[6:4] DMA Queue Number for event #1</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES18</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[2:0] DMA Queue Number for event #0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QDMAQNUM</name>
          <addressOffset>0x260</addressOffset>
          <size>32</size>
          <description>QDMA Queue Number Register Contains the Event queue number  to be used for the corresponding QDMA Channel.</description>
          <fields>
            <field>
              <name>RES19</name>
              <description>[31:31] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[30:28] QDMA Queue Number for event #7</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>RES20</name>
              <description>[27:27] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[26:24] QDMA Queue Number for event #6</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES21</name>
              <description>[23:23] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[22:20] QDMA Queue Number for event #5</description>
              <bitWidth>3</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>RES22</name>
              <description>[19:19] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[18:16] QDMA Queue Number for event #4</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES23</name>
              <description>[15:15] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[14:12] QDMA Queue Number for event #3</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RES24</name>
              <description>[11:11] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[10:8] QDMA Queue Number for event #2</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES25</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[6:4] QDMA Queue Number for event #1</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES26</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[2:0] QDMA Queue Number for event #0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QUETCMAP</name>
          <addressOffset>0x280</addressOffset>
          <size>32</size>
          <description>Queue to TC Mapping</description>
          <fields>
            <field>
              <name>RES27</name>
              <description>[31:7] RESERVE FIELD</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TCNUMQ1</name>
              <description>[6:4] TC Number for Queue N: Defines the TC number that Event  Queue N TRs are written to.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES28</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TCNUMQ0</name>
              <description>[2:0] TC Number for Queue N: Defines the TC number that Event  Queue N TRs are written to.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QUEPRI</name>
          <addressOffset>0x284</addressOffset>
          <size>32</size>
          <description>Queue Priority</description>
          <fields>
            <field>
              <name>RES29</name>
              <description>[31:7] RESERVE FIELD</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>PRIQ1</name>
              <description>[6:4] Priority Level for Queue 1 Dictates the priority level used  for the OPTIONS field programmation for Qn TRs. Sets the  priority used for TC read and write commands.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES30</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>PRIQ0</name>
              <description>[2:0] Priority Level for Queue 0 Dictates the priority level used  for the OPTIONS field programmation for Qn TRs. Sets the  priority used for TC read and write commands.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMR</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>Event Missed Register:  The Event Missed register is set if  2 events are received without the first event being cleared  or if a Null TR is serviced. Chained events (CER) Set  Events (ESR) and normal events (ER) are treated  individually. If any bit in the EMR register is set (and all  errors (including QEMR/CCERR) were previously clear) then  an error will be signaled with TPCC error interrupt.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event Missed #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event Missed #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event Missed #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event Missed #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event Missed #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event Missed #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event Missed #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event Missed #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event Missed #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event Missed #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event Missed #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event Missed #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event Missed #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event Missed #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event Missed #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event Missed #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event Missed #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event Missed #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event Missed #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event Missed #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event Missed #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event Missed #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event Missed #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event Missed #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMRH</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>Event Missed Register (High Part):  The Event Missed  register is set if 2 events are received without the first  event being cleared or if a Null TR is serviced. Chained  events (CER) Set Events (ESR) and normal events (ER) are  treated individually. If any bit in the EMR register is set  (and all errors (including QEMR/CCERR) were previously  clear) then an error will be signaled with TPCC error  interrupt.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event Missed #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event Missed #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event Missed #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event Missed #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event Missed #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event Missed #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event Missed #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event Missed #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event Missed #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event Missed #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event Missed #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event Missed #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event Missed #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event Missed #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event Missed #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event Missed #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event Missed #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event Missed #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event Missed #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event Missed #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event Missed #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event Missed #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event Missed #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event Missed #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event Missed #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event Missed #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event Missed #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event Missed #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event Missed #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event Missed #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event Missed #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event Missed #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMCR</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>Event Missed Clear Register:  CPU write of '1' to the  EMCR.En bit causes the EMR.En bit to be cleared. CPU write  of '0' has no effect.. All error bits must be cleared before  additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event Missed Clear #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event Missed Clear #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event Missed Clear #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event Missed Clear #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event Missed Clear #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event Missed Clear #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event Missed Clear #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event Missed Clear #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event Missed Clear #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event Missed Clear #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event Missed Clear #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event Missed Clear #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event Missed Clear #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event Missed Clear #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event Missed Clear #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event Missed Clear #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event Missed Clear #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event Missed Clear #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event Missed Clear #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event Missed Clear #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event Missed Clear #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event Missed Clear #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event Missed Clear #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event Missed Clear #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed Clear #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed Clear #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed Clear #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed Clear #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed Clear #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed Clear #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed Clear #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed Clear #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EMCRH</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>Event Missed Clear Register (High Part):  CPU write of '1'  to the EMCR.En bit causes the EMR.En bit to be cleared. CPU  write of '0' has no effect.. All error bits must be cleared  before additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event Missed Clear #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event Missed Clear #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event Missed Clear #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event Missed Clear #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event Missed Clear #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event Missed Clear #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event Missed Clear #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event Missed Clear #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event Missed Clear #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event Missed Clear #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event Missed Clear #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event Missed Clear #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event Missed Clear #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event Missed Clear #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event Missed Clear #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event Missed Clear #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event Missed Clear #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event Missed Clear #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event Missed Clear #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event Missed Clear #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event Missed Clear #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event Missed Clear #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event Missed Clear #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event Missed Clear #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event Missed Clear #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event Missed Clear #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event Missed Clear #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event Missed Clear #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event Missed Clear #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event Missed Clear #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event Missed Clear  #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event Missed Clear #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEMR</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>QDMA Event Missed Register:  The QDMA Event Missed register  is set if 2 QDMA events are detected without the first event  being cleared or if a Null TR is serviced.. If any bit in  the QEMR register is set (and all errors (including  EMR/CCERR) were previously clear) then an error will be  signaled with TPCC error interrupt.</description>
          <fields>
            <field>
              <name>RES31</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEMCR</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>QDMA Event Missed Clear Register:  CPU write of '1' to the  QEMCR.En bit causes the QEMR.En bit to be cleared. CPU write  of '0' has no effect.. All error bits must be cleared before  additional error interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>RES32</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event Missed Clear #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event Missed Clear #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event Missed Clear #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event Missed Clear #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event Missed Clear #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event Missed Clear #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event Missed Clear #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event Missed Clear #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCERR</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>CC Error Register</description>
          <fields>
            <field>
              <name>RES33</name>
              <description>[31:17] RESERVE FIELD</description>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TCERR</name>
              <description>[16:16] Transfer Completion Code Error:  TCCERR = 0 : Total number  of allowed TCCs outstanding has not been reached. TCCERR = 1  : Total number of allowed TCCs has been reached.  TCCERR can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors were previously clear) then an error will be  signaled with TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES34</name>
              <description>[15:8] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>QTHRXCD7</name>
              <description>[7:7] Queue Threshold Error for Q7:  QTHRXCD7 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD7 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD7 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>QTHRXCD6</name>
              <description>[6:6] Queue Threshold Error for Q6:  QTHRXCD6 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD6 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD6 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>QTHRXCD5</name>
              <description>[5:5] Queue Threshold Error for Q5:  QTHRXCD5 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD5 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD5 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>QTHRXCD4</name>
              <description>[4:4] Queue Threshold Error for Q4:  QTHRXCD4 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD4 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD4 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QTHRXCD3</name>
              <description>[3:3] Queue Threshold Error for Q3:  QTHRXCD3 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD3 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD3 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>QTHRXCD2</name>
              <description>[2:2] Queue Threshold Error for Q2:  QTHRXCD2 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD2 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD2 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QTHRXCD1</name>
              <description>[1:1] Queue Threshold Error for Q1:  QTHRXCD1 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD1 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD1 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>QTHRXCD0</name>
              <description>[0:0] Queue Threshold Error for Q0:  QTHRXCD0 = 0 :  Watermark/threshold has not been exceeded. QTHRXCD0 = 1 :  Watermark/threshold has been exceeded.  CCERR.QTHRXCD0 can  be cleared by writing a '1' to corresponding bit in CCERRCLR  register. If any bit in the CCERR register is set (and all  errors (including EMR/QEMR) were previously clear) then an  error will be signaled with the TPCC error interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCERRCLR</name>
          <addressOffset>0x31C</addressOffset>
          <size>32</size>
          <description>CC Error Clear Register</description>
          <fields>
            <field>
              <name>RES35</name>
              <description>[31:17] RESERVE FIELD</description>
              <bitWidth>15</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TCERR</name>
              <description>[16:16] Clear Error for CCERR.TCERR:  Write of '1' clears the value  of CCERR bit N. Writes of '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES36</name>
              <description>[15:8] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>QTHRXCD7</name>
              <description>[7:7] Clear error for CCERR.QTHRXCD7:  Write of '1' clears the  values of QSTAT7.WM QSTAT7.THRXCD CCERR.QTHRXCD7 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>QTHRXCD6</name>
              <description>[6:6] Clear error for CCERR.QTHRXCD6:  Write of '1' clears the  values of QSTAT6.WM QSTAT6.THRXCD CCERR.QTHRXCD6 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>QTHRXCD5</name>
              <description>[5:5] Clear error for CCERR.QTHRXCD5:  Write of '1' clears the  values of QSTAT5.WM QSTAT5.THRXCD CCERR.QTHRXCD5 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>QTHRXCD4</name>
              <description>[4:4] Clear error for CCERR.QTHRXCD4:  Write of '1' clears the  values of QSTAT4.WM QSTAT4.THRXCD CCERR.QTHRXCD4 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>QTHRXCD3</name>
              <description>[3:3] Clear error for CCERR.QTHRXCD3:  Write of '1' clears the  values of QSTAT3.WM QSTAT3.THRXCD CCERR.QTHRXCD3 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>QTHRXCD2</name>
              <description>[2:2] Clear error for CCERR.QTHRXCD2:  Write of '1' clears the  values of QSTAT2.WM QSTAT2.THRXCD CCERR.QTHRXCD2 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QTHRXCD1</name>
              <description>[1:1] Clear error for CCERR.QTHRXCD1:  Write of '1' clears the  values of QSTAT1.WM QSTAT1.THRXCD CCERR.QTHRXCD1 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>QTHRXCD0</name>
              <description>[0:0] Clear error for CCERR.QTHRXCD0:  Write of '1' clears the  values of QSTAT0.WM QSTAT0.THRXCD CCERR.QTHRXCD0 Writes of  '0' have no affect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EEVAL</name>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <description>Error Eval Register</description>
          <fields>
            <field>
              <name>RES37</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Error Interrupt Set:  CPU write of '1' to the SET bit causes  the TPCC error interrupt to be pulsed regardless of state of  EMR/EMRH QEMR or CCERR. CPU write of '0' has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Error Interrupt Evaluate:  CPU write of '1' to the EVAL bit  causes the TPCC error interrupt to be pulsed if any errors  have not been cleared in the EMR/EMRH QEMR or CCERR  registers. CPU write of '0' has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DRAEM</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>DMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any DMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any DMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region M  interrupt.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] DMA Region Access enable for Region M bit #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] DMA Region Access enable for Region M bit #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] DMA Region Access enable for Region M bit #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] DMA Region Access enable for Region M bit #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] DMA Region Access enable for Region M bit #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] DMA Region Access enable for Region M bit #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] DMA Region Access enable for Region M bit #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] DMA Region Access enable for Region M bit #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] DMA Region Access enable for Region M bit #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] DMA Region Access enable for Region M bit #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] DMA Region Access enable for Region M bit #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] DMA Region Access enable for Region M bit #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] DMA Region Access enable for Region M bit #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] DMA Region Access enable for Region M bit #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] DMA Region Access enable for Region M bit #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] DMA Region Access enable for Region M bit #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] DMA Region Access enable for Region M bit #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] DMA Region Access enable for Region M bit #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] DMA Region Access enable for Region M bit #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] DMA Region Access enable for Region M bit #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] DMA Region Access enable for Region M bit #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] DMA Region Access enable for Region M bit #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] DMA Region Access enable for Region M bit #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] DMA Region Access enable for Region M bit #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] DMA Region Access enable for Region M bit #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] DMA Region Access enable for Region M bit #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] DMA Region Access enable for Region M bit #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] DMA Region Access enable for Region M bit #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] DMA Region Access enable for Region M bit #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] DMA Region Access enable for Region M bit #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] DMA Region Access enable for Region M bit #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] DMA Region Access enable for Region M bit #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DRAEHM</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>DMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any DMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any DMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region M  interrupt.  En = 0 : Accesses via Region M address space to  Bit N in any DMA Channel Register are not allowed. Reads  will return 'b0 on Bit N and writes will not modify the  state of bit N. Enabled interrupt bits for bit N do not  contribute to the generation of the TPCC region M interrupt.  En = 1 : Accesses via Region M address space to Bit N in any  DMA Channel Register are allowed. Reads will return the  value from Bit N and writes will modify the state of bit N.  Enabled interrupt bits for bit N do contribute to the  generation of the TPCC region M interrupt.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] DMA Region Access enable for Region M bit #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] DMA Region Access enable for Region M bit #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] DMA Region Access enable for Region M bit #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] DMA Region Access enable for Region M bit #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] DMA Region Access enable for Region M bit #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] DMA Region Access enable for Region M bit #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] DMA Region Access enable for Region M bit #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] DMA Region Access enable for Region M bit #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] DMA Region Access enable for Region M bit #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] DMA Region Access enable for Region M bit #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] DMA Region Access enable for Region M bit #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] DMA Region Access enable for Region M bit #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] DMA Region Access enable for Region M bit #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] DMA Region Access enable for Region M bit #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] DMA Region Access enable for Region M bit #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] DMA Region Access enable for Region M bit #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] DMA Region Access enable for Region M bit #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] DMA Region Access enable for Region M bit #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] DMA Region Access enable for Region M bit #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] DMA Region Access enable for Region M bit #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] DMA Region Access enable for Region M bit #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] DMA Region Access enable for Region M bit #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] DMA Region Access enable for Region M bit #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] DMA Region Access enable for Region M bit #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] DMA Region Access enable for Region M bit #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] DMA Region Access enable for Region M bit #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] DMA Region Access enable for Region M bit #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] DMA Region Access enable for Region M bit #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] DMA Region Access enable for Region M bit #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] DMA Region Access enable for Region M bit #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] DMA Region Access enable for Region M bit #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] DMA Region Access enable for Region M bit #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QRAEN</name>
          <addressOffset>0x380</addressOffset>
          <size>32</size>
          <description>QDMA Region Access enable for bit N in Region M:  En = 0 :  Accesses via Region M address space to Bit N in any QDMA  Channel Register are not allowed. Reads will return 'b0 on  Bit N and writes will not modify the state of bit N. Enabled  interrupt bits for bit N do not contribute to the generation  of the TPCC region M interrupt. En = 1 : Accesses via Region  M address space to Bit N in any QDMA Channel Register are  allowed. Reads will return the value from Bit N and writes  will modify the state of bit N. Enabled interrupt bits for  bit N do contribute to the generation of the TPCC region n  interrupt.</description>
          <fields>
            <field>
              <name>RES38</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] QDMA Region Access enable for Region M bit #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] QDMA Region Access enable for Region M bit #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] QDMA Region Access enable for Region M bit #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] QDMA Region Access enable for Region M bit #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] QDMA Region Access enable for Region M bit #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] QDMA Region Access enable for Region M bit #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] QDMA Region Access enable for Region M bit #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] QDMA Region Access enable for Region M bit #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE0</name>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 0</description>
          <fields>
            <field>
              <name>RES39</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE1</name>
          <addressOffset>0x404</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 1</description>
          <fields>
            <field>
              <name>RES40</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE2</name>
          <addressOffset>0x408</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 2</description>
          <fields>
            <field>
              <name>RES41</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE3</name>
          <addressOffset>0x40C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 3</description>
          <fields>
            <field>
              <name>RES42</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE4</name>
          <addressOffset>0x410</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 4</description>
          <fields>
            <field>
              <name>RES43</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE5</name>
          <addressOffset>0x414</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 5</description>
          <fields>
            <field>
              <name>RES44</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE6</name>
          <addressOffset>0x418</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 6</description>
          <fields>
            <field>
              <name>RES45</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE7</name>
          <addressOffset>0x41C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 7</description>
          <fields>
            <field>
              <name>RES46</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE8</name>
          <addressOffset>0x420</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 8</description>
          <fields>
            <field>
              <name>RES47</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE9</name>
          <addressOffset>0x424</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 9</description>
          <fields>
            <field>
              <name>RES48</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE10</name>
          <addressOffset>0x428</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 0</description>
          <fields>
            <field>
              <name>RES49</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE11</name>
          <addressOffset>0x42C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 11</description>
          <fields>
            <field>
              <name>RES50</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE12</name>
          <addressOffset>0x430</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 12</description>
          <fields>
            <field>
              <name>RES51</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE13</name>
          <addressOffset>0x434</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 13</description>
          <fields>
            <field>
              <name>RES52</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE14</name>
          <addressOffset>0x438</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 14</description>
          <fields>
            <field>
              <name>RES53</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QNE15</name>
          <addressOffset>0x43C</addressOffset>
          <size>32</size>
          <description>Event Queue Entry Diagram for Queue n - Entry 15</description>
          <fields>
            <field>
              <name>RES54</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ETYPE</name>
              <description>[7:6] Event Type: Specifies the specific Event Type for the given  entry in the Event Queue.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ENUM</name>
              <description>[5:0] Event Number: Specifies the specific Event Number for the  given entry in the Event Queue. For DMA Channel events  (ER/ESR/CER) ENUM will range between 0 and NUM_DMACH (up to  63). For QDMA Channel events (QER) ENUM will range between  0 and NUM_QDMACH (up to 7).</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSTATN</name>
          <addressOffset>0x600</addressOffset>
          <size>32</size>
          <description>QSTATn Register Set</description>
          <fields>
            <field>
              <name>RES55</name>
              <description>[31:25] RESERVE FIELD</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>THRXCD</name>
              <description>[24:24] Threshold Exceeded:  THRXCD = 0 : Threshold specified by  QWMTHR(A  B).Qn has not been exceeded. THRXCD = 1 : Threshold  specified by QWMTHR(A  B).Qn has been exceeded.  QSTATn.THRXCD is cleared via  CCERR.WMCLRn bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RES56</name>
              <description>[23:21] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>WM</name>
              <description>[20:16] Watermark for Maximum Queue Usage:  Watermark tracks the  most entries that have been in QueueN since reset or since  the last time that the watermark (WM) was cleared. QSTATn.WM  is cleared via CCERR.WMCLRn bit.  Legal values = 0x0 (empty)  to 0x10 (full)</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES57</name>
              <description>[15:13] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>NUMVAL</name>
              <description>[12:8] Number of Valid Entries in QueueN:  Represents the total  number of entries residing in the Queue Manager FIFO at a  given instant. Always enabled. Legal values = 0x0 (empty) to  0x10 (full)</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES58</name>
              <description>[7:4] RESERVE FIELD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STRTPTR</name>
              <description>[3:0] Start Pointer:  Represents the offset to the head entry of  QueueN in units of entries. Always enabled. Legal values  = 0x0 (0th entry) to 0xF (15th entry)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QWMTHRA</name>
          <addressOffset>0x620</addressOffset>
          <size>32</size>
          <description>Queue Threshold A for Q[3:0]:  CCERR.QTHRXCDn and  QSTATn.THRXCD error bit is set when the number of Events in  QueueN at an instant in time (visible via QSTATn.NUMVAL)  equals or exceeds the value specified by QWMTHRA.Qn. Legal  values = 0x0 (ever used?) to 0x10 (ever full?) A value of  0x11 disables threshold errors.</description>
          <fields>
            <field>
              <name>RES59</name>
              <description>[31:13] RESERVE FIELD</description>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>Q1</name>
              <description>[12:8] Queue Threshold for Q1 value</description>
              <bitWidth>5</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES60</name>
              <description>[7:5] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>Q0</name>
              <description>[4:0] Queue Threshold for Q0 value</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCSTAT</name>
          <addressOffset>0x640</addressOffset>
          <size>32</size>
          <description>CC Status Register</description>
          <fields>
            <field>
              <name>RES61</name>
              <description>[31:24] RESERVE FIELD</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>QUEACTV7</name>
              <description>[23:23] Queue 7 Active QUEACTV7 = 0 : No Evts are queued in Q7.  QUEACTV7 = 1 : At least one TR is queued in Q7.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>QUEACTV6</name>
              <description>[22:22] Queue 6 Active QUEACTV6 = 0 : No Evts are queued in Q6.  QUEACTV6 = 1 : At least one TR is queued in Q6.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>QUEACTV5</name>
              <description>[21:21] Queue 5 Active QUEACTV5 = 0 : No Evts are queued in Q5.  QUEACTV5 = 1 : At least one TR is queued in Q5.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>QUEACTV4</name>
              <description>[20:20] Queue 4 Active QUEACTV4 = 0 : No Evts are queued in Q4.  QUEACTV4 = 1 : At least one TR is queued in Q4.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>QUEACTV3</name>
              <description>[19:19] Queue 3 Active QUEACTV3 = 0 : No Evts are queued in Q3.  QUEACTV3 = 1 : At least one TR is queued in Q3.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>QUEACTV2</name>
              <description>[18:18] Queue 2 Active QUEACTV2 = 0 : No Evts are queued in Q2.  QUEACTV2 = 1 : At least one TR is queued in Q2.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>QUEACTV1</name>
              <description>[17:17] Queue 1 Active QUEACTV1 = 0 : No Evts are queued in Q1.  QUEACTV1 = 1 : At least one TR is queued in Q1.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>QUEACTV0</name>
              <description>[16:16] Queue 0 Active QUEACTV0 = 0 : No Evts are queued in Q0.  QUEACTV0 = 1 : At least one TR is queued in Q0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RES62</name>
              <description>[15:14] RESERVE FIELD</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>COMPACTV</name>
              <description>[13:8] Completion Request Active:  Counter that tracks the total  number of completion requests submitted to the TC. The  counter increments when a TR is submitted with TCINTEN or  TCCHEN set to '1'. The counter decrements for every valid  completion code received from any of the external TCs. The  CC will not service new TRs if COMPACTV count is already at  the limit.   COMPACTV = 0 : No completion requests  outstanding. COMPACTV = 1: Total of '1' completion request  outstanding. ... COMPACTV = 63 : Total of 63 completion  requests are outstanding. No additional TRs will be  submitted until count is less than 63.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES63</name>
              <description>[7:5] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ACTV</name>
              <description>[4:4] Channel Controller Active:  Channel Controller Active is a  logical-OR of each of the ACTV signals. The ACTV bit must  remain high through the life of a TR.  ACTV = 0 : Channel is  idle. ACTV = 1 : Channel is busy.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RES64</name>
              <description>[3:3] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TRACTV</name>
              <description>[2:2] Transfer Request Active: TRACTV = 0 : Transfer Request  processing/submission logic is inactive. TRACTV = 1 :  Transfer Request processing/submission logic is active.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>QEVTACTV</name>
              <description>[1:1] QDMA Event Active: QEVTACTV = 0 : No enabled QDMA Events are  active within the CC. QEVTACTV = 1 : At least one enabled  DMA Event (ER &amp; EER ESR CER) is active within the CC.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVTACTV</name>
              <description>[0:0] DMA Event Active: EVTACTV = 0 : No enabled DMA Events are  active within the CC. EVTACTV = 1 : At least one enabled DMA  Event (ER &amp; EER ESR CER) is active within the CC.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETCTL</name>
          <addressOffset>0x700</addressOffset>
          <size>32</size>
          <description>Advanced Event Trigger Control</description>
          <fields>
            <field>
              <name>EN</name>
              <description>[31:31] AET Enable: EN = 0 : AET event generation is disabled. EN =  1 : AET event generation is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>RES65</name>
              <description>[30:14] RESERVE FIELD</description>
              <bitWidth>17</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ENDINT</name>
              <description>[13:8] AET End Interrupt: Dictates the completion interrupt number  that will force the tpcc_aet signal to be deasserted (low)</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES66</name>
              <description>[7:7] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TYPE</name>
              <description>[6:6] AET Event Type: TYPE = 0 : Event specified by STARTEVT  applies to DMA Events (set by ER ESR or CER) TYPE = 1 :  Event specified by STARTEVT applies to QDMA Events</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>STRTEVT</name>
              <description>[5:0] AET Start Event: Dictates the Event Number that will force  the tpcc_aet signal to be asserted (high)</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETSTAT</name>
          <addressOffset>0x704</addressOffset>
          <size>32</size>
          <description>Advanced Event Trigger Stat</description>
          <fields>
            <field>
              <name>RES67</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>STAT</name>
              <description>[0:0] AET Status: AETSTAT = 0 : tpcc_aet is currently low. AETSTAT  = 1 : tpcc_aet is currently high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AETCMD</name>
          <addressOffset>0x708</addressOffset>
          <size>32</size>
          <description>AET Command</description>
          <fields>
            <field>
              <name>RES68</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR</name>
              <description>[0:0] AET Clear command: CPU write of '1' to the CLR bit causes  the tpcc_aet output signal and AETSTAT.STAT register to be  cleared. CPU write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ER</name>
          <addressOffset>0x1000</addressOffset>
          <size>32</size>
          <description>Event Register:  If ER.En bit is set and the EER.En bit is  also set then the corresponding DMA channel is prioritized  vs. other pending DMA events for submission to the TC. ER.En  bit is set when the input event #n transitions from inactive  (low) to active (high) regardless of the state of EER.En  bit. ER.En bit is cleared when the corresponding event is  prioritized and serviced. If the ER.En bit is already set  and a new inactive to active transition is detected on the  input event #n input AND the corresponding bit in the EER  register is set then the corresponding bit in the Event  Missed Register is set. Event N can be cleared via sw by  writing a '1' to the ECR pseudo-register.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERH</name>
          <addressOffset>0x1004</addressOffset>
          <size>32</size>
          <description>Event Register (High Part):  If ERH.En bit is set and the  EERH.En bit is also set then the corresponding DMA channel  is prioritized vs. other pending DMA events for submission  to the TC. ERH.En bit is set when the input event #n  transitions from inactive (low) to active (high) regardless  of the state of EERH.En bit. ER.En bit is cleared when the  corresponding event is prioritized and serviced. If the  ERH.En bit is already set and a new inactive to active  transition is detected on the input event #n input AND the  corresponding bit in the EERH register is set then the  corresponding bit in the Event Missed Register is set. Event  N can be cleared via sw by writing a '1' to the ECRH  pseudo-register.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECR</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>Event Clear Register:  CPU write of '1' to the ECR.En bit  causes the ER.En bit to be cleared. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECRH</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>Event Clear Register (High Part):  CPU write of '1' to the  ECRH.En bit causes the ERH.En bit to be cleared. CPU write  of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESR</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Event Set Register:  CPU write of '1' to the ESR.En bit  causes the ER.En bit to be set. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESRH</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Event Set Register (High Part)  CPU write of '1' to the  ESRH.En bit causes the ERH.En bit to be set. CPU write of  '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CER</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Chained Event Register:  If CER.En bit is set (regardless of  state of EER.En) then the corresponding DMA channel is  prioritized vs. other pending DMA events for submission to  the TC. CER.En bit is set when a chaining completion code is  returned from one of the 3PTCs via the completion interface  or is generated internally via Early Completion path. CER.En  bit is cleared when the corresponding event is prioritized  and serviced. If the CER.En bit is already set and the  corresponding chaining completion code is returned from the  TC then the corresponding bit in the Event Missed Register  is set. CER.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CERH</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Chained Event Register (High Part):  If CERH.En bit is set  (regardless of state of EERH.En) then the corresponding DMA  channel is prioritized vs. other pending DMA events for  submission to the TC. CERH.En bit is set when a chaining  completion code is returned from one of the 3PTCs via the  completion interface or is generated internally via Early  Completion path. CERH.En bit is cleared when the  corresponding event is prioritized and serviced. If the  CERH.En bit is already set and the corresponding chaining  completion code is returned from the TC then the  corresponding bit in the Event Missed Register is set.  CERH.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EER</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>Event Enable Register:  Enables DMA transfers for ER.En  pending events. ER.En is set based on externally asserted  events (via tpcc_eventN_pi). This register has no effect on  Chained Event Register (CER) or Event Set Register (ESR).  Note that if a bit is set in ER.En while EER.En is disabled  no action is taken. If EER.En is enabled at a later point  (and ER.En has not been cleared via SW) then the event will  be recognized as a valid 'TR Sync' EER.En is not directly  writeable. Events can be enabled via writes to EESR and can  be disabled via writes to EECR register.   EER.En = 0: ER.En  is not enabled to trigger DMA transfers.  EER.En = 1: ER.En  is enabled to trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EERH</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Event Enable Register (High Part):  Enables DMA transfers  for ERH.En pending events. ERH.En is set based on externally  asserted events (via tpcc_eventN_pi). This register has no  effect on Chained Event Register (CERH) or Event Set  Register (ESRH). Note that if a bit is set in ERH.En while  EERH.En is disabled no action is taken. If EERH.En is  enabled at a later point (and ERH.En has not been cleared  via SW) then the event will be recognized as a valid 'TR  Sync' EERH.En is not directly writeable. Events can be  enabled via writes to EESRH and can be disabled via writes  to EECRH register.   EERH.En = 0: ER.En is not enabled to  trigger DMA transfers.  EERH.En = 1: ER.En is enabled to  trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECR</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register:  CPU write of '1' to the  EECR.En bit causes the EER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECRH</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register (High Part):  CPU write of '1'  to the EECRH.En bit causes the EERH.En bit to be cleared.  CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESR</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register:  CPU write of '1' to the EESR.En  bit causes the EER.En bit to be set. CPU write of '0' has no  effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESRH</name>
          <addressOffset>0x1034</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register (High Part):  CPU write of '1' to  the EESRH.En bit causes the EERH.En bit to be set. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SER</name>
          <addressOffset>0x1038</addressOffset>
          <size>32</size>
          <description>Secondary Event Register:  The secondary event register is  used along with the Event Register (ER) to provide  information on the state of an Event.   En = 0 : Event is  not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SERH</name>
          <addressOffset>0x103C</addressOffset>
          <size>32</size>
          <description>Secondary Event Register (High Part):  The secondary event  register is used along with the Event Register (ERH) to  provide information on the state of an Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECR</name>
          <addressOffset>0x1040</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register:  The secondary event clear  register is used to clear the status of the SER registers.   CPU write of '1' to the SECR.En bit clears the SER register.  CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECRH</name>
          <addressOffset>0x1044</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register (High Part):  The secondary  event clear register is used to clear the status of the SERH  registers.  CPU write of '1' to the SECRH.En bit clears the  SERH register. CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IER</name>
          <addressOffset>0x1050</addressOffset>
          <size>32</size>
          <description>Int Enable Register:  IER.In is not directly writeable.  Interrupts can be enabled via writes to IESR and can be  disabled via writes to IECR register.  IER.In = 0: IPR.In is  NOT enabled for interrupts. IER.In = 1: IPR.In IS enabled  for interrupts.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IERH</name>
          <addressOffset>0x1054</addressOffset>
          <size>32</size>
          <description>Int Enable Register (High Part):  IERH.In is not directly  writeable. Interrupts can be enabled via writes to IESRH and  can be disabled via writes to IECRH register.  IERH.In = 0:  IPRH.In is NOT enabled for interrupts. IERH.In = 1: IPRH.In  IS enabled for interrupts.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECR</name>
          <addressOffset>0x1058</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register:  CPU write of '1' to the IECR.In  bit causes the IER.In bit to be cleared. CPU write of '0'  has no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECRH</name>
          <addressOffset>0x105C</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register (High Part):  CPU write of '1' to  the IECRH.In bit causes the IERH.In bit to be cleared. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESR</name>
          <addressOffset>0x1060</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register:  CPU write of '1' to the IESR.In  bit causes the IESR.In bit to be set. CPU write of '0' has  no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESRH</name>
          <addressOffset>0x1064</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register (High Part):  CPU write of '1' to  the IESRH.In bit causes the IESRH.In bit to be set. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPR</name>
          <addressOffset>0x1068</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register:  IPR.In bit is set when a  interrupt completion code with TCC of N is detected. IPR.In  bit is cleared via software by writing a '1' to ICR.In bit.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPRH</name>
          <addressOffset>0x106C</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register (High Part):  IPRH.In bit is set  when a interrupt completion code with TCC of N is detected.  IPRH.In bit is cleared via software by writing a '1' to  ICRH.In bit.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x1070</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register:  CPU write of '1' to the ICR.In  bit causes the IPR.In bit to be cleared. CPU write of '0'  has no effect.  All IPR.In bits must be cleared before  additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICRH</name>
          <addressOffset>0x1074</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register (High Part):  CPU write of '1' to  the ICRH.In bit causes the IPRH.In bit to be cleared. CPU  write of '0' has no effect.  All IPRH.In bits must be  cleared before additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IEVAL</name>
          <addressOffset>0x1078</addressOffset>
          <size>32</size>
          <description>Interrupt Eval Register</description>
          <fields>
            <field>
              <name>RES69</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Interrupt Set:  CPU write of '1' to the SETn bit causes the  tpcc_intN output signal to be pulsed egardless of state of  interrupts enable (IERn) and status (IPRn). CPU write of '0'  has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Interrupt Evaluate:  CPU write of '1' to the EVALn bit  causes the tpcc_intN output signal to be pulsed if any  enabled interrupts (IERn) are still pending (IPRn). CPU  write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QER</name>
          <addressOffset>0x1080</addressOffset>
          <size>32</size>
          <description>QDMA Event Register:  If QER.En bit is set then the  corresponding QDMA channel is prioritized vs. other qdma  events for submission to the TC. QER.En bit is set when a  vbus write byte matches the address defined in the QCHMAPn  register. QER.En bit is cleared when the corresponding event  is prioritized and serviced. QER.En is also cleared when  user writes a '1' to the QSECR.En bit. If the QER.En bit is  already set and a new QDMA event is detected due to user  write to QDMA trigger location and QEER register is set  then the corresponding bit in the QDMA Event Missed Register  is set.</description>
          <fields>
            <field>
              <name>RES70</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEER</name>
          <addressOffset>0x1084</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Register:  Enabled/disabled QDMA address  comparator for QDMA Channel N. QEER.En is not directly  writeable. QDMA channels can be enabled via writes to QEESR  and can be disabled via writes to QEECR register.  QEER.En =  1 The corresponding QDMA channel comparator is enabled and  Events will be recognized and latched in QER.En. QEER.En =  0 The corresponding QDMA channel comparator is disabled.  Events will not be recognized/latched in QER.En.</description>
          <fields>
            <field>
              <name>RES71</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEECR</name>
          <addressOffset>0x1088</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Clear Register:  CPU write of '1' to the  QEECR.En bit causes the QEER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES72</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEESR</name>
          <addressOffset>0x108C</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Set Register:  CPU write of '1' to the  QEESR.En bit causes the QEESR.En bit to be set. CPU write of  '0' has no effect..</description>
          <fields>
            <field>
              <name>RES73</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSER</name>
          <addressOffset>0x1090</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Register:  The QDMA secondary event  register is used along with the QDMA Event Register (QER) to  provide information on the state of a QDMA Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>RES74</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSECR</name>
          <addressOffset>0x1094</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Clear Register:  The secondary event  clear register is used to clear the status of the QSER and  QER register (note that this is slightly different than the  SER operation which does not clear the ER.En register).   CPU write of '1' to the QSECR.En bit clears the QSER.En and  QER.En register fields. CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES75</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ER_RN</name>
          <addressOffset>0x2000</addressOffset>
          <size>32</size>
          <description>Event Register:  If ER.En bit is set and the EER.En bit is  also set then the corresponding DMA channel is prioritized  vs. other pending DMA events for submission to the TC. ER.En  bit is set when the input event #n transitions from inactive  (low) to active (high) regardless of the state of EER.En  bit. ER.En bit is cleared when the corresponding event is  prioritized and serviced. If the ER.En bit is already set  and a new inactive to active transition is detected on the  input event #n input AND the corresponding bit in the EER  register is set then the corresponding bit in the Event  Missed Register is set. Event N can be cleared via sw by  writing a '1' to the ECR pseudo-register.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERH_RN</name>
          <addressOffset>0x2004</addressOffset>
          <size>32</size>
          <description>Event Register (High Part):  If ERH.En bit is set and the  EERH.En bit is also set then the corresponding DMA channel  is prioritized vs. other pending DMA events for submission  to the TC. ERH.En bit is set when the input event #n  transitions from inactive (low) to active (high) regardless  of the state of EERH.En bit. ER.En bit is cleared when the  corresponding event is prioritized and serviced. If the  ERH.En bit is already set and a new inactive to active  transition is detected on the input event #n input AND the  corresponding bit in the EERH register is set then the  corresponding bit in the Event Missed Register is set. Event  N can be cleared via sw by writing a '1' to the ECRH  pseudo-register.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECR_RN</name>
          <addressOffset>0x2008</addressOffset>
          <size>32</size>
          <description>Event Clear Register:  CPU write of '1' to the ECR.En bit  causes the ER.En bit to be cleared. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECRH_RN</name>
          <addressOffset>0x200C</addressOffset>
          <size>32</size>
          <description>Event Clear Register (High Part):  CPU write of '1' to the  ECRH.En bit causes the ERH.En bit to be cleared. CPU write  of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESR_RN</name>
          <addressOffset>0x2010</addressOffset>
          <size>32</size>
          <description>Event Set Register:  CPU write of '1' to the ESR.En bit  causes the ER.En bit to be set. CPU write of '0' has no  effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESRH_RN</name>
          <addressOffset>0x2014</addressOffset>
          <size>32</size>
          <description>Event Set Register (High Part)  CPU write of '1' to the  ESRH.En bit causes the ERH.En bit to be set. CPU write of  '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CER_RN</name>
          <addressOffset>0x2018</addressOffset>
          <size>32</size>
          <description>Chained Event Register:  If CER.En bit is set (regardless of  state of EER.En) then the corresponding DMA channel is  prioritized vs. other pending DMA events for submission to  the TC. CER.En bit is set when a chaining completion code is  returned from one of the 3PTCs via the completion interface  or is generated internally via Early Completion path. CER.En  bit is cleared when the corresponding event is prioritized  and serviced. If the CER.En bit is already set and the  corresponding chaining completion code is returned from the  TC then the corresponding bit in the Event Missed Register  is set. CER.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CERH_RN</name>
          <addressOffset>0x201C</addressOffset>
          <size>32</size>
          <description>Chained Event Register (High Part):  If CERH.En bit is set  (regardless of state of EERH.En) then the corresponding DMA  channel is prioritized vs. other pending DMA events for  submission to the TC. CERH.En bit is set when a chaining  completion code is returned from one of the 3PTCs via the  completion interface or is generated internally via Early  Completion path. CERH.En bit is cleared when the  corresponding event is prioritized and serviced. If the  CERH.En bit is already set and the corresponding chaining  completion code is returned from the TC then the  corresponding bit in the Event Missed Register is set.  CERH.En cannot be set or cleared via software.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EER_RN</name>
          <addressOffset>0x2020</addressOffset>
          <size>32</size>
          <description>Event Enable Register:  Enables DMA transfers for ER.En  pending events. ER.En is set based on externally asserted  events (via tpcc_eventN_pi). This register has no effect on  Chained Event Register (CER) or Event Set Register (ESR).  Note that if a bit is set in ER.En while EER.En is disabled  no action is taken. If EER.En is enabled at a later point  (and ER.En has not been cleared via SW) then the event will  be recognized as a valid 'TR Sync' EER.En is not directly  writeable. Events can be enabled via writes to EESR and can  be disabled via writes to EECR register.   EER.En = 0: ER.En  is not enabled to trigger DMA transfers.  EER.En = 1: ER.En  is enabled to trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EERH_RN</name>
          <addressOffset>0x2024</addressOffset>
          <size>32</size>
          <description>Event Enable Register (High Part):  Enables DMA transfers  for ERH.En pending events. ERH.En is set based on externally  asserted events (via tpcc_eventN_pi). This register has no  effect on Chained Event Register (CERH) or Event Set  Register (ESRH). Note that if a bit is set in ERH.En while  EERH.En is disabled no action is taken. If EERH.En is  enabled at a later point (and ERH.En has not been cleared  via SW) then the event will be recognized as a valid 'TR  Sync' EERH.En is not directly writeable. Events can be  enabled via writes to EESRH and can be disabled via writes  to EECRH register.   EERH.En = 0: ER.En is not enabled to  trigger DMA transfers.  EERH.En = 1: ER.En is enabled to  trigger DMA transfers.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECR_RN</name>
          <addressOffset>0x2028</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register:  CPU write of '1' to the  EECR.En bit causes the EER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EECRH_RN</name>
          <addressOffset>0x202C</addressOffset>
          <size>32</size>
          <description>Event Enable Clear Register (High Part):  CPU write of '1'  to the EECRH.En bit causes the EERH.En bit to be cleared.  CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESR_RN</name>
          <addressOffset>0x2030</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register:  CPU write of '1' to the EESR.En  bit causes the EER.En bit to be set. CPU write of '0' has no  effect..</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>EESRH_RN</name>
          <addressOffset>0x2034</addressOffset>
          <size>32</size>
          <description>Event Enable Set Register (High Part):  CPU write of '1' to  the EESRH.En bit causes the EERH.En bit to be set. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SER_RN</name>
          <addressOffset>0x2038</addressOffset>
          <size>32</size>
          <description>Secondary Event Register:  The secondary event register is  used along with the Event Register (ER) to provide  information on the state of an Event.   En = 0 : Event is  not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SERH_RN</name>
          <addressOffset>0x203C</addressOffset>
          <size>32</size>
          <description>Secondary Event Register (High Part):  The secondary event  register is used along with the Event Register (ERH) to  provide information on the state of an Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECR_RN</name>
          <addressOffset>0x2040</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register:  The secondary event clear  register is used to clear the status of the SER registers.   CPU write of '1' to the SECR.En bit clears the SER register.  CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E31</name>
              <description>[31:31] Event #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E30</name>
              <description>[30:30] Event #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E29</name>
              <description>[29:29] Event #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E28</name>
              <description>[28:28] Event #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E27</name>
              <description>[27:27] Event #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E26</name>
              <description>[26:26] Event #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E25</name>
              <description>[25:25] Event #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E24</name>
              <description>[24:24] Event #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E23</name>
              <description>[23:23] Event #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E22</name>
              <description>[22:22] Event #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E21</name>
              <description>[21:21] Event #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E20</name>
              <description>[20:20] Event #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E19</name>
              <description>[19:19] Event #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E18</name>
              <description>[18:18] Event #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E17</name>
              <description>[17:17] Event #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E16</name>
              <description>[16:16] Event #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E15</name>
              <description>[15:15] Event #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E14</name>
              <description>[14:14] Event #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E13</name>
              <description>[13:13] Event #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E12</name>
              <description>[12:12] Event #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E11</name>
              <description>[11:11] Event #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E10</name>
              <description>[10:10] Event #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E9</name>
              <description>[9:9] Event #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E8</name>
              <description>[8:8] Event #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECRH_RN</name>
          <addressOffset>0x2044</addressOffset>
          <size>32</size>
          <description>Secondary Event Clear Register (High Part):  The secondary  event clear register is used to clear the status of the SERH  registers.  CPU write of '1' to the SECRH.En bit clears the  SERH register. CPU write of '0' has no effect.</description>
          <fields>
            <field>
              <name>E63</name>
              <description>[31:31] Event #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>E62</name>
              <description>[30:30] Event #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>E61</name>
              <description>[29:29] Event #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>E60</name>
              <description>[28:28] Event #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>E59</name>
              <description>[27:27] Event #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>E58</name>
              <description>[26:26] Event #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>E57</name>
              <description>[25:25] Event #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>E56</name>
              <description>[24:24] Event #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>E55</name>
              <description>[23:23] Event #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>E54</name>
              <description>[22:22] Event #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>E53</name>
              <description>[21:21] Event #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>E52</name>
              <description>[20:20] Event #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>E51</name>
              <description>[19:19] Event #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>E50</name>
              <description>[18:18] Event #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>E49</name>
              <description>[17:17] Event #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>E48</name>
              <description>[16:16] Event #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>E47</name>
              <description>[15:15] Event #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>E46</name>
              <description>[14:14] Event #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>E45</name>
              <description>[13:13] Event #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>E44</name>
              <description>[12:12] Event #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>E43</name>
              <description>[11:11] Event #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>E42</name>
              <description>[10:10] Event #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>E41</name>
              <description>[9:9] Event #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>E40</name>
              <description>[8:8] Event #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E39</name>
              <description>[7:7] Event #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E38</name>
              <description>[6:6] Event #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E37</name>
              <description>[5:5] Event #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E36</name>
              <description>[4:4] Event #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E35</name>
              <description>[3:3] Event #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E34</name>
              <description>[2:2] Event #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E33</name>
              <description>[1:1] Event #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E32</name>
              <description>[0:0] Event #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IER_RN</name>
          <addressOffset>0x2050</addressOffset>
          <size>32</size>
          <description>Int Enable Register:  IER.In is not directly writeable.  Interrupts can be enabled via writes to IESR and can be  disabled via writes to IECR register.  IER.In = 0: IPR.In is  NOT enabled for interrupts. IER.In = 1: IPR.In IS enabled  for interrupts.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IERH_RN</name>
          <addressOffset>0x2054</addressOffset>
          <size>32</size>
          <description>Int Enable Register (High Part):  IERH.In is not directly  writeable. Interrupts can be enabled via writes to IESRH and  can be disabled via writes to IECRH register.  IERH.In = 0:  IPRH.In is NOT enabled for interrupts. IERH.In = 1: IPRH.In  IS enabled for interrupts.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECR_RN</name>
          <addressOffset>0x2058</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register:  CPU write of '1' to the IECR.In  bit causes the IER.In bit to be cleared. CPU write of '0'  has no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IECRH_RN</name>
          <addressOffset>0x205C</addressOffset>
          <size>32</size>
          <description>Int Enable Clear Register (High Part):  CPU write of '1' to  the IECRH.In bit causes the IERH.In bit to be cleared. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESR_RN</name>
          <addressOffset>0x2060</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register:  CPU write of '1' to the IESR.In  bit causes the IESR.In bit to be set. CPU write of '0' has  no effect..</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IESRH_RN</name>
          <addressOffset>0x2064</addressOffset>
          <size>32</size>
          <description>Int Enable Set Register (High Part):  CPU write of '1' to  the IESRH.In bit causes the IESRH.In bit to be set. CPU  write of '0' has no effect..</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPR_RN</name>
          <addressOffset>0x2068</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register:  IPR.In bit is set when a  interrupt completion code with TCC of N is detected. IPR.In  bit is cleared via software by writing a '1' to ICR.In bit.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPRH_RN</name>
          <addressOffset>0x206C</addressOffset>
          <size>32</size>
          <description>Interrupt Pending Register (High Part):  IPRH.In bit is set  when a interrupt completion code with TCC of N is detected.  IPRH.In bit is cleared via software by writing a '1' to  ICRH.In bit.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICR_RN</name>
          <addressOffset>0x2070</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register:  CPU write of '1' to the ICR.In  bit causes the IPR.In bit to be cleared. CPU write of '0'  has no effect.  All IPR.In bits must be cleared before  additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I31</name>
              <description>[31:31] Interrupt associated with TCC #31</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I30</name>
              <description>[30:30] Interrupt associated with TCC #30</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I29</name>
              <description>[29:29] Interrupt associated with TCC #29</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I28</name>
              <description>[28:28] Interrupt associated with TCC #28</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I27</name>
              <description>[27:27] Interrupt associated with TCC #27</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I26</name>
              <description>[26:26] Interrupt associated with TCC #26</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I25</name>
              <description>[25:25] Interrupt associated with TCC #25</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I24</name>
              <description>[24:24] Interrupt associated with TCC #24</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I23</name>
              <description>[23:23] Interrupt associated with TCC #23</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I22</name>
              <description>[22:22] Interrupt associated with TCC #22</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I21</name>
              <description>[21:21] Interrupt associated with TCC #21</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I20</name>
              <description>[20:20] Interrupt associated with TCC #20</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I19</name>
              <description>[19:19] Interrupt associated with TCC #19</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I18</name>
              <description>[18:18] Interrupt associated with TCC #18</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I17</name>
              <description>[17:17] Interrupt associated with TCC #17</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I16</name>
              <description>[16:16] Interrupt associated with TCC #16</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I15</name>
              <description>[15:15] Interrupt associated with TCC #15</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I14</name>
              <description>[14:14] Interrupt associated with TCC #14</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I13</name>
              <description>[13:13] Interrupt associated with TCC #13</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I12</name>
              <description>[12:12] Interrupt associated with TCC #12</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I11</name>
              <description>[11:11] Interrupt associated with TCC #11</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I10</name>
              <description>[10:10] Interrupt associated with TCC #10</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I9</name>
              <description>[9:9] Interrupt associated with TCC #9</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I8</name>
              <description>[8:8] Interrupt associated with TCC #8</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I7</name>
              <description>[7:7] Interrupt associated with TCC #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I6</name>
              <description>[6:6] Interrupt associated with TCC #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I5</name>
              <description>[5:5] Interrupt associated with TCC #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I4</name>
              <description>[4:4] Interrupt associated with TCC #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I3</name>
              <description>[3:3] Interrupt associated with TCC #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I2</name>
              <description>[2:2] Interrupt associated with TCC #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I1</name>
              <description>[1:1] Interrupt associated with TCC #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I0</name>
              <description>[0:0] Interrupt associated with TCC #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICRH_RN</name>
          <addressOffset>0x2074</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register (High Part):  CPU write of '1' to  the ICRH.In bit causes the IPRH.In bit to be cleared. CPU  write of '0' has no effect.  All IPRH.In bits must be  cleared before additional interrupts will be asserted by CC.</description>
          <fields>
            <field>
              <name>I63</name>
              <description>[31:31] Interrupt associated with TCC #63</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>I62</name>
              <description>[30:30] Interrupt associated with TCC #62</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>I61</name>
              <description>[29:29] Interrupt associated with TCC #61</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>I60</name>
              <description>[28:28] Interrupt associated with TCC #60</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>I59</name>
              <description>[27:27] Interrupt associated with TCC #59</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>I58</name>
              <description>[26:26] Interrupt associated with TCC #58</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>I57</name>
              <description>[25:25] Interrupt associated with TCC #57</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>I56</name>
              <description>[24:24] Interrupt associated with TCC #56</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>I55</name>
              <description>[23:23] Interrupt associated with TCC #55</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>I54</name>
              <description>[22:22] Interrupt associated with TCC #54</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>I53</name>
              <description>[21:21] Interrupt associated with TCC #53</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>I52</name>
              <description>[20:20] Interrupt associated with TCC #52</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>I51</name>
              <description>[19:19] Interrupt associated with TCC #51</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>I50</name>
              <description>[18:18] Interrupt associated with TCC #50</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>I49</name>
              <description>[17:17] Interrupt associated with TCC #49</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>I48</name>
              <description>[16:16] Interrupt associated with TCC #48</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>I47</name>
              <description>[15:15] Interrupt associated with TCC #47</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>I46</name>
              <description>[14:14] Interrupt associated with TCC #46</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>I45</name>
              <description>[13:13] Interrupt associated with TCC #45</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>I44</name>
              <description>[12:12] Interrupt associated with TCC #44</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>I43</name>
              <description>[11:11] Interrupt associated with TCC #43</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>I42</name>
              <description>[10:10] Interrupt associated with TCC #42</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>I41</name>
              <description>[9:9] Interrupt associated with TCC #41</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>I40</name>
              <description>[8:8] Interrupt associated with TCC #40</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>I39</name>
              <description>[7:7] Interrupt associated with TCC #39</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>I38</name>
              <description>[6:6] Interrupt associated with TCC #38</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>I37</name>
              <description>[5:5] Interrupt associated with TCC #37</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>I36</name>
              <description>[4:4] Interrupt associated with TCC #36</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>I35</name>
              <description>[3:3] Interrupt associated with TCC #35</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>I34</name>
              <description>[2:2] Interrupt associated with TCC #34</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>I33</name>
              <description>[1:1] Interrupt associated with TCC #33</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>I32</name>
              <description>[0:0] Interrupt associated with TCC #32</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IEVAL_RN</name>
          <addressOffset>0x2078</addressOffset>
          <size>32</size>
          <description>Interrupt Eval Register</description>
          <fields>
            <field>
              <name>RES76</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET</name>
              <description>[1:1] Interrupt Set:  CPU write of '1' to the SETn bit causes the  tpcc_intN output signal to be pulsed egardless of state of  interrupts enable (IERn) and status (IPRn). CPU write of '0'  has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EVAL</name>
              <description>[0:0] Interrupt Evaluate:  CPU write of '1' to the EVALn bit  causes the tpcc_intN output signal to be pulsed if any  enabled interrupts (IERn) are still pending (IPRn). CPU  write of '0' has no effect..</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QER_RN</name>
          <addressOffset>0x2080</addressOffset>
          <size>32</size>
          <description>QDMA Event Register:  If QER.En bit is set then the  corresponding QDMA channel is prioritized vs. other qdma  events for submission to the TC. QER.En bit is set when a  vbus write byte matches the address defined in the QCHMAPn  register. QER.En bit is cleared when the corresponding event  is prioritized and serviced. QER.En is also cleared when  user writes a '1' to the QSECR.En bit. If the QER.En bit is  already set and a new QDMA event is detected due to user  write to QDMA trigger location and QEER register is set  then the corresponding bit in the QDMA Event Missed Register  is set.</description>
          <fields>
            <field>
              <name>RES77</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEER_RN</name>
          <addressOffset>0x2084</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Register:  Enabled/disabled QDMA address  comparator for QDMA Channel N. QEER.En is not directly  writeable. QDMA channels can be enabled via writes to QEESR  and can be disabled via writes to QEECR register.  QEER.En =  1 The corresponding QDMA channel comparator is enabled and  Events will be recognized and latched in QER.En. QEER.En =  0 The corresponding QDMA channel comparator is disabled.  Events will not be recognized/latched in QER.En.</description>
          <fields>
            <field>
              <name>RES78</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEECR_RN</name>
          <addressOffset>0x2088</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Clear Register:  CPU write of '1' to the  QEECR.En bit causes the QEER.En bit to be cleared. CPU write  of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES79</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QEESR_RN</name>
          <addressOffset>0x208C</addressOffset>
          <size>32</size>
          <description>QDMA Event Enable Set Register:  CPU write of '1' to the  QEESR.En bit causes the QEESR.En bit to be set. CPU write of  '0' has no effect..</description>
          <fields>
            <field>
              <name>RES80</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSER_RN</name>
          <addressOffset>0x2090</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Register:  The QDMA secondary event  register is used along with the QDMA Event Register (QER) to  provide information on the state of a QDMA Event.   En = 0 :  Event is not currently in the Event Queue. En = 1 : Event is  currently stored in Event Queue. Event arbiter will not  prioritize additional events.</description>
          <fields>
            <field>
              <name>RES81</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSECR_RN</name>
          <addressOffset>0x2094</addressOffset>
          <size>32</size>
          <description>QDMA Secondary Event Clear Register:  The secondary event  clear register is used to clear the status of the QSER and  QER register (note that this is slightly different than the  SER operation which does not clear the ER.En register).   CPU write of '1' to the QSECR.En bit clears the QSER.En and  QER.En register fields. CPU write of '0' has no effect..</description>
          <fields>
            <field>
              <name>RES82</name>
              <description>[31:8] RESERVE FIELD</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>E7</name>
              <description>[7:7] Event #7</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>E6</name>
              <description>[6:6] Event #6</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>E5</name>
              <description>[5:5] Event #5</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>E4</name>
              <description>[4:4] Event #4</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>E3</name>
              <description>[3:3] Event #3</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>E2</name>
              <description>[2:2] Event #2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>E1</name>
              <description>[1:1] Event #1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>E0</name>
              <description>[0:0] Event #0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>OPT</name>
          <addressOffset>0x4000</addressOffset>
          <size>32</size>
          <description>Options Parameter</description>
          <fields>
            <field>
              <name>PRIV</name>
              <description>[31:31] Privilege level:  privilege level (supervisor vs. user) for  the host/cpu/dma that programmed this PaRAM Entry. Value is  set with the vbus priv value when any part of the PaRAM  Entry is written. Not writeable via vbus wdata bus. Is  readable via VBus rdata bus.  PRIV = 0 : User level  privilege PRIV = 1 : Supervisor level privilege</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>RES83</name>
              <description>[30:28] RESERVE FIELD</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>PRIVID</name>
              <description>[27:24] Privilege ID:  Privilege ID for the external host/cpu/dma  that programmed this PaRAM Entry. This value is set with the  vbus privid value when any part of the PaRAM Entry is  written. Not writeable via vbus wdata bus. Is readable via  VBus rdata bus.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>ITCCHEN</name>
              <description>[23:23] Intermediate transfer completion chaining enable:  0:  Intermediate transfer complete chaining is disabled. 1:  Intermediate transfer complete chaining is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>TCCHEN</name>
              <description>[22:22] Transfer complete chaining enable:  0: Transfer complete  chaining is disabled. 1: Transfer complete chaining is  enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>ITCINTEN</name>
              <description>[21:21] Intermediate transfer completion interrupt enable:  0:  Intermediate transfer complete interrupt is disabled. 1:  Intermediate transfer complete interrupt is enabled  (corresponding IER[TCC] bit must be set to 1 to generate  interrupt)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>TCINTEN</name>
              <description>[20:20] Transfer complete interrupt enable:  0: Transfer complete  interrupt is disabled. 1: Transfer complete interrupt is  enabled (corresponding IER[TCC] bit must be set to 1 to  generate interrupt)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>WIMODE</name>
              <description>[19:19] Backward compatibility mode:  0: Normal operation 1 : WI  Backwards Compatibility mode forces BCNT to be adjusted by  '1' upon TR submission (0 means 1 1 means 2 ... ) and  forces ACNT to be treated as a word-count (left shifted by 2  by hardware to create byte cnt for TR submission)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>RES84</name>
              <description>[18:18] RESERVE FIELD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>TCC</name>
              <description>[17:12] Transfer Complete Code:  The 6-bit code is used to set the  relevant bit in CER (bit CER[TCC]) for chaining or in IER  (bit IER[TCC]) for interrupts.</description>
              <bitWidth>6</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TCCMODE</name>
              <description>[11:11] Transfer complete code mode:  Indicates the point at which a  transfer is considered completed. Applies to both chaining  and interrupt.  0: Normal Completion A transfer is  considered completed after the transfer parameters are  returned to the CC from the TC (which was returned from the  peripheral). 1: Early Completion A transfer is considered  completed after the CC submits a TR to the TC. CC generates  completion code internally .</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>FWID</name>
              <description>[10:8] FIFO width:  Applies if either SAM or DAM is set to FIFO  mode. Pass-thru to TC.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RES85</name>
              <description>[7:4] RESERVE FIELD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STATIC</name>
              <description>[3:3] Static Entry:  0: Entry is updated as normal 1: Entry is  static Count and Address updates are not updated after TRP  is submitted. Linking is not performed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SYNCDIM</name>
              <description>[2:2] Transfer Synchronization Dimension:  0: A-Sync Each event  triggers the transfer of ACNT elements. 1: AB-Sync Each  event triggers the transfer of BCNT arrays of ACNT elements</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DAM</name>
              <description>[1:1] Destination Address Mode:  Destination Address Mode within  an array. Pass-thru to TC.  0: INCR Dst addressing within  an array increments. Dst is not a FIFO. 1: FIFO Dst  addressing within an array wraps around upon reaching FIFO  width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SAM</name>
              <description>[0:0] Source Address Mode:  Source Address Mode within an array.  Pass-thru to TC.  0: INCR Src addressing within an array  increments. Source is not a FIFO. 1: FIFO Src addressing  within an array wraps around upon reaching FIFO width.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SRC</name>
          <addressOffset>0x4004</addressOffset>
          <size>32</size>
          <description>Source Address</description>
          <fields>
            <field>
              <name>SRC</name>
              <description>[31:0] Source Address:  The 32-bit source address parameters  specify the starting byte address of the source . If SAM is  set to FIFO mode then the user should program the Source  address to be aligned to the value specified by the OPT.FWID  field. No errors are recognized here but TC will assert  error if this is not true.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ABCNT</name>
          <addressOffset>0x4008</addressOffset>
          <size>32</size>
          <description>A and B byte count</description>
          <fields>
            <field>
              <name>BCNT</name>
              <description>[31:16] BCNT : Count for 2nd Dimension:  BCNT is a 16-bit unsigned  value that specifies the number of arrays of length ACNT.  For normal operation valid values for BCNT can be anywhere  between 1 and 65535. Therefore the maximum number of arrays  in a frame is 65535 (64K-1 arrays). BCNT=1 means 1 array in  the frame and BCNT=0 means 0 arrays in the frame.   In  normal mode a BCNT of '0' is considered as either a Null or  Dummy transfer. A Dummy or Null transfer will generate a  Completion code depending on the settings of the completion  bit fields of the OPT field.   If the OPT.WIMODE bit is set  then the programmed BCNT value will be incremented by '1'  before submission to TC. I.e. 0 means 1 1 means 2 2 means  3 ...</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ACNT</name>
              <description>[15:0] ACNT : number of bytes in 1st dimension:  ACNT represents  the number of bytes within the first dimension of a  transfer. ACNT is a 16-bit unsigned value with valid values  between 0 and 65535. Therefore the maximum number of bytes  in an array is 65535 bytes (64K-1 bytes). ACNT must be  greater than or equal to '1' for a TR to be submitted to TC.  An ACNT of '0' is considered as either a null or dummy  transfer. A Dummy or Null transfer will generate a  Completion code depending on the settings of the completion  bit fields of the OPT field.  If the OPT.WIMODE bit is set  then the ACNT field represents a word count. The CC must  internally multiply by 4 to translate the word count to a  byte count prior to submission to the TC. The 2 MSBs of the  16-bit ACNT are reserved and should always be written as  'b00 by the user. If user writes a value other than 0 it  will still be treated as 0 since the multiply-by-4 operation  (to translate between a word count and a byte count) will  drop the 2 msbits. For dummy and null transfer definition  the ACNT definition will disregard the 2 msbits. I.e. a  programmed ACNT value of 0x8000 in WI-mode will be treated  as 0 byte transfer resulting in null or dummy operation  dependent on the state of BCNT and CCNT.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DST</name>
          <addressOffset>0x400C</addressOffset>
          <size>32</size>
          <description>Destination Address</description>
          <fields>
            <field>
              <name>DST</name>
              <description>[31:0] Destination Address:  The 32-bit destination address  parameters specify the starting byte address of the  destination. If DAM is set to FIFO mode then the user should  program the Destination address to be aligned to the value  specified by the OPT.FWID field. No errors are recognized  here but TC will assert error if this is not true.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BIDX</name>
          <addressOffset>0x4010</addressOffset>
          <size>32</size>
          <description>Register description is not available</description>
          <fields>
            <field>
              <name>DBIDX</name>
              <description>[31:16] Destination 2nd Dimension Index:  DBIDX is a 16-bit signed  value (2's complement) used for destination address  modification in between each array in the 2nd dimension. It  is a signed value between -32768 and 32767. It provides a  byte address offset from the beginning of the destination  array to the beginning of the next destination array within  the current frame. It applies to both A-Sync and AB-Sync  transfers.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SBIDX</name>
              <description>[15:0] Source 2nd Dimension Index:  SBIDX is a 16-bit signed value  (2's complement) used for source address modification in  between each array in the 2nd dimension. It is a signed  value between -32768 and 32767. It provides a byte address  offset from the beginning of the source array to the  beginning of the next source array. It applies to both  A-sync and AB-sync transfers.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LNK</name>
          <addressOffset>0x4014</addressOffset>
          <size>32</size>
          <description>Link and Reload parameters</description>
          <fields>
            <field>
              <name>BCNTRLD</name>
              <description>[31:16] BCNT Reload:  BCNTRLD is a 16-bit unsigned value used to  reload the BCNT field once the last array in the 2nd  dimension is transferred. This field is only used for  A-Sync'ed transfers. In this case the CC decrements the  BCNT value by one on each TR submission. When BCNT  (conceptually) reaches zero then the CC decrements CCNT and  uses the BCNTRLD value to reinitialize the BCNT value. For  AB-synchronized transfers the CC submits the BCNT in the TR  and therefore the TC is responsible to keep track of BCNT  not thus BCNTRLD is a don't care field.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>LINK</name>
              <description>[15:0] Link Address:  The CC provides a mechanism to reload the  current PaRAM Entry upon its natural termination (i.e.  after count fields are decremented to '0') with a new PaRAM  Entry. This is called 'linking'. The 16-bit parameter LINK  specifies the byte address offset in the PaRAM from which  the CC loads/reloads the next PaRAM entry in the link. The  CC should disregard the value in the upper 2 bits of the  LINK field as well as the lower 5-bits of the LINK field.  The upper two bits are ignored such that the user can  program either the 'literal' byte address of the LINK  parameter or the 'PaRAM base-relative' address of the link  field. Therefore if the user uses the literal address with  a range from 0x4000 to 0x7FFF it will be treated as a  PaRAM-base-relative value of 0x0000 to 0x3FFF. The lower-5  bits are ignored and treated as 'b00000 thereby  guaranteeing that all Link pointers point to a 32-byte  aligned PaRAM entry. In the latter case (5-lsbs) behavior  is undefined for the user (i.e. don't have to test it). In  the former case (2 msbs) user should be able to take  advantage of this feature (i.e. do have to test it). If a  Link Update is requested to a PaRAM address that is beyond  the actual range of implemented PaRAM then the Link will be  treated as a Null Linkand all 0s plus 0xFFFF will be written  to the current entry location.   A LINK value of 0xFFFF is  referred to as a NULL link which should cause the CC to  write 0x0 to all entries of the current PaRAM Entry except  for the LINK field which is set to 0xFFFF. The  Priv/Privid/Secure state is overwritten to 0x0 when linking.  MSBs and LSBS should not be masked when comparing against  the 0xFFFF value. I.e. a value of 0x3FFE is a non-NULL  PaRAM link field.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CIDX</name>
          <addressOffset>0x4018</addressOffset>
          <size>32</size>
          <description>Register description is not available</description>
          <fields>
            <field>
              <name>DCIDX</name>
              <description>[31:16] Destination Frame Index:  DCIDX is a 16-bit signed value  (2's complement) used for destination address modification  for the 3rd dimension. It is a signed value between -32768  and 32767. It provides a byte address offset from the  beginning of the current array (pointed to by DST address)  to the beginning of the first destination array in the next  frame. It applies to both A-sync and AB-sync transfers. Note  that when DCIDX is applied the current array in an A-sync  transfer is the last array in the frame while the current  array in a ABsync transfer is the first array in the frame.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SCIDX</name>
              <description>[15:0] Source Frame Index:  SCIDX is a 16-bit signed value (2's  complement) used for source address modification for the 3rd  dimension. It is a signed value between -32768 and 32767. It  provides a byte address offset from the beginning of the  current array (pointed to by SRC address) to the beginning  of the first source array in the next frame. It applies to  both A-sync and AB-sync transfers. Note that when SCIDX is  applied the current array in an A-sync transfer is the last  array in the frame while the current array in a AB-sync  transfer is the first array in the frame.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CCNT</name>
          <addressOffset>0x401C</addressOffset>
          <size>32</size>
          <description>C byte count</description>
          <fields>
            <field>
              <name>RES86</name>
              <description>[31:16] RESERVE FIELD</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CCNT</name>
              <description>[15:0] CCNT : Count for 3rd Dimension:  CCNT is a 16-bit unsigned  value that specifies the number of frames in a block. Valid  values for CCNT can be anywhere between 1 and 65535.  Therefore the maximum number of frames in a block is 65535  (64K-1 frames). CCNT of '1' means '1' frame in the block  and CCNT of '0' means '0' frames in the block. A CCNT value  of '0' is considered as either a null or dummy transfer. A  Dummy or Null transfer will generate a Completion code  depending on the settings of the completion bit fields of  the OPT field.   WIMODE has no affect on CCNT operation.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_RCM</name>
      <baseAddress>0x56040000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>4148</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CPU_CLKCTL</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>APP_CPU_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] Select the source clock: 0x0 : OSC_CLK 0x1 : SLOW_CLK 0x2 : MDLL_CLK 0x3 : FAST_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[3:0] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CPU_CLKSTAT</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>APP_CPU_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CAN_CLKCTL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>APP_CAN_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : OSC_CLKX2 0x2 : MDLL_CLK 0x3 : FAST_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLKFor other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CAN_CLKSTAT</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>APP_CAN_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_SPI_CLKCTL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>APP_SPI_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : OSC_CLKX2 0x2 : MDLL_CLK 0x3 : FAST_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_SPI_CLKSTAT</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>APP_SPI_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_SPI_BUSIF_CLKCTL</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>APP_SPI_BUSIF_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[11:0] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_SPI_BUSIF_CLKSTAT</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>APP_SPI_BUSIF_CLKSTAT</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_QSPI_CLKCTL</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>APP_QSPI_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : OSC_CLKX2 0x2 : MDLL_CLK 0x3 : FAST_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_QSPI_CLKSTAT</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>APP_QSPI_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOPSS_CLKCTL</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>TOPSS_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : SLOW_CLK 0x2 : MDLL 0x3 : FAST_CLK 0x4 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOPSS_CLKSTAT</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>TOPSS_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_RTI_CLKCTL</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>APP_RTI_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : XREF_IN 0x2 : OSC_CLK  (Ungated OSC_CLK for RTI in Sleep mode) 0x3 : SLOW_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_RTI_CLKSTAT</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>APP_RTI_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_WD_CLKCTL</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>APP_WD_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[15:4] 0x0 : OSC_CLK 0x1 : XREF_IN 0x2 : OSC_CLK 0x3 : SLOW_CLK 0x4 : SLOW_CLK 0x5 : SLOW_CLK 0x6 : SLOW_CLK 0x7 : SLOW_CLK For other values if the lower 3 bits matches with above, corresponding clock is selected. Data should be loaded as multibit. For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_WD_CLKSTAT</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>APP_WD_CLKSTAT</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[11:4] Current Clock selected by GCM Clock Mux 0x1 : XTALCLK 0x2 : XTALCLKX2 0x4 : MDLL 0x8 : APLL/DPLL 0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_UART_0_CLKCTL</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>APP_UART_0_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_UART_0_CLKSTAT</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>APP_UART_0_CLKSTAT</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_UART_1_CLKCTL</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>APP_UART_1_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_UART_1_CLKSTAT</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>APP_UART_1_CLKSTAT</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_I2C_CLKCTL</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>APP_I2C_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_I2C_CLKSTAT</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>APP_I2C_CLKSTAT</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_LIN_CLKCTL</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>APP_LIN_CLKCTL</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[27:16] Divide value 0x0 : div1 0x1 : div2 0x2 : div3 . . 0xF = div16 Data should be loaded as multibit. For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[3:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_LIN_CLKSTAT</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>APP_LIN_CLKSTAT</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[3:0] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED0</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>RESERVED0</description>
          <fields>
            <field>
              <name>wphres</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <description>[7:0] Bit 2:0 - Software reset for hwass cba3to2 and m64top32 bridge instances in appss. (reset value - 0) Bit 5:3 - Software reset for fecss p2p async bridge instance in appss. (reset value - 0)  0x0 : Release the reset 0x7 : Assert the reset  Bit 31:6 - Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED1</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>RESERVED1</description>
          <fields>
            <field>
              <name>wphres</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <description>[7:0] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED2</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>RESERVED2</description>
          <fields>
            <field>
              <name>wphres</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <description>[7:0] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED3</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>RESERVED3</description>
          <fields>
            <field>
              <name>wphres</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <description>[7:0] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPCFGCLKGATE0</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>IPCFGCLKGATE0</description>
          <fields>
            <field>
              <name>app_i2c</name>
              <description>[29:27] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>app_dcc</name>
              <description>[26:24] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>app_wd</name>
              <description>[23:21] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_rti</name>
              <description>[20:18] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>app_esm</name>
              <description>[17:15] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>tpcc_a</name>
              <description>[14:12] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tptc_a1</name>
              <description>[11:9] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[8:6] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_qspi</name>
              <description>[5:3] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>xbara</name>
              <description>[2:0] Reserved Setting this bit does not cause any affect to any logic</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPCFGCLKGATE1</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>IPCFGCLKGATE1</description>
          <fields>
            <field>
              <name>res</name>
              <description>[29:27] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>app_ctrl</name>
              <description>[26:24] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>app_crc</name>
              <description>[23:21] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_pwm</name>
              <description>[20:18] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>app_lin</name>
              <description>[17:15] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>app_can</name>
              <description>[14:12] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>app_spi_1</name>
              <description>[11:9] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>app_spi_0</name>
              <description>[8:6] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_uart_1</name>
              <description>[5:3] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_uart_0</name>
              <description>[2:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IPCFGCLKGATE2</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>IPCFGCLKGATE2</description>
          <fields>
            <field>
              <name>pcr6</name>
              <description>[14:12] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>pcr5</name>
              <description>[11:9] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>hwass</name>
              <description>[8:6] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>rs232</name>
              <description>[5:3] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>gio</name>
              <description>[2:0] 0x0 : Enable the Clock 0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BLOCKRESET0</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>BLOCKRESET0</description>
          <fields>
            <field>
              <name>app_i2c</name>
              <description>[29:27] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>app_dcc</name>
              <description>[26:24] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>app_wd</name>
              <description>[23:21] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_rti</name>
              <description>[20:18] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>app_esm</name>
              <description>[17:15] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>tpcc_a</name>
              <description>[14:12] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tptc_a1</name>
              <description>[11:9] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[8:6] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_qspi</name>
              <description>[5:3] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hwass</name>
              <description>[2:0] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BLOCKRESET1</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>BLOCKRESET1</description>
          <fields>
            <field>
              <name>topss</name>
              <description>[29:27] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>app_ctrl</name>
              <description>[26:24] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>app_crc</name>
              <description>[23:21] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_pwm</name>
              <description>[20:18] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>app_lin</name>
              <description>[17:15] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>app_can</name>
              <description>[14:12] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>app_spi_1</name>
              <description>[11:9] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>app_spi_0</name>
              <description>[8:6] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_uart_1</name>
              <description>[5:3] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_uart_0</name>
              <description>[2:0] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BLOCKRESET2</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>BLOCKRESET2</description>
          <fields>
            <field>
              <name>frc</name>
              <description>[8:6] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>rs232</name>
              <description>[5:3] 0x0 : Release the reset 0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>reserved</name>
              <description>[2:0] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLATFORM_SIGNATURE</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>PLATFORM_SIGNATURE</description>
          <fields>
            <field>
              <name>signature</name>
              <description>[31:0] Platform signature to identify the platform</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>POWERMODE</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>POWERMODE</description>
          <fields>
            <field>
              <name>CM3_DEEPSLEEP_STATUS</name>
              <description>[3:3] CM3 Core Deep Sleep Status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CM3_SLEEP_STATUS</name>
              <description>[2:2] CM3 Core Sleep Status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DEEPSLEEP</name>
              <description>[1:1] 0x0 : CM4 CORE DEEP SLEEP 0x1 : DEVICE DEEP SLEEP</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SLEEP</name>
              <description>[0:0] 0x0 : CM4 CORE SLEEP 0x1 : DEVICE SLEEP</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST_WFICHECK</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>RST_WFICHECK</description>
          <fields>
            <field>
              <name>cpu</name>
              <description>[2:0] Writing '000' will disable check for WFI before local reset assertion of app cpu</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST_ASSERTDLY</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>RST_ASSERTDLY</description>
          <fields>
            <field>
              <name>common</name>
              <description>[7:0] Value decides number of cycles reset should be asserted for cpu</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST2ASSERTDLY</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>RST2ASSERTDLY</description>
          <fields>
            <field>
              <name>cpu</name>
              <description>[15:8] Value decides number of cycles to be held before asserting reset for app cpu</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST_FSM_TRIG</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>RST_FSM_TRIG</description>
          <fields>
            <field>
              <name>cpu</name>
              <description>[2:0] FSM Reset Trigger</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST_CAUSE</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>RST_CAUSE</description>
          <fields>
            <field>
              <name>common</name>
              <description>[7:0] Reset cause register for APP CPU 0x00 - All cleared 0x01 - Power On Reset (PoR) 0x02 - Subsystem Reset (Combination of Warm Reset initiated from PRCM using LPRADAR:TOP_PRCM:RST_APP_PD_SOFT_RESET and PoR reset) 0x04 - STC RESET 0x08 - Reserved 0x10 - CPU Only Reset triggered by writing to LPRADAR:APP_RCM:RST_FSM_TRIG&lt;RST_FSM_TRIG_CPU&gt; (self triggered CPU reset during MEMSWAP/ECLIPSE mode to wait for WFI to assert the reset to CPU) 0x20 - Core Reset initiated from PRCM using LPRADAR:TOP_PRCM:RST_SOFT_APP_CORE_SYSRESET_REQ (reset CPU unconditionally - by debugger) or LPRADAR:TOP_PRCM:APP_CORE_SYSRESET_PARAM_WAKEUP_OUT_STATE 0x40 - Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RST_CAUSE_CLR</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>RST_CAUSE_CLR</description>
          <fields>
            <field>
              <name>cpu</name>
              <description>[2:0] Writing '111' will clear the RST_CAUSE register</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XTALCLK_CLK_GATE</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>XTALCLK_CLK_GATE</description>
          <fields>
            <field>
              <name>XTALCLK_CLK_GATE</name>
              <description>[2:0] RESERVED</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XTALCLKX2_CLK_GATE</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>XTALCLKX2_CLK_GATE</description>
          <fields>
            <field>
              <name>XTALCLKX2_CLK_GATE</name>
              <description>[2:0] Writing 3'b111 will gate the XTALX2 clock.Writing 3'b000 will ungate the clock.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APLLDIV2_CLK_GATE</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>APLLDIV2_CLK_GATE</description>
          <fields>
            <field>
              <name>APLLDIV2_CLK_GATE</name>
              <description>[2:0] Writing 3'b111 will gate the APLL/2clock to EDCC.Writing 3'b000 will ungate the clock.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFT_APPSS_LSTC_CLK_GATE</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>DFT_APPSS_LSTC_CLK_GATE</description>
          <fields>
            <field>
              <name>DFT_APPSS_LSTC_CLK_GATE</name>
              <description>[2:0] Writing 3'b111 will gate the clock to LSTC.Writing 3'b000 will ungate the clock.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DFT_APPSS_LSTC_VBUSP_CLK_GATE</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>DFT_APPSS_LSTC_VBUSP_CLK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Gate clock to LSTC VBUSP 3'b111 : Ungate Clock to LSTC VBUSP</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_ROM_CLOCK_GATE</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>APP_ROM_CLOCK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Ungate clock to APP ROM 3'b111 : Gate Clock to APP ROM</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_RAM1_CLOCK_GATE</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>APP_RAM1_CLOCK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Ungate clock to APP RAM1 3'b111 : Gate Clock to APP_RAM1</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_RAM2_CLOCK_GATE</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>APP_RAM2_CLOCK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Ungate clock to APP RAM2 3'b111 : Gate Clock to APP RAM2</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_RAM3_CLOCK_GATE</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>APP_RAM3_CLOCK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Ungate clock to APP RAM3 3'b111 : Gate Clock to APP RAM3</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_XBARA_DYNAMIC_CG</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>CFG_XBARA_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] Enable APPSS crossbar dynamic clock gating. 1 - Dynamic clock gating feature is enabled. When the feature is enabed, the CM4 should monitor for any possible pending transactions from various masters like DMA/NWA and if no transaction is expected to be iniated by the masters, the CM4 executes WFI. On ssertion of WFI signal, the clock to crossbar is gated. The clock is automatically ungated under two conditions (i) when the WFI signal is deasserted by any interrupted (ii) when any of the APPSS TPCC triggers are asserted. Instead of WFI, cfg_xbara_set_dynamic_cg also can be used to start the clock gating. 0 - Dynamic clock gating feature is disabled. The clock to APPSS crossbar is not gated dynamically. The clock to APPSS crossbar is gated/ungated as per device ice level power states.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_TPTC1_DYNAMIC_CG</name>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <description>CFG_TPTC1_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] Enable APPSS TPTC1 crossbar dynamic clock gating. 1 - Dynamic clock gating feature is enabled. Same behaviour as cfg_xbara_dynamic_cg_en - for both entry to clock gating and exit from clock gating. WFI or cfg_tptc1_set_dynamic_cg 0 - Dynamic clock gating feature is disabled. The clock to APPSS TPTC1 crossbar is not gated dynamically. The clock to APPSS TPTC1 crossbar is gated/ungated as per device ice level power states.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_TPTC2_DYNAMIC_CG</name>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <description>CFG_TPTC2_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] Enable APPSS TPTC2 crossbar dynamic clock gating. 1 - Dynamic clock gating feature is enabled. Same behaviour as cfg_xbara_dynamic_cg_en - for both entry to clock gating and exit from clock gating. WFI or cfg_tptc2_set_dynamic_cg 0 - Dynamic clock gating feature is disabled. The clock to APPSS TPTC2 crossbar is not gated dynamically. The clock to APPSS TPTC2 crossbar is gated/ungated as per device ice level power states</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_XBARA_SET_DYNAMIC_CG</name>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <description>CFG_XBARA_SET_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>set</name>
              <description>[0:0] Start APPSS crossbar dynamic clock gating. This is used instead of WFI. 1 - Start the clock gating. In order to start again, write 0 followed by 1. Rise edge is detected internally, to start the clock gating. 0 - Clock is ungated. Fall edge is detected internally to ungate the clock.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_TPTC1_SET_DYNAMIC_CG</name>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <description>CFG_TPTC1_SET_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>set</name>
              <description>[0:0] Start APPSS tptc1 dynamic clock gating. This is used instead of WFI. 1 - Start the clock gating. In order to start again, write 0 followed by 1. Rise edge is detected internally, to start the clock gating. 0 - Clock is ungated. Fall edge is detected internally to ungate the clock.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_TPTC2_SET_DYNAMIC_CG</name>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <description>CFG_TPTC2_SET_DYNAMIC_CG</description>
          <fields>
            <field>
              <name>set</name>
              <description>[0:0] Start APPSS tptc2 dynamic clock gating. This is used instead of WFI. 1 - Start the clock gating. In order to start again, write 0 followed by 1. Rise edge is detected internally, to start the clock gating. 0 - Clock is ungated. Fall edge is detected internally to ungate the clock.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CM4_FORCE_HCLK_GATE</name>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <description>CM4_FORCE_HCLK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 - CM4 HCLK is ungated 3'b111 - CM4 HCLK is gated</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LIN_SCI_DIV</name>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <description>LIN_SCI_DIV</description>
          <fields>
            <field>
              <name>val</name>
              <description>[7:0] ICG Based Divider for LIN</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_LSTC_EN</name>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <description>APP_LSTC_EN</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[0:0] Enable vbusp_req and clk_en for app lstc</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_10_0000</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_CTRL</name>
      <baseAddress>0x56060000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>4148</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG0</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>HW_REG0</description>
          <fields>
            <field>
              <name>hwreg0</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>HW_REG1</description>
          <fields>
            <field>
              <name>hwreg1</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PREVIOUS_NAME</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>PREVIOUS_NAME</description>
          <fields>
            <field>
              <name>hwreg2</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG3</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>HW_REG3</description>
          <fields>
            <field>
              <name>hwreg3</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG4</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>HW_REG4</description>
          <fields>
            <field>
              <name>hwreg4</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG5</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>HW_REG5</description>
          <fields>
            <field>
              <name>hwreg5</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG6</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>HW_REG6</description>
          <fields>
            <field>
              <name>hwreg6</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG7</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>HW_REG7</description>
          <fields>
            <field>
              <name>hwreg7</name>
              <description>[31:0] HW reserved Regsiter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SW_INT</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>APPSS_SW_INT</description>
          <fields>
            <field>
              <name>pulse</name>
              <description>[3:0] Write_pulse bit field: writing 1'b1 to each bit will trigger SW_INT&lt;0-3&gt; respectively to CM4.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_IPC_RFS</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>APPSS_IPC_RFS</description>
          <fields>
            <field>
              <name>command</name>
              <description>[31:4] Used by software to communicate commands and response. It is 7-bits per interrupt.</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>host_intr</name>
              <description>[3:0] Write_pulse bit field: Writing 1'b1 to each bit will trigger HOST_INTR &lt;0-3&gt; respectively to CM3.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CAPEVNT_SEL</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>APPSS_CAPEVNT_SEL</description>
          <fields>
            <field>
              <name>src1</name>
              <description>[23:12] 5:0 : Selects the interrupt to route to RTI Capture event 1        6'd0  : MUXED_FECSS_CHIRPTIMER_CHIRP_START_AND_CHIRP_END        6'd1  : MUXED_FECSS_CHIRPTIMER_BURST_START_AND_BURST_END        6'd2  : FECSS_CHIRPTIMER_FRAME_END        6'd3  : FECSS_FRAMETIMER_FRAME_START        6'd4  : MUXED_FECSS_CHIRP_AVAIL_IRQ_AND_ADC_VALID_START_AND_SYNC_IN        6'd5  : MUXED_FECSS_FRAME_START_OFFSET_INTR_TIME1        6'd6  : FECSS_FRAME_START_OFFSET_INTR_TIME2        6'd7  : FECSS_FRAME_START_OFFSET_INTR_TIME3        6'd8  : FECSS_BURST_START_OFFSET_TIME 11:6: Selects the interrupt to route to WDT Capture event 1        6'd0  : MUXED_FECSS_CHIRPTIMER_CHIRP_START_AND_CHIRP_END        6'd1  : MUXED_FECSS_CHIRPTIMER_BURST_START_AND_BURST_END        6'd2  : FECSS_CHIRPTIMER_FRAME_END        6'd3  : FECSS_FRAMETIMER_FRAME_START        6'd4  : MUXED_FECSS_CHIRP_AVAIL_IRQ_AND_ADC_VALID_START_AND_SYNC_IN        6'd5  : MUXED_FECSS_FRAME_START_OFFSET_INTR_TIME1         6'd6  : FECSS_FRAME_START_OFFSET_INTR_TIME2        6'd7  : FECSS_FRAME_START_OFFSET_INTR_TIME3        6'd8  : FECSS_BURST_START_OFFSET_TIME        6'd9  : FECSS_IPC_RFS_FEC_INTR 1</description>
              <bitWidth>12</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>src0</name>
              <description>[11:0] 5:0 : Selects the interrupt to route to RTI Capture event 0        6'd0  : FECSS_FRAME_START_OFFSET_INTR_TIME3        6'd1  : FECSS_FRAME_START_OFFSET_INTR_TIME2        6'd2  : FECSS_FRAME_START_OFFSET_INTR_TIME1        6'd3  : FECSS_FRAMETIMER_FRAME_START        6'd4  : LIN_INT1        6'd5  : LIN_INT0        6'd6  : MCAN_FE_INT7        6'd7  : MCAN_FE_INT1        6'd8  : MCAN_FE_INT2        6'd9  : MCAN_FE_INT3        6'd10 : MCAN_FE_INT4        6'd11 : MCAN_FE_INT5        6'd12 : MCAN_FE_INT6        6'd13 : MCAN_INT0        6'd14 : MCAN_INT1        6'd15 : SYNC_IN 11:6: Selects the interrupt to route to WDT Capture event 0        6'd0  : MUXED_FECSS_CHIRPTIMER_CHIRP_START_AND_CHIRP_END        6'd1  : MUXED_FECSS_CHIRPTIMER_BURST_START_AND_BURST_END        6'd2  : FECSS_CHIRPTIMER_FRAME_END        6'd3  : FECSS_FRAMETIMER_FRAME_START        6'd4  : MUXED_FECSS_CHIRP_AVAIL_IRQ_AND_ADC_VALID_START_AND_SYNC_IN        6'd5  : MUXED_FECSS_FRAME_START_OFFSET_INTR_TIME1        6'd6  : FECSS_FRAME_START_OFFSET_INTR_TIME2        6'd7  : FECSS_FRAME_START_OFFSET_INTR_TIME3        6'd8  : FECSS_BURST_START_OFFSET_TIME        6'd9  : FECSS_IPC_RFS_FEC_INTR 0</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_DMA_REQ_SEL</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>APPSS_DMA_REQ_SEL</description>
          <fields>
            <field>
              <name>select</name>
              <description>[31:0] Reserved for R&amp;D. Do not touch</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_DMA1_REQ_SEL</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>APPSS_DMA1_REQ_SEL</description>
          <fields>
            <field>
              <name>select</name>
              <description>[31:0] Reserved for R&amp;D. Do not touch</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_IRQ_REQ_SEL</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>APPSS_IRQ_REQ_SEL</description>
          <fields>
            <field>
              <name>select</name>
              <description>[31:0] Configuration register APPSS_IRQ_REQ_SEL is used to select the interrupt for CM4. Below are the bit definitions  0    :   0x0 =  Map 0th IRQ from compare block of RTI (RTI1) to IRQ43      :   0x1 =  Map 0th IRQ from compare block of WDT (RTI2) to IRQ43 1    :   0x0 =  Map 1st IRQ from compare block of RTI (RTI1) to IRQ44      :   0x1 =  Map 1st IRQ from compare block of WDT (RTI2) to IRQ44 2    :   0x0 =  Map 2nd IRQ from compare block of RTI (RTI1) to IRQ45      :   0x1 =  Map 2nd IRQ from compare block of WDT (RTI2) to IRQ45 3    :   0x0 =  Map 3rd IRQ from compare block of RTI (RTI1) to IRQ46      :   0x1 =  Map 3rd IRQ from compare block of WDT (RTI2) to IRQ46 5:4  :  0x00 =  Selects time base IRQ from RTI (RTI1) to IRQ47       :  0x01 =  Selects time base IRQ from WDT (RTI2) to IRQ47      :  0x10 =  Selects gpadc_ifm_done to IRQ47      :  0x11 =  Reserved 7:6  :  0x00 =  Selects capture event 0 of RTI to IRQ48 and  Selects capture event 1 of IRQ from RTI to IRQ49      :  0x01 =  Selects capture event 0 of WDT to IRQ48 and  Selects capture event 1 of IRQ from WDT to IRQ49      :  0x10 =  Selects PWM Interrupt 0 to IRQ48 and PWM Interrupt 1 to IRQ49      :  0x11 =  Selects OVL_REQ of RTI (RTI1) to IRQ48 and OVL_REQ of WDT to IRQ49 8    :   0x0 =  mcan_fe_int7 connected to IRQ29      :   0x1 =  debugss txdata_available interrupt connected to IRQ29. 9    :   0x0 =  Used for TPPCA trigger. Dma read interrupt of SPI1/A channel routed to TPCCA (DMA) trigger 62      :   0x1 =  Used for TPPCA trigger. dma read interrupt of SPI2/B channel routed to TPCCA (DMA) trigger 62 10   :   0x0 =  Used for TPPCA trigger. dma write interrupt of SPI1/A channel routed to TPCCA (DMA) trigger 63      :   0x1 =  Used for TPPCA trigger. dma write interrupt of SPI2/B channel routed to TPCCA (DMA) trigger 63 11   :   0x0 = Timing Engine Chirptimer_chirp_start to IRQ30      :   0x1 = Timing Engine Chirptimer_chirp_end to IRQ30 12   :   0x0 = Timing Engine Chirptimer_burst_start to IRQ31      :   0x1 = Timing Engine Chirptimer_burst_end to IRQ31 14:13:  0x00 = chirp_avail_irq to IRQ34      :  0x01 = adc_valid_start to IRQ34      :  0x10 = SYNC_in to IRQ34 15   :   Reserved 16   :   0x0 = mcan_fe_int6 connected to IRQ28      :   0x1 = spi2_int_req connected to IRQ28 18:17:  0x00 = DCC_DONE  Interrupt connected to IRQ12      :  0x01 = CM4 LBIST Interrupt connected to IRQ12      :  0x10 = CM3 LBIST Interrupt connected to IRQ12      :  0x11 = TOP PBIST Interrupt connected to IRQ12 20:19:  0x00 = I2C_INT   Interrupt connected to IRQ19      :  0x01 = CM4 LBIST Interrupt connected to IRQ19      :  0x10 = CM3 LBIST Interrupt connected to IRQ19      :  0x11 = TOP PBIST Interrupt connected to IRQ19 21   :   0x0 = APPSS_TPCC1_ERRAGG  connected to IRQ16      :   0x1 = CTI_TRIGOUT2  connected to IRQ16 22   :   0x0 = APPSS_TPCC2_ERRAGG connected to IRQ18      :   0x1 = CTI_TRIGOUT3  connected to IRQ18</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SPI_TRIG_SRC</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>APPSS_SPI_TRIG_SRC</description>
          <fields>
            <field>
              <name>trig_spib</name>
              <description>[26:16] RESERVED</description>
              <bitWidth>11</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>trig_spia</name>
              <description>[1:0] RESERVED</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM1A_MEM_INIT</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>APPSS_RAM1A_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of APPSS_RAM1 partion0  bank. Value in each row is initialized to 0x0C_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM1A_MEM_INIT_DONE</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>APPSS_RAM1A_MEM_INIT_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of APPSS_RAM1 partion0  banks is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM1A_MEM_INIT_STATUS</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>APPSS_RAM1A_MEM_INIT_STATUS</description>
          <fields>
            <field>
              <name>mem_status</name>
              <description>[0:0] 1'b0: No initialization is happening for APPSS_RAM1 partion0  bank 1'b1: Initialization is in progress for APPSS_RAM1 partion0  bank</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM2A_MEM_INIT</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>APPSS_RAM2A_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of APPSS_RAM2 partion0  bank. Value in each row is initialized to 0x0C_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM2A_MEM_INIT_DONE</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>APPSS_RAM2A_MEM_INIT_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of APPSS_RAM2 partion0  banks is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM2A_MEM_INIT_STATUS</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>APPSS_RAM2A_MEM_INIT_STATUS</description>
          <fields>
            <field>
              <name>mem_status</name>
              <description>[0:0] 1'b0: No initialization is happening for APPSS_RAM2 partion0  bank 1'b1: Initialization is in progress for APPSS_RAM2 partion0  bank</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM3A_MEM_INIT</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>APPSS_RAM3A_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of APPSS_RAM3 partion0  bank. Value in each row is initialized to 0x0C_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM3A_MEM_INIT_DONE</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>APPSS_RAM3A_MEM_INIT_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of APPSS_RAM3 partion0  banks is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM3A_MEM_INIT_STATUS</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>APPSS_RAM3A_MEM_INIT_STATUS</description>
          <fields>
            <field>
              <name>mem_status</name>
              <description>[0:0] 1'b0: No initialization is happening for APPSS_RAM3 partion0  bank 1'b1: Initialization is in progress for APPSS_RAM3 partion0  bank</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM0_MEM_INIT</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM0_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initializing the HWASS Shared RAM parition0. Value in each row is initialized to 0x0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM0_MEM_INIT_DONE</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM0_MEM_INIT_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once intialization of HWASS Shared RAM parition0 is finished. Writing '1' would clear the bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM0_MEM_INIT_STATUS</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM0_MEM_INIT_STATUS</description>
          <fields>
            <field>
              <name>mem_status</name>
              <description>[0:0] 1'b0: No initialization is happening for HWASS Shared RAM parition0 1'b1: Initialization is in progress for HWASS Shared RAM parition0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM1_MEM_INIT</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM1_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initializing the HWASS Shared RAM parition1. Value in each row is initialized to 0x0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM1_MEM_INIT_DONE</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM1_MEM_INIT_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once intialization of HWASS Shared RAM parition1 is finished. Writing '1' would clear the bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM1_MEM_INIT_STATUS</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM1_MEM_INIT_STATUS</description>
          <fields>
            <field>
              <name>mem_status</name>
              <description>[0:0] 1'b0: No initialization is happening for HWASS Shared RAM parition1 1'b1: Initialization is in progress for HWASS Shared RAM parition1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_MEMINIT_START</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_MEMINIT_START</description>
          <fields>
            <field>
              <name>tpcc_b_meminit_start</name>
              <description>[16:16] Write_pulse bit field: Writing 1'b1 will start initializing the TPCCB</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_meminit_start</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initializing the TPCCA</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_MEMINIT_DONE</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_MEMINIT_DONE</description>
          <fields>
            <field>
              <name>tpcc_b_meminit_done</name>
              <description>[16:16] This field will be high once intialization of TPCCB is finished. Writing '1' would clear the bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_meminit_done</name>
              <description>[0:0] This field will be high once intialization of TPCCA is finished. Writing '1' would clear the bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_MEMINIT_STATUS</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_MEMINIT_STATUS</description>
          <fields>
            <field>
              <name>tpcc_b_meminit_status</name>
              <description>[16:16] 1'b0: No initialization is happening for TPCCA 1'b1: Initialization is in progress for TPCCB</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_meminit_status</name>
              <description>[0:0] 1'b0: No initialization is happening for TPCCA 1'b1: Initialization is in progress for TPCCB</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SPIA_CFG</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>APPSS_SPIA_CFG</description>
          <fields>
            <field>
              <name>spia_iodft_en</name>
              <description>[28:28] 1: Enable loop back of MOSI to MISO - Master mode Enable loop back of MISO to MOSI - Slave mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>spia_int_trig_polarity</name>
              <description>[24:24] SPIA trigger source polarity select.   0    - Polarity 0,   1   -Polarity 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>spia_trig_gate_en</name>
              <description>[16:16] When set the TRIGGER   s are un-gated only when chip-select is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>spia_cs_trigsrc_en</name>
              <description>[8:8] MIBSPIB CS Trigger SRC enable    1   : Use CS as trigger source</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>spiasync2sen</name>
              <description>[0:0] Donot touch the field. Used as Tie-off for IP-config.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SPIB_CFG</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>APPSS_SPIB_CFG</description>
          <fields>
            <field>
              <name>spib_iodft_en</name>
              <description>[28:28] 1: Enable loop back of MOSI to MISO - Master mode Enable loop back of MISO to MOSI - Slave mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>spib_int_trig_polarity</name>
              <description>[24:24] SPIB trigger source polarity select.   0    - Polarity 0,   1   -Polarity 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>spib_trig_gate_en</name>
              <description>[16:16] When set the TRIGGER   s are un-gated only when chip-select is active</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>spib_cs_trigsrc_en</name>
              <description>[8:8] MIBSPIB CS Trigger SRC enable    1   : Use CS as trigger source</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>spibsync2sen</name>
              <description>[0:0] Donot touch the field. Used as Tie-off for IP-config.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_EPWM_CFG</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>APPSS_EPWM_CFG</description>
          <fields>
            <field>
              <name>epwm_config</name>
              <description>[31:0] bit0: SW syncin for EPWM1  bit1: SW syncin for EPWM2 bit2: SW syncin for EPWM3 bit8:9 :  select bits for EPWM1       '0' :  external syncin       '1' :  reserved       '2' :  sw syncin         '3' :  reserved bit10:11 : select bits for EPWM2       '0' :  external syncin       '1' :  chained from EPWM1       '2' :  sw syncin         '3' :  reserved bit12:13 : select bits for EPWM3       '0' :  external syncin       '1' :  chained from EPWM2       '2' :  sw syncin         '3' :  reserved bit24:TBCLKEN for EPWM1 bit25:TBCLKEN for EPWM2 bit26:TBCLKEN for EPWM3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>RESERVED</description>
          <fields>
            <field>
              <name>gio_config</name>
              <description>[31:0] bit0 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT0 to IRQ bit1 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT1to IRQ bit2: writing '1'  will slect negedge for pulse generation of GIO_PAD_INT2 to IRQ bit3 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT3 to IRQ bit4 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT4 to IRQ bit5 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT5 to IRQ bit6 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT6 to IRQ bit7 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT7 to IRQ</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MCAN_FE_AND_LIN_INTR_SEL</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>APPSS_MCAN_FE_AND_LIN_INTR_SEL</description>
          <fields>
            <field>
              <name>lin_intr_sel</name>
              <description>[3:3] Writing a value would select the LIN interrupt in combination with HW_SYNC_IN and CAN filter events  for Frame timer 0 : 0th   interrupt bit is selected 1 : 1st interrupt bit is selected</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>mcan_fe_sel</name>
              <description>[2:0] Writing a value 'N' would select Nth filter interrupt combination with SYNC_IN(IO) for triggering timing engine Example: writing 3'd&lt;1-7&gt; selects MCAN_FE_INT&lt;1-7&gt; respectively</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MCANA_INT_CLR</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>APPSS_MCANA_INT_CLR</description>
          <fields>
            <field>
              <name>mcan_int_clr</name>
              <description>[31:0] Interrupt Clear for 32 MCANSS TX DMA interrupts. Writing 1'b1 to bit&lt;0-31&gt; clears interrupt source &lt;0-31&gt; respectively in MCANA</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MCANA_INT_MASK</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>APPSS_MCANA_INT_MASK</description>
          <fields>
            <field>
              <name>mcan_int_mask</name>
              <description>[31:0] Interrupt Mask for 32 MCANSS TX DMA interrupts. Writing 1'b1 to bit&lt;0-31&gt; masks interrupt source &lt;0-31&gt; respectively in MCANA</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MCANA_INT_STAT</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>APPSS_MCANA_INT_STAT</description>
          <fields>
            <field>
              <name>mcan_int_status</name>
              <description>[31:0] Interrupt status for 32 MCANSS TX DMA interrupts. 1'b1 in bit&lt;0-31&gt; gives pending status for interrupt &lt;0-31&gt; respectively in MCANA</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CM4_GLOBAL_CONFIG</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>APPSS_CM4_GLOBAL_CONFIG</description>
          <fields>
            <field>
              <name>teinit</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED1</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>RESERVED1</description>
          <fields>
            <field>
              <name>res</name>
              <description>[31:0] reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CM4_ROM_ECLIPSE</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>APPSS_CM4_ROM_ECLIPSE</description>
          <fields>
            <field>
              <name>memswap_wait</name>
              <description>[10:8] writing 3'b111 ensures ROM-Eclipsing happens only after CPU sys reset. Orelse it will be a immediate change.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>memswap</name>
              <description>[2:0] writing '111' ensures eclipsing of CPU_ROM immediately if memswap_wait is not set. If memswap_wait is set then ROM is eclipsed after CPU sys reset assertion.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CM4_STATUS_REG</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>APPSS_CM4_STATUS_REG</description>
          <fields>
            <field>
              <name>memswap</name>
              <description>[0:0] reading 1: confirms ROM is Eclipsed from with RAM for the CPU.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_AHB_CTRL</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>APPSS_AHB_CTRL</description>
          <fields>
            <field>
              <name>cpu0_ahb_init</name>
              <description>[0:0] Ti internal Register. Modifying this register is not recommended Signal decides whehter ahb interface is enabled or not.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING0</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>ESM_GATING0</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_0 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_1        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_7</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING1</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>ESM_GATING1</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_8 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_9        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_15</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING2</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>ESM_GATING2</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_16 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_17        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_23</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING3</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>ESM_GATING3</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_24 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_25        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_31</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING4</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>ESM_GATING4</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_0 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_1        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_7</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING5</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>ESM_GATING5</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_8 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_9        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_15</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING6</name>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <description>ESM_GATING6</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_16 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_17        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_23</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESM_GATING7</name>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <description>ESM_GATING7</description>
          <fields>
            <field>
              <name>esm_gating</name>
              <description>[31:0] bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_24 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_25        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_31</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CM4_HALT</name>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <description>APPSS_CM4_HALT</description>
          <fields>
            <field>
              <name>halt</name>
              <description>[2:0] RESERVED</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CM4_EVENT</name>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <description>APPSS_CM4_EVENT</description>
          <fields>
            <field>
              <name>cpu0_event</name>
              <description>[2:0] Reserved Register for R  &amp; D</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPIA_IO_CFG</name>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <description>SPIA_IO_CFG</description>
          <fields>
            <field>
              <name>miso_oen_by_cs</name>
              <description>[16:16] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cs_pol</name>
              <description>[8:8] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>cs_deact</name>
              <description>[0:0] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPIB_IO_CFG</name>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <description>SPIB_IO_CFG</description>
          <fields>
            <field>
              <name>miso_oen_by_cs</name>
              <description>[16:16] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cs_pol</name>
              <description>[8:8] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>cs_deact</name>
              <description>[0:0] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_HOST_IRQ</name>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <description>SPI_HOST_IRQ</description>
          <fields>
            <field>
              <name>host_irq</name>
              <description>[0:0] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TPTC_DBS_CONFIG</name>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <description>TPTC_DBS_CONFIG</description>
          <fields>
            <field>
              <name>tptc_b1</name>
              <description>[13:12] Default burst size tieoff value for TPTC_B1</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tptc_b0</name>
              <description>[9:8] Default burst size tieoff value for TPTC_B0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tptc_a1</name>
              <description>[5:4] Default burst size tieoff value for TPTC_A1</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[1:0] Default burst size tieoff value for TPTC_A0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TPCC_PARITY_CTRL</name>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <description>TPCC_PARITY_CTRL</description>
          <fields>
            <field>
              <name>tpcc_b_parity_err_clr</name>
              <description>[20:20] Write pulse bit field: parity clear bit. Writing 1'b1 will clear the tpcc_b_parity_addr</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>tpcc_a_parity_err_clr</name>
              <description>[16:16] Write pulse bit field: parity clear bit. Writing 1'b1 will clear the tpcc_a_parity_addr</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_b_parity_testen</name>
              <description>[12:12] parity test enable for tpcc b</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tpcc_b_parity_en</name>
              <description>[8:8] parity en for tpcc b</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_a_parity_testen</name>
              <description>[4:4] parity test enable for tpcc a</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_a_parity_en</name>
              <description>[0:0] writing 1'b1 enables parity for TPCC_A</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TPCC_PARITY_STATUS</name>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <description>TPCC_PARITY_STATUS</description>
          <fields>
            <field>
              <name>tpcc_b_parity_addr</name>
              <description>[23:16] address where parity error happened for tpccb</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_parity_addr</name>
              <description>[7:0] address where parity error happened for tpcca</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_DBG_ACK_CTL0</name>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <description>APPSS_DBG_ACK_CTL0</description>
          <fields>
            <field>
              <name>lin</name>
              <description>[28:28] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>scib</name>
              <description>[24:24] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>scia</name>
              <description>[20:20] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>i2c</name>
              <description>[16:16] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>mcrc</name>
              <description>[12:12] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>wdt</name>
              <description>[8:8] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rti</name>
              <description>[4:4] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>can</name>
              <description>[0:0] Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUGSS_CSETB_FLUSH</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>DEBUGSS_CSETB_FLUSH</description>
          <fields>
            <field>
              <name>CSETB_FULL</name>
              <description>[10:10] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CSETB_ACQ_COMPLETE</name>
              <description>[9:9] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CSETB_FLUSHINACK</name>
              <description>[8:8] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CSETB_FLUSHIN</name>
              <description>[0:0] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CPSW_CONTROL</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>CPSW_CONTROL</description>
          <fields>
            <field>
              <name>rgmii1_id_mode</name>
              <description>[16:16] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>rmii_ref_clk_oe_n</name>
              <description>[8:8] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>port1_mode_sel</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_ERRAGG_MASK0</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>APPSS_ERRAGG_MASK0</description>
          <fields>
            <field>
              <name>app_ahb_slv_rd</name>
              <description>[25:25] Mask Interrupt from AHB slaves to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>app_ahb_slv_wr</name>
              <description>[24:24] Mask Interrupt from AHB slaves to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>fec_erroragg</name>
              <description>[23:23] Mask Interrupt from FEC_ERRORAGG to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>app_shared_mem</name>
              <description>[22:22] Mask Interrupt from APP_SHARED_MEM to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>app_ahb</name>
              <description>[21:21] Mask Interrupt from APP_AHB to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_mpu</name>
              <description>[20:20] Mask Interrupt from APP_MPU to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>top_efuse_ctrl_wr</name>
              <description>[19:19] Mask Interrupt from TOP_EFUSE_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>top_efuse_ctrl_rd</name>
              <description>[18:18] Mask Interrupt from FEC_ERRORAGG to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>top_prcm_wr</name>
              <description>[17:17] Mask Interrupt from TOP_PRCM to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>top_prcm_rd</name>
              <description>[16:16] Mask Interrupt from TOP_PRCM to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>frame_timer_wr</name>
              <description>[15:15] Mask Interrupt from FRAME_TIMER to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>frame_timer_rd</name>
              <description>[14:14] Mask Interrupt from FRAME_TIMER to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>apll_ctrl_wr</name>
              <description>[13:13] Mask Interrupt from APLL_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>apll_ctrl_rd</name>
              <description>[12:12] Mask Interrupt from APLL_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>topss_ctrl_wr</name>
              <description>[11:11] Mask Interrupt from TOPSS_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>topss_ctrl_rd</name>
              <description>[10:10] Mask Interrupt from TOPSS_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>plldig_ctrl_wr</name>
              <description>[9:9] Mask Interrupt from PLLDIG_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>plldig_ctrl_rd</name>
              <description>[8:8] Mask Interrupt from PLLDIG_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>adcbuff_ctrl_wr</name>
              <description>[7:7] Mask Interrupt from ADCBUFF_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>adcbuff_ctrl_rd</name>
              <description>[6:6] Mask Interrupt from ADCBUFF_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_idalloc_wr</name>
              <description>[5:5] Mask Interrupt from APP_IDALLOC to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_idalloc_rd</name>
              <description>[4:4] Mask Interrupt from APP_IDALLOC to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>app_ctrl_wr</name>
              <description>[3:3] Mask Interrupt from APP_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_ctrl_rd</name>
              <description>[2:2] Mask Interrupt from APP_CTRL to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>app_rcm_wr</name>
              <description>[1:1] Mask Interrupt from APP_RCM to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_rcm_rd</name>
              <description>[0:0] Mask Interrupt from APP_RCM to aggregated Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_ERRAGG_STATUS0</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>APPSS_ERRAGG_STATUS0</description>
          <fields>
            <field>
              <name>app_ahb_slv_rd</name>
              <description>[25:25] Status of Interrupt from AHB_SLAVE Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>app_ahb_slv_wr</name>
              <description>[24:24] Status of Interrupt from AHB_SLAVE Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>fec_erroragg</name>
              <description>[23:23] Status of Interrupt from FEC_ERRORAGG Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>app_shared_mem_err</name>
              <description>[22:22] Status of Interrupt from APP_SHARED_MEM Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>app_ahb_wr</name>
              <description>[21:21] Status of Interrupt from APP_AHB Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_mpu_rd</name>
              <description>[20:20] Status of Interrupt from APP_MPU Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>top_efuse_ctrl_wr</name>
              <description>[19:19] Status of Interrupt from TOP_EFUSE_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>top_efuse_ctrl_rd</name>
              <description>[18:18] Status of Interrupt from TOP_EFUSE_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>top_prcm_wr</name>
              <description>[17:17] Status of Interrupt from TOP_PRCM Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>top_prcm_rd</name>
              <description>[16:16] Status of Interrupt from TOP_PRCM Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>frame_timer_wr</name>
              <description>[15:15] Status of Interrupt from FRAME_TIMER Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>frame_timer_rd</name>
              <description>[14:14] Status of Interrupt from FRAME_TIMER Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>apll_ctrl_wr</name>
              <description>[13:13] Status of Interrupt from APLL_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>apll_ctrl_rd</name>
              <description>[12:12] Status of Interrupt from APLL_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>topss_ctrl_wr</name>
              <description>[11:11] Status of Interrupt from TOPSS_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>topss_ctrl_rd</name>
              <description>[10:10] Status of Interrupt from TOPSS_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>plldig_ctrl_wr</name>
              <description>[9:9] Status of Interrupt from PLLDIG_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>plldig_ctrl_rd</name>
              <description>[8:8] Status of Interrupt from PLLDIG_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>adcbuff_ctrl_wr</name>
              <description>[7:7] Status of Interrupt from ADCBUFF_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>adcbuff_ctrl_rd</name>
              <description>[6:6] Status of Interrupt from ADCBUFF_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_idalloc_wr</name>
              <description>[5:5] Status of Interrupt from APP_IDALLOC Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_idalloc_rd</name>
              <description>[4:4] Status of Interrupt from APP_IDALLOC Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>app_ctrl_wr</name>
              <description>[3:3] Status of Interrupt from APP_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_ctrl_rd</name>
              <description>[2:2] Status of Interrupt from APP_CTRL Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>app_rcm_wr</name>
              <description>[1:1] Status of Interrupt from APP_RCM Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_rcm_rd</name>
              <description>[0:0] Status of Interrupt from APP_RCM Set only if Interupt is unmasked in APPSS_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_A_ERRAGG_MASK</name>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_A_ERRAGG_MASK</description>
          <fields>
            <field>
              <name>tptc_a1_read_access_error</name>
              <description>[26:26] Mask Error from TPTC_A1 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_a0_read_access_error</name>
              <description>[25:25] Mask Error from TPTC_A0 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_a_read_access_error</name>
              <description>[24:24] Mask Error from TPCC_A to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_a1_write_access_error</name>
              <description>[18:18] Mask Error from TPTC_A1 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>tptc_a0_write_access_error</name>
              <description>[17:17] Mask Error from TPTC_A0 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_a_write_access_error</name>
              <description>[16:16] Mask Error from TPCC_A to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_par_err</name>
              <description>[4:4] Mask Error from TPCC_A to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_a1_err</name>
              <description>[3:3] Mask Error from TPTC_A1 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_a0_err</name>
              <description>[2:2] Mask Error from TPTC_A0 to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_mpint</name>
              <description>[1:1] Mask Error from TPCC_A to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_errint</name>
              <description>[0:0] Mask Error from TPCC_A to aggregated Error TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_A_ERRAGG_STATUS</name>
          <addressOffset>0x194</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_A_ERRAGG_STATUS</description>
          <fields>
            <field>
              <name>tptc_a1_read_access_error</name>
              <description>[26:26] Status of Error from TPTC_A1.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_a0_read_access_error</name>
              <description>[25:25] Status of Error from TPTC_A0.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_a_read_access_error</name>
              <description>[24:24] Status of Error from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_a1_write_access_error</name>
              <description>[18:18] Status of Error from TPTC_A1.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>tptc_a0_write_access_error</name>
              <description>[17:17] Status of Error from TPTC_A0.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_a_write_access_error</name>
              <description>[16:16] Status of Error from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_par_err</name>
              <description>[4:4] Status of Error from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_a1_err</name>
              <description>[3:3] Status of Error from TPTC_A1.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_a0_err</name>
              <description>[2:2] Status of Error from TPTC_A0.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_mpint</name>
              <description>[1:1] Status of Error from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_errint</name>
              <description>[0:0] Status of Error from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_A_ERRAGG_STATUS_RAW</name>
          <addressOffset>0x198</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_A_ERRAGG_STATUS_RAW</description>
          <fields>
            <field>
              <name>tptc_a1_read_access_error</name>
              <description>[26:26] Raw Status of Error from TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_a0_read_access_error</name>
              <description>[25:25] Raw Status of Error from TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_a_read_access_error</name>
              <description>[24:24] Raw Status of Error from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_a1_write_access_error</name>
              <description>[18:18] Raw Status of Error from TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>tptc_a0_write_access_error</name>
              <description>[17:17] Raw Status of Error from TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_a_write_access_error</name>
              <description>[16:16] Raw Status of Error from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_par_err</name>
              <description>[4:4] Raw Status of Error from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_a1_err</name>
              <description>[3:3] Raw Status of Error from TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_a0_err</name>
              <description>[2:2] Raw Status of Error from TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_mpint</name>
              <description>[1:1] Raw Status of Error from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_errint</name>
              <description>[0:0] Raw Status of Error from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_A_INTAGG_MASK</name>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_A_INTAGG_MASK</description>
          <fields>
            <field>
              <name>tptc_a1</name>
              <description>[17:17] Mask Interrupt from TPTC A1 to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[16:16] Mask Interrupt from TPTC A0 to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int7</name>
              <description>[8:8] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int6</name>
              <description>[7:7] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int5</name>
              <description>[6:6] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int4</name>
              <description>[5:5] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int3</name>
              <description>[4:4] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int2</name>
              <description>[3:3] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int1</name>
              <description>[2:2] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int0</name>
              <description>[1:1] Mask Interrupt from TPCC A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_intg</name>
              <description>[0:0] Mask Interrupt from TPCC_A to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_WPH</name>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <description>HW_SPARE_WPH</description>
          <fields>
            <field>
              <name>tptc_a1</name>
              <description>[17:17] Status of Interrupt from TPTC A1.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[16:16] Status of Interrupt from TPTC A0.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int7</name>
              <description>[8:8] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int6</name>
              <description>[7:7] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int5</name>
              <description>[6:6] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int4</name>
              <description>[5:5] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int3</name>
              <description>[4:4] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int2</name>
              <description>[3:3] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int1</name>
              <description>[2:2] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int0</name>
              <description>[1:1] Status of Interrupt from TPCC A  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_intg</name>
              <description>[0:0] Status of Interrupt from TPCC_A.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_A_INTAGG_STATUS_RAW</name>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_A_INTAGG_STATUS_RAW</description>
          <fields>
            <field>
              <name>tptc_a1</name>
              <description>[17:17] Raw Status of Interrupt from TPTC A1.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_a0</name>
              <description>[16:16] Raw Status of Interrupt from TPTC A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int7</name>
              <description>[8:8] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int6</name>
              <description>[7:7] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int5</name>
              <description>[6:6] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int4</name>
              <description>[5:5] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int3</name>
              <description>[4:4] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int2</name>
              <description>[3:3] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int1</name>
              <description>[2:2] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_a_int0</name>
              <description>[1:1] Raw Status of Interrupt from TPCC A.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_a_intg</name>
              <description>[0:0] Raw Status of Interrupt from TPCC_A.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_ERRAGG_MASK</name>
          <addressOffset>0x274</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_ERRAGG_MASK</description>
          <fields>
            <field>
              <name>tptc_b1_read_access_error</name>
              <description>[26:26] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_b0_read_access_error</name>
              <description>[25:25] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_b_read_access_error</name>
              <description>[24:24] Mask Error from TPCC_B to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_b0_write_access_error</name>
              <description>[17:17] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_b_write_access_error</name>
              <description>[16:16] Mask Error from TPCC_B to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tptc_b1_write_access_error</name>
              <description>[14:14] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>tpcc_b_par_err</name>
              <description>[4:4] Mask Error from TPCC_B to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_b1_err</name>
              <description>[3:3] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_b0_err</name>
              <description>[2:2] Mask Error from TPTC_B0 to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_mpint</name>
              <description>[1:1] Mask Error from TPCC_B to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_errint</name>
              <description>[0:0] Mask Error from TPCC_B to aggregated Error TPCC_B_ERRAGG 1 : Error is Masked 0 : Error is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_ERRAGG_STATUS</name>
          <addressOffset>0x278</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_ERRAGG_STATUS</description>
          <fields>
            <field>
              <name>tptc_b1_read_access_error</name>
              <description>[26:26] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_b0_read_access_error</name>
              <description>[25:25] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_b_read_access_error</name>
              <description>[24:24] Status of Error from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_b0_write_access_error</name>
              <description>[17:17] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_b_write_access_error</name>
              <description>[16:16] Status of Error from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tptc_b1_write_access_error</name>
              <description>[14:14] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>tpcc_b_par_err</name>
              <description>[4:4] Status of Error from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_b1_err</name>
              <description>[3:3] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_b0_err</name>
              <description>[2:2] Status of Error from TPTC_B0.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_mpint</name>
              <description>[1:1] Status of Error from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_errint</name>
              <description>[0:0] Status of Error from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_ERRAGG_MASK Wrie 0x1 to clear this Error.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_ERRAGG_STATUS_RAW</name>
          <addressOffset>0x27C</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_ERRAGG_STATUS_RAW</description>
          <fields>
            <field>
              <name>tptc_b1_read_access_error</name>
              <description>[26:26] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>tptc_b0_read_access_error</name>
              <description>[25:25] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>tpcc_b_read_access_error</name>
              <description>[24:24] Raw Status of Error from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_b0_write_access_error</name>
              <description>[17:17] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tpcc_b_write_access_error</name>
              <description>[16:16] Raw Status of Error from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tptc_b1_write_access_error</name>
              <description>[14:14] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>tpcc_b_par_err</name>
              <description>[4:4] Raw Status of Error from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tptc_b1_err</name>
              <description>[3:3] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tptc_b0_err</name>
              <description>[2:2] Raw Status of Error from TPTC_B0.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_mpint</name>
              <description>[1:1] Raw Status of Error from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_errint</name>
              <description>[0:0] Raw Status of Error from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_B_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_INTAGG_MASK</name>
          <addressOffset>0x2EC</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_INTAGG_MASK</description>
          <fields>
            <field>
              <name>tptc_b1</name>
              <description>[17:17] Mask Interrupt from TPTC A0 to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_b0</name>
              <description>[16:16] Mask Interrupt from TPTC A0 to aggregated Interrupt TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int7</name>
              <description>[8:8] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int6</name>
              <description>[7:7] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int5</name>
              <description>[6:6] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int4</name>
              <description>[5:5] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int3</name>
              <description>[4:4] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int2</name>
              <description>[3:3] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int1</name>
              <description>[2:2] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int0</name>
              <description>[1:1] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_intg</name>
              <description>[0:0] Mask Interrupt from TPCC_B to aggregated Interrupt TPCC_B_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_INTAGG_STATUS</name>
          <addressOffset>0x2F0</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_INTAGG_STATUS</description>
          <fields>
            <field>
              <name>tptc_b1</name>
              <description>[17:17] Status of Interrupt from TPTC A0.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_b0</name>
              <description>[16:16] Status of Interrupt from TPTC A0.  Set only if Interupt is unmasked in TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int7</name>
              <description>[8:8] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int6</name>
              <description>[7:7] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int5</name>
              <description>[6:6] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int4</name>
              <description>[5:5] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int3</name>
              <description>[4:4] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int2</name>
              <description>[3:3] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int1</name>
              <description>[2:2] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int0</name>
              <description>[1:1] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_intg</name>
              <description>[0:0] Status of Interrupt from TPCC_B.  Set only if Interupt is unmasked in TPCC_B_INTAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPCC_B_INTAGG_STATUS_RAW</name>
          <addressOffset>0x2F4</addressOffset>
          <size>32</size>
          <description>APPSS_TPCC_B_INTAGG_STATUS_RAW</description>
          <fields>
            <field>
              <name>tptc_b1</name>
              <description>[17:17] Raw Status of Interrupt from TPTC A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>tptc_b0</name>
              <description>[16:16] Raw Status of Interrupt from TPTC A0.  Set irrespective if the Interupt is masked or unmasked in TPCC_A_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int7</name>
              <description>[8:8] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int6</name>
              <description>[7:7] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int5</name>
              <description>[6:6] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int4</name>
              <description>[5:5] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int3</name>
              <description>[4:4] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int2</name>
              <description>[3:3] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int1</name>
              <description>[2:2] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tpcc_b_int0</name>
              <description>[1:1] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tpcc_b_intg</name>
              <description>[0:0] Raw Status of Interrupt from TPCC_B.  Set irrespective if the Interupt is masked or unmasked in TPCC_C_INTAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MPU_ERRAGG_MASK</name>
          <addressOffset>0x2F8</addressOffset>
          <size>32</size>
          <description>APPSS_MPU_ERRAGG_MASK</description>
          <fields>
            <field>
              <name>fecss_mpu</name>
              <description>[16:16] Mask Interrupt from FECSS MPU to aggregated Interrupt MPU_PROT_AGG_ERR 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>appss_mpu</name>
              <description>[0:0] Mask Interrupt from APSS MPU to aggregated Interrupt MPU_PROT_AGG_ERR 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MPU_ERRAGG_STATUS</name>
          <addressOffset>0x2FC</addressOffset>
          <size>32</size>
          <description>APPSS_MPU_ERRAGG_STATUS</description>
          <fields>
            <field>
              <name>fecss_mpu</name>
              <description>[16:16] Status of Interrupt from FECSS MPU.  Set only if Interupt is unmasked in APPSS_MPU_ERRAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>appss_mpu</name>
              <description>[0:0] Status of Interrupt from APSS MPU.  Set only if Interupt is unmasked in APPSS_MPU_ERRAGG_MASK Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MPU_ERRAGG_STATUS_RAW</name>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <description>APPSS_MPU_ERRAGG_STATUS_RAW</description>
          <fields>
            <field>
              <name>fecss_mpu</name>
              <description>[16:16] Raw Status of FECSS MPU PROT ERR.  Set irrespective if the Interupt is masked or unmasked in APPSS_MPU_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>appss_mpu</name>
              <description>[0:0] Raw Status of Interrupt from APSS MPU PROT ERR  Set irrespective if the Interupt is masked or unmasked in APPSS_MPU_ERRAGG_MASK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_QSPI_CONFIG</name>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <description>APPSS_QSPI_CONFIG</description>
          <fields>
            <field>
              <name>clk_loopback</name>
              <description>[8:8] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ext_clk</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_CTI_TRIG_SEL</name>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <description>APPSS_CTI_TRIG_SEL</description>
          <fields>
            <field>
              <name>trig8_sel</name>
              <description>[7:0] Used for selecting the trigger source for 8th trigger of CTI</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_DBGSS_CTI_TRIG_SEL</name>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <description>APPSS_DBGSS_CTI_TRIG_SEL</description>
          <fields>
            <field>
              <name>trig3</name>
              <description>[23:16] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>trig2</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>trig1</name>
              <description>[7:0] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG0</name>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG0</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG1</name>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG1</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG2</name>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG2</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG3</name>
          <addressOffset>0x31C</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG3</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG4</name>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG4</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG5</name>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG5</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG6</name>
          <addressOffset>0x328</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG6</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_BOOT_INFO_REG7</name>
          <addressOffset>0x32C</addressOffset>
          <size>32</size>
          <description>APPSS_BOOT_INFO_REG7</description>
          <fields>
            <field>
              <name>config</name>
              <description>[31:0] Reserved Register for Software use</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPTC_ECCAGGR_CLK_CNTRL</name>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <description>APPSS_TPTC_ECCAGGR_CLK_CNTRL</description>
          <fields>
            <field>
              <name>tptc_B0</name>
              <description>[2:2] Writing  '0' will gate the clock to TPTC_B0-FIFO during  ECC-AGGR interaction(fault injection)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tptc_A1</name>
              <description>[1:1] Writing  '0' will gate the clock to TPTC_A1-FIFO during  ECC-AGGR interaction(fault injection)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>tptc_A0</name>
              <description>[0:0] Writing  '0' will gate the clock to TPTC_A0-FIFO during  ECC-AGGR interaction(fault injection)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPTC_BOUNDARY_CFG</name>
          <addressOffset>0x334</addressOffset>
          <size>32</size>
          <description>APPSS_TPTC_BOUNDARY_CFG</description>
          <fields>
            <field>
              <name>tptc_b1_size</name>
              <description>[29:24] 6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC_B1 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB</description>
              <bitWidth>6</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_b0_size</name>
              <description>[21:16] 6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC_B0 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB</description>
              <bitWidth>6</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tptc_a1_size</name>
              <description>[13:8] 6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC_A1 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB</description>
              <bitWidth>6</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tptc_a0_size</name>
              <description>[5:0] 6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC_A0 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_TPTC_XID_REORDER_CFG</name>
          <addressOffset>0x338</addressOffset>
          <size>32</size>
          <description>APPSS_TPTC_XID_REORDER_CFG</description>
          <fields>
            <field>
              <name>tptc_b1_disable</name>
              <description>[24:24] writing 1'b1 will disable the CID-RID-SID reodering feature for TPTC_B1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>tptc_b0_disable</name>
              <description>[16:16] writing 1'b1 will disable the CID-RID-SID reodering feature for TPTC_B0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>tptc_a1_disable</name>
              <description>[8:8] writing 1'b1 will disable the CID-RID-SID reodering feature for TPTC_A1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>tptc_a0_disable</name>
              <description>[0:0] writing 1'b1 will disable the CID-RID-SID reodering feature for TPTC_A0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_Sync_FE_CTRL</name>
          <addressOffset>0x33C</addressOffset>
          <size>32</size>
          <description>HW_Sync_FE_CTRL</description>
          <fields>
            <field>
              <name>fe2_sel</name>
              <description>[8:8] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>fe1_sel</name>
              <description>[0:0] RESERVED</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_REG1</name>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <description>HW_SPARE_REG1</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:0] Resereved for R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_REG2</name>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <description>HW_SPARE_REG2</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:0] Resereved for R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_REG3</name>
          <addressOffset>0x348</addressOffset>
          <size>32</size>
          <description>HW_SPARE_REG3</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:0] Resereved for R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>NERROR_MASK</name>
          <addressOffset>0x34C</addressOffset>
          <size>32</size>
          <description>NERROR_MASK</description>
          <fields>
            <field>
              <name>mask</name>
              <description>[0:0] writing 1'b1 will mask the Nerror propagation to pad Writing 1'b0 will unmask the Nerror propagation to pad</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW0</name>
          <addressOffset>0x350</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW0</description>
          <fields>
            <field>
              <name>hw_spare_rw0</name>
              <description>[31:0] Bit 0:  Writing 1'b1 will mask the hwa local ram agg serr propagation to ESM             Writing 1'b0 will unmask the hwa local ram agg serr propagation to ESM Bit 1 :  Writing 1'b1 will mask the hwa local ram agg uerr propagation to ESM              Writing 1'b0 will unmask the hwa local ram agg uerr propagation to ESM    Bit 2 to 31  Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW1</name>
          <addressOffset>0x354</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW1</description>
          <fields>
            <field>
              <name>hw_spare_rw1</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW2</name>
          <addressOffset>0x358</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW2</description>
          <fields>
            <field>
              <name>hw_spare_rw2</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW3</name>
          <addressOffset>0x35C</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW3</description>
          <fields>
            <field>
              <name>hw_spare_rw3</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW4</name>
          <addressOffset>0x360</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW4</description>
          <fields>
            <field>
              <name>hw_spare_rw4</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW5</name>
          <addressOffset>0x364</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW5</description>
          <fields>
            <field>
              <name>hw_spare_rw5</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RO0</name>
          <addressOffset>0x368</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RO0</description>
          <fields>
            <field>
              <name>hw_spare_ro0</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RO1</name>
          <addressOffset>0x36C</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RO1</description>
          <fields>
            <field>
              <name>hw_spare_ro1</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RO2</name>
          <addressOffset>0x370</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RO2</description>
          <fields>
            <field>
              <name>hw_spare_ro2</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RO3</name>
          <addressOffset>0x374</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RO3</description>
          <fields>
            <field>
              <name>hw_spare_ro3</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_REC</name>
          <addressOffset>0x378</addressOffset>
          <size>32</size>
          <description>HW_SPARE_REC</description>
          <fields>
            <field>
              <name>hw_spare_rec31</name>
              <description>[31:31] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec30</name>
              <description>[30:30] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec29</name>
              <description>[29:29] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec28</name>
              <description>[28:28] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec27</name>
              <description>[27:27] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec26</name>
              <description>[26:26] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec25</name>
              <description>[25:25] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec24</name>
              <description>[24:24] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec23</name>
              <description>[23:23] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec22</name>
              <description>[22:22] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec21</name>
              <description>[21:21] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec20</name>
              <description>[20:20] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec19</name>
              <description>[19:19] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec18</name>
              <description>[18:18] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec17</name>
              <description>[17:17] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec16</name>
              <description>[16:16] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec15</name>
              <description>[15:15] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec14</name>
              <description>[14:14] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec13</name>
              <description>[13:13] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec12</name>
              <description>[12:12] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec11</name>
              <description>[11:11] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec10</name>
              <description>[10:10] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec9</name>
              <description>[9:9] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec8</name>
              <description>[8:8] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec7</name>
              <description>[7:7] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec6</name>
              <description>[6:6] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec5</name>
              <description>[5:5] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec4</name>
              <description>[4:4] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec3</name>
              <description>[3:3] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec2</name>
              <description>[2:2] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec1</name>
              <description>[1:1] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>hw_spare_rec0</name>
              <description>[0:0] Reserved for HW R&amp;D</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CTRL</name>
          <addressOffset>0x37C</addressOffset>
          <size>32</size>
          <description>APP_CTRL</description>
          <fields>
            <field>
              <name>ecc_disable_2k_ram</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WIC_CTRL</name>
          <addressOffset>0x380</addressOffset>
          <size>32</size>
          <description>WIC_CTRL</description>
          <fields>
            <field>
              <name>wicmask</name>
              <description>[31:0] 1 =&gt; The corresponding interrupt is Masked (interrupt will not be generated) 0 =&gt; The corresponding interrupt is UnMasked (interrupt will  be generated) 0 : ESM_HI_IRQ (NMI)  1 : ESM_LO_IRQ (INT#1)  2 : FECSS_FRAMETIMER_FRAME_START (INT#33)  3 : MUXED_FECSS_FRAME_START_OFFSET_INTR_TIME1 (INT#35)   4 : FECSS_FRAME_START_OFFSET_INTR_TIME2 (INT#36)   5 : FECSS_FRAME_START_OFFSET_INTR_TIME3 (INT#37)   6 : FECSS_BURST_START_OFFSET_TIME(INT#38)   7 : MUXED_APPSS_RTI1_RTI2_INT_REQ0(INT#43)   8 : MUXED_APPSS_RTI1_RTI2_INT_REQ1(INT#44)   9 : MUXED_APPSS_RTI1_RTI2_INT_REQ2(INT#45)   10 : MUXED_APPSS_RTI1_RTI2_INT_REQ3(INT#46)   11 : APPSS_SPI_IRQ_REQ(INT#14)  12 : SPI2_IRQ_REQ (part of INT#28)   13 : APPSS_LIN_INT0 (INT#10)  14 : APPSS_LIN_INT0 (INT#11)   15 : APPSS_MCAN_INT0(INT#21)  16 : APPSS_MCAN_INT1(INT#22)   17 : APPSS_SCI2_INT0(INT#62)   18 : APPSS_SCI2_INT0(INT#63)  19 : APPSS_SPI_IRQ_REQ(INT#14)  20 : SPI2_IRQ_REQ (part of INT#28)   21 : APPSS_LIN_INT0 (INT#10)  22 : APPSS_LIN_INT0 (INT#11)   23 : APPSS_MCAN_INT0(INT#21)  24 : APPSS_MCAN_INT1(INT#22)   25 : APPSS_SCI2_INT0(INT#62)   26 : APPSS_SCI2_INT0(INT#63)  27 : SYNC_IN 28  : RADAR_DEVICESLEEP_WAKEUP_INTERRUPT 29 to 31 : Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WIC_STAT_CLR</name>
          <addressOffset>0x384</addressOffset>
          <size>32</size>
          <description>WIC_STAT_CLR</description>
          <fields>
            <field>
              <name>wicstatclr</name>
              <description>[31:0] 1 =&gt; Writing 1 to this bit, will clear the WIC_STAT status register of the corresponding bit. Self-clearing 0 =&gt; Writing 0 to this bit, leavesWIC_STAT status register unchanged for the corresponding bit.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WIC_STAT</name>
          <addressOffset>0x388</addressOffset>
          <size>32</size>
          <description>WIC_STAT</description>
          <fields>
            <field>
              <name>wicstat</name>
              <description>[31:0] 1 =&gt; Interrupt bit set. The interupt bit is sticky bit. Should be cleared using WIC_STAT_CLR register or subsystem reset. 0 -&gt; Interrupt bit not set. Sticky bits keep their value when they changed to logical 1 and is cleared only by writing 1 to WIC_STAT_CLR register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WICEN</name>
          <addressOffset>0x38C</addressOffset>
          <size>32</size>
          <description>WICEN</description>
          <fields>
            <field>
              <name>wicen</name>
              <description>[0:0] 1 :&gt; Wakeup Interrupt Controller (WIC) of CM4 is Enabled 0 :&gt; Disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FORCEFCLKACTIVE</name>
          <addressOffset>0x390</addressOffset>
          <size>32</size>
          <description>FORCEFCLKACTIVE</description>
          <fields>
            <field>
              <name>forcefclkactive</name>
              <description>[0:0] 1 :&gt; Forces FCLK to be active and inhibits CM4 Entering CPU DeepSleep mode 0 :&gt; Allows gating of FCLK based on CPU DEEPSLEEP entry mechanism</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FECSS_CLK_GATE</name>
          <addressOffset>0x394</addressOffset>
          <size>32</size>
          <description>FECSS_CLK_GATE</description>
          <fields>
            <field>
              <name>grp2</name>
              <description>[5:3] Multibit: Writing 3'b111 will gate ADC_CLK going to DFE and Timing Engine</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>grp1</name>
              <description>[2:0] Multibit: Writing 3'b111 will gate FEC_SYS_CLK and FECSS peripheral clocks except DFE and Timing Engine</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SHARED_MEM_CLK_GATE</name>
          <addressOffset>0x398</addressOffset>
          <size>32</size>
          <description>APPSS_SHARED_MEM_CLK_GATE</description>
          <fields>
            <field>
              <name>mem1_app_enable</name>
              <description>[3:3] 1'b1 : Enable APP CLK ICG for second 128KB of shared mem 1'b0 : Disable APP CLK ICG for second 128 KB of shared mem</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>mem1_hwa_enable</name>
              <description>[2:2] 1'b1 : Enable HWA CLK ICG for second 128 KB of shared mem 1'b0 : Disable HWA CLK ICG for second 128 KB of shared mem</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>mem0_app_enable</name>
              <description>[1:1] 1'b1 : Enable APP CLK ICG for first 128KB of shared mem 1'b0 : Disable APP CLK ICG for first 128 KB of shared mem</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>mem0_hwa_enable</name>
              <description>[0:0] 1'b1 : Enable HWA CLK ICG for first 128 KB of shared mem 1'b0 : Disable HWA CLK ICG for first 128 KB of shared mem</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_MEM_INIT_SLICE_SEL</name>
          <addressOffset>0x39C</addressOffset>
          <size>32</size>
          <description>APPSS_MEM_INIT_SLICE_SEL</description>
          <fields>
            <field>
              <name>cfg_bank2</name>
              <description>[4:3] Selects the APPSS RAM2 partition that needs to be initialized. More than 1 partitions can be selected for mem_init. Bit#0 : Selects RAM_2A (16KB) Bit#1 : Selects RAM_2B (112KB) 1 =&gt; RAM partition selected for mem_init operation 0 =&gt; RAM partition not selected for mem_init operation.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>cfg_bank1</name>
              <description>[2:0] Selects the APPSS RAM1 partition that needs to be initialized. More than 1 partitions can be selected for mem_init. Bit#0 : Selects RAM_1A (64KB) Bit#1 : Selects RAM_1B (64KB) Bit#2 : Selects RAM_1C (128KB) 1 =&gt; RAM selected for mem_init operation 0 =&gt; RAM not selected for mem_init operation.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_QSPI_CHAR_EXT_CLK_EN</name>
          <addressOffset>0x3A0</addressOffset>
          <size>32</size>
          <description>APPSS_QSPI_CHAR_EXT_CLK_EN</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[0:0] Selects the QSPI system clock. Only for DFT purposes. This should not be changed for functional operation. 0 =&gt; QSPI_CLK from APPSS RCM 1 =&gt; SPI1_CLK from APPSS RCM</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_QSPI_EXT_CLK_EN</name>
          <addressOffset>0x3A4</addressOffset>
          <size>32</size>
          <description>APPSS_QSPI_EXT_CLK_EN</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[0:0] Selects the QSPI interface clock. This register bit is used only for AC CHAR operation and not for functional usage.  0 =&gt; default QSPI IP clock return from PAD 1 =&gt; SPI1 IF CLK. (McSPI IF clock).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI1_SMART_IDLE</name>
          <addressOffset>0x3A8</addressOffset>
          <size>32</size>
          <description>SPI1_SMART_IDLE</description>
          <fields>
            <field>
              <name>wakeup_raw</name>
              <description>[5:5] Description: RAW status of CLKSTOP_WAKEUP from SPI1 module. This should be interpreted along with SPI1_SMART_IDLE_WAKEUP SPI1_SMART_IDLE_WAKEUP_RAW, SPI1_SMART_IDLE_WAKEUP         0    ,                0             =&gt; WAKEUP is LOW from IP,  and No pending WAKEUP status         0    ,                1             =&gt; WAKEUP is LOW from IP,  and    pending WAKEUP status         1    ,                0             =&gt; WAKEUP is HIGH from IP, and No pending WAKEUP status         1    ,                1             =&gt; WAKEUP is HIGH from IP, and    pending WAKEUP status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ack_raw</name>
              <description>[4:4] Description: RAW status of CLKSTOP_ACK from McSPI (SPI1) module. This should be interpreted along with SPI1_SMART_IDLE_ACK SPI1_SMART_IDLE_ACK_RAW, SPI1_SMART_IDLE_ACK         0    ,                0             =&gt; ACK is LOW from IP,  and No pending ACK status         0    ,                1             =&gt; ACK is LOW from IP,  and    pending ACK status         1    ,                0             =&gt; ACK is HIGH from IP, and No pending ACK status         1    ,                1             =&gt; ACK is HIGH from IP, and    pending ACK status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>wakeup</name>
              <description>[3:3] This register reflects the Wakeup Status of the IP. The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>auto_en</name>
              <description>[2:2] It is used to select smart idle mode.  1 =&gt; Automatic mode - Entry to smart idle mode  Is manual by setting SMART_IDLE_ENABLE = 1.  When the wakeup  Signal  is asserted (based on the activity), The clkstop_req is pulled low automatically. 0 =&gt; Manual mode - The entry and exit to  Smart Idle is user controlled based on polling  SMART_IDLE_ACK and SMART_IDLE_WAKEUP</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ack</name>
              <description>[1:1] 1 =&gt; SPI1 in smart idle mode  0 =&gt; SPI1 not in smart idle mode The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>enable</name>
              <description>[0:0] 1 =&gt; Smart IDLE mode enabled. When set, request the clock gating of SPI1 module. 0 =&gt; Disable Smart IDLE mode for SPI1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI2_SMART_IDLE</name>
          <addressOffset>0x3AC</addressOffset>
          <size>32</size>
          <description>SPI2_SMART_IDLE</description>
          <fields>
            <field>
              <name>wakeup_raw</name>
              <description>[5:5] Description: RAW status of CLKSTOP_WAKEUP from SPI2 module. This should be interpreted along with SPI2_SMART_IDLE_WAKEUP SPI2_SMART_IDLE_WAKEUP_RAW, SPI2_SMART_IDLE_WAKEUP         0    ,                0             =&gt; WAKEUP is LOW from IP,  and No pending WAKEUP status         0    ,                1             =&gt; WAKEUP is LOW from IP,  and    pending WAKEUP status         1    ,                0             =&gt; WAKEUP is HIGH from IP, and No pending WAKEUP status         1    ,                1             =&gt; WAKEUP is HIGH from IP, and    pending WAKEUP status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ack_raw</name>
              <description>[4:4] Description: RAW status of CLKSTOP_ACK from McSPI (SPI2) module. This should be interpreted along with SPI2_SMART_IDLE_ACK SPI2_SMART_IDLE_ACK_RAW, SPI2_SMART_IDLE_ACK         0    ,                0             =&gt; ACK is LOW from IP,  and No pending ACK status         0    ,                1             =&gt; ACK is LOW from IP,  and    pending ACK status         1    ,                0             =&gt; ACK is HIGH from IP, and No pending ACK status         1    ,                1             =&gt; ACK is HIGH from IP, and    pending ACK status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>wakeup</name>
              <description>[3:3] This register reflects the Wakeup Status of the IP. The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>auto_en</name>
              <description>[2:2] It is used to select smart idle mode.  1 =&gt; Automatic mode - In this mode, entry to  smart idle mode is manual by setting  SMART_IDLE_ENABLE = 1. When the wakeup  Signal  is asserted (based on the activity),  The clkstop_req is pulled low automatically. 0 =&gt; Manual mode - The entry and exit to  Smart Idle is user controlled based on polling  SMART_IDLE_ACK and SMART_IDLE_WAKEUP</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ack</name>
              <description>[1:1] 1 =&gt; SPI2 in smart idle mode  0 =&gt; SPI2 not in smart idle mode The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>enable</name>
              <description>[0:0] 1 =&gt; Smart IDLE mode enabled. When set, request the clock gating of SPI2 module. 0 =&gt; Disable Smart IDLE mode for SPI2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CAN_SMART_IDLE</name>
          <addressOffset>0x3B0</addressOffset>
          <size>32</size>
          <description>CAN_SMART_IDLE</description>
          <fields>
            <field>
              <name>wakeup_raw</name>
              <description>[5:5] Description: RAW status of CLKSTOP_WAKEUP from CANFD module. This should be interpreted along with CAN_SMART_IDLE_WAKEUP CAN_SMART_IDLE_WAKEUP_RAW, CAN_SMART_IDLE_WAKEUP         0    ,                0             =&gt; WAKEUP is LOW from IP,  and No pending WAKEUP status         0    ,                1             =&gt; WAKEUP is LOW from IP,  and    pending WAKEUP status         1    ,                0             =&gt; WAKEUP is HIGH from IP, and No pending WAKEUP status         1    ,                1             =&gt; WAKEUP is HIGH from IP, and    pending WAKEUP status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ack_raw</name>
              <description>[4:4] Description: RAW status of CLKSTOP_ACK from CANFD module. This should be interpreted along with CAN_SMART_IDLE_ACK CAN_SMART_IDLE_ACK_RAW, CAN_SMART_IDLE_ACK         0    ,                0             =&gt; ACK is LOW from IP,  and No pending ACK status         0    ,                1             =&gt; ACK is LOW from IP,  and    pending ACK status         1    ,                0             =&gt; ACK is HIGH from IP, and No pending ACK status         1    ,                1             =&gt; ACK is HIGH from IP, and    pending ACK status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>wakeup</name>
              <description>[3:3] This register reflects the Wakeup Status of the IP. The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>auto_en</name>
              <description>[2:2] It is used to select smart idle mode.  1 =&gt; Automatic mode - In this mode, entry to  smart idle mode is manual by setting  SMART_IDLE_ENABLE = 1. When the wakeup  Signal  is asserted (based on the activity),  The clkstop_req is pulled low automatically. 0 =&gt; Manual mode - The entry and exit to  Smart Idle is user controlled based on polling  SMART_IDLE_ACK and SMART_IDLE_WAKEUP</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ack</name>
              <description>[1:1] 1 =&gt; CAN in smart idle mode0 =&gt; CAN not in smart idle mode The bit is sticky bit and the user is should clear once the status is read by write-1-to-clear.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>enable</name>
              <description>[0:0] 1 =&gt; Smart IDLE mode enabled. When set,  Request the clock gating of CAN module.0 =&gt; Disable Smart IDLE mode for CAN</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LIN_SMART_IDLE</name>
          <addressOffset>0x3B4</addressOffset>
          <size>32</size>
          <description>LIN_SMART_IDLE</description>
          <fields>
            <field>
              <name>ack</name>
              <description>[1:1] 1 =&gt; LIN in smart idle mode0 =&gt; LIN not in smart idle mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>enable</name>
              <description>[0:0] 1 =&gt; Smart IDLE mode enabled. When set,  Request the clock gating of LIN module.0 =&gt; Disable Smart IDLE mode for LIN</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_CLK_GATE</name>
          <addressOffset>0x3B8</addressOffset>
          <size>32</size>
          <description>HWASS_CLK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] RESERVED</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CFG_TIMEOUT_PCR3</name>
          <addressOffset>0x3BC</addressOffset>
          <size>32</size>
          <description>CFG_TIMEOUT_PCR3</description>
          <fields>
            <field>
              <name>value</name>
              <description>[31:0] PCR3Timeout Value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED0</name>
          <addressOffset>0x3C0</addressOffset>
          <size>32</size>
          <description>RESERVED0</description>
          <fields>
            <field>
              <name>reserved</name>
              <description>[15:0] RESERVED - POR Reset</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_ERRAGG_MASK1</name>
          <addressOffset>0x3C4</addressOffset>
          <size>32</size>
          <description>APPSS_ERRAGG_MASK1</description>
          <fields>
            <field>
              <name>cluster12_power_down_access_err</name>
              <description>[11:11] Mask Interrupt from cluster12_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>cluster11_power_down_access_err</name>
              <description>[10:10] Mask Interrupt from cluster11_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>cluster10_power_down_access_err</name>
              <description>[9:9] Mask Interrupt from cluster10_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>cluster9_power_down_access_err</name>
              <description>[8:8] Mask Interrupt from cluster9_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>cluster8_power_down_access_err</name>
              <description>[7:7] Mask Interrupt from cluster8_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>cluster7_power_down_access_err</name>
              <description>[6:6] Mask Interrupt from cluster7_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>cluster6_power_down_access_err</name>
              <description>[5:5] Mask Interrupt from cluster6_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>cluster5_power_down_access_err</name>
              <description>[4:4] Mask Interrupt from cluster5_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>cluster4_power_down_access_err</name>
              <description>[3:3] Mask Interrupt from cluster4_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>cluster3_power_down_access_err</name>
              <description>[2:2] Mask Interrupt from cluster3_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>cluster2_power_down_access_err</name>
              <description>[1:1] Mask Interrupt from cluster2_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>cluster1_power_down_access_err</name>
              <description>[0:0] Mask Interrupt from cluster1_power_down_access_err Interrupt APPSS_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_ERRAGG_STATUS1</name>
          <addressOffset>0x3C8</addressOffset>
          <size>32</size>
          <description>APPSS_ERRAGG_STATUS1</description>
          <fields>
            <field>
              <name>cluster12_power_down_access_err</name>
              <description>[11:11] Status of Interrupt from cluster12_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>cluster11_power_down_access_err</name>
              <description>[10:10] Status of Interrupt from cluster11_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>cluster10_power_down_access_err</name>
              <description>[9:9] Status of Interrupt from cluster10_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>cluster9_power_down_access_err</name>
              <description>[8:8] Status of Interrupt from cluster9_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>cluster8_power_down_access_err</name>
              <description>[7:7] Status of Interrupt from cluster8_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>cluster7_power_down_access_err</name>
              <description>[6:6] Status of Interrupt from cluster7_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>cluster6_power_down_access_err</name>
              <description>[5:5] Status of Interrupt from cluster6_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>cluster5_power_down_access_err</name>
              <description>[4:4] Status of Interrupt from cluster5_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>cluster4_power_down_access_err</name>
              <description>[3:3] Status of Interrupt from cluster4_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>cluster3_power_down_access_err</name>
              <description>[2:2] Status of Interrupt from cluster3_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>cluster2_power_down_access_err</name>
              <description>[1:1] Status of Interrupt from cluster2_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>cluster1_power_down_access_err</name>
              <description>[0:0] Status of Interrupt from cluster1_power_down_access_err Set only if Interupt is unmasked in APPSS_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FORCEHCLKACTIVE</name>
          <addressOffset>0x3CC</addressOffset>
          <size>32</size>
          <description>FORCEHCLKACTIVE</description>
          <fields>
            <field>
              <name>forcehclkactive</name>
              <description>[0:0] 1 :&gt; Gate HCLK 0 :&gt; UnGate HCLK</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM1_OWRITE_ERR</name>
          <addressOffset>0x3D0</addressOffset>
          <size>32</size>
          <description>APPSS_RAM1_OWRITE_ERR</description>
          <fields>
            <field>
              <name>err</name>
              <description>[0:0] RAM1 ahb2sram write error - Sticky Bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM1_OWRITE_ERR_ADDR</name>
          <addressOffset>0x3D4</addressOffset>
          <size>32</size>
          <description>APPSS_RAM1_OWRITE_ERR_ADDR</description>
          <fields>
            <field>
              <name>address</name>
              <description>[31:0] RAM1 ahb2sram write error Address</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM2_OWRITE_ERR</name>
          <addressOffset>0x3D8</addressOffset>
          <size>32</size>
          <description>APPSS_RAM2_OWRITE_ERR</description>
          <fields>
            <field>
              <name>err</name>
              <description>[0:0] RAM2 ahb2sram write error - Sticky Bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM2_OWRITE_ERR_ADDR</name>
          <addressOffset>0x3DC</addressOffset>
          <size>32</size>
          <description>APPSS_RAM2_OWRITE_ERR_ADDR</description>
          <fields>
            <field>
              <name>address</name>
              <description>[31:0] RAM2 ahb2sram write error Address</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM3_OWRITE_ERR</name>
          <addressOffset>0x3E0</addressOffset>
          <size>32</size>
          <description>APPSS_RAM3_OWRITE_ERR</description>
          <fields>
            <field>
              <name>err</name>
              <description>[0:0] RAM3 ahb2sram write error - Sticky Bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_RAM3_OWRITE_ERR_ADDR</name>
          <addressOffset>0x3E4</addressOffset>
          <size>32</size>
          <description>APPSS_RAM3_OWRITE_ERR_ADDR</description>
          <fields>
            <field>
              <name>address</name>
              <description>[31:0] RAM3 ahb2sram write error Address</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SHRD_RAM_OWRITE_ERR</name>
          <addressOffset>0x3E8</addressOffset>
          <size>32</size>
          <description>APPSS_SHRD_RAM_OWRITE_ERR</description>
          <fields>
            <field>
              <name>err</name>
              <description>[0:0] SHARED RAM ahb2sram write error - Sticky Bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_SHRD_RAM_OWRITE_ERR_ADDR</name>
          <addressOffset>0x3EC</addressOffset>
          <size>32</size>
          <description>APPSS_SHRD_RAM_OWRITE_ERR_ADDR</description>
          <fields>
            <field>
              <name>address</name>
              <description>[31:0] SHARED RAM ahb2sram write error Address</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_OWRITE_ERR_AGGR</name>
          <addressOffset>0x3F0</addressOffset>
          <size>32</size>
          <description>APPSS_OWRITE_ERR_AGGR</description>
          <fields>
            <field>
              <name>err</name>
              <description>[0:0] Ored  error of all write error signals -Sticky Bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW6</name>
          <addressOffset>0x3F4</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW6</description>
          <fields>
            <field>
              <name>hw_spare_rw6</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW7</name>
          <addressOffset>0x3F8</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW7</description>
          <fields>
            <field>
              <name>hw_spare_rw7</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW8</name>
          <addressOffset>0x3FC</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW8</description>
          <fields>
            <field>
              <name>hw_spare_rw8</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_RW9</name>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <description>HW_SPARE_RW9</description>
          <fields>
            <field>
              <name>hw_spare_rw9</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_SPARE_HWA_RW0</name>
          <addressOffset>0x404</addressOffset>
          <size>32</size>
          <description>HW_SPARE_HWA_RW0</description>
          <fields>
            <field>
              <name>hw_spare_hwa_rw0</name>
              <description>[31:0] Reserved for HW R&amp;D</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_10_0000</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_HWA_ADCBUF_CTRL</name>
      <baseAddress>0x56080000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>4148</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HW_REG0</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>HW_REG0</description>
          <fields>
            <field>
              <name>HW_REG0</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFCFG1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>ADCBUFCFG1</description>
          <fields>
            <field>
              <name>ADCBUF_RST</name>
              <description>[17:17] Writing 1'b1  : Resets ADC BUFFER  Control logic. Writing 1'b0:  Releases the reset for ADC BUFFER control logic.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>ADCBUFPIPOSEL</name>
              <description>[16:16] TI Internal Feature Ping-pong select value from ADC Buffer Packing logic. Even in SW override mode, this register will indicate the ping-pong select signal generated from the ADC Buffer Packing logic and not the override value.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ADCBUFCONTSTOPPL</name>
              <description>[15:15] Stop Pulse for Continuous mode. The data capture will stop once this register is set. Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode : Its a wspecial access type, write to this field will generate a pulse</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>ADCBUFCONTSTRTPL</name>
              <description>[14:14] Start Pulse for Continuous mode. The data capture will start from Address 0 once this register is set. All the other configurations like Enable, Sample Count are expected to be programmed before this pulse. Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode : Its a wspecial access type, write to this field will generate a pulse</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCBUFCONTMODEEN</name>
              <description>[13:13] Continuous mode enable for ADC Buffer.  This is set when a fixed number of samples have to be stored in Ping/Pong and not depend on Chirp time-lines (Eg: Analog Lab characterization to stream out continuous data from DFE). Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCBUFPIPOOVRVAL</name>
              <description>[11:11] TI Internal Feature SW override value for ADC Buffer Ping Pong select</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>ADCBUFPIPOOVRCNT</name>
              <description>[10:10] TI Internal Feature Override control for ADC Buffer Ping Pong select</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>RX3EN</name>
              <description>[9:9] TI Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>RX2EN</name>
              <description>[8:8] Enable for Rx2 write</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RX1EN</name>
              <description>[7:7] Enable for Rx1 write</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RX0EN</name>
              <description>[6:6] Enable for Rx0 write</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ADCBUFPIPOSELINV</name>
              <description>[1:1] TI Internal Feature Inversion control for ADC Buffer Ping-pong select. By default ADC Buffer write starts with Pong write. By setting this bit to 1, it will start from Ping write after reset.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ADCBUFWRSOURCE</name>
              <description>[0:0] TI Internal Feature Write source for ADC Buffer. 0 --&gt; DFE, 1 --&gt; HWASS Interconnect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFCFG1_EXTD</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>ADCBUFCFG1_EXTD</description>
          <fields>
            <field>
              <name>ADCBUFINTGENDLY</name>
              <description>[31:0] TI Intenal Feature. No of clocks to delay the ping-pong switch and interrupt generation w.r.t ADC Valid fall pulse.  This will enable dithering the DSP activity for successive ping-pong switch cycles. This will not delay the ping pong toggle which will happen immediately after ADC Valid fall.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFCFG2</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>ADCBUFCFG2</description>
          <fields>
            <field>
              <name>ADCBUFADDRX1</name>
              <description>[26:16] 128 bit Address offset to be added to the internal address pointer for Rx1 writes in Non-interleaved mode.</description>
              <bitWidth>11</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ADCBUFADDRX0</name>
              <description>[10:0] 128 bit Address offset to be added to the internal address pointer for Rx0 writes in Non-interleaved mode.</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFCFG3</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>ADCBUFCFG3</description>
          <fields>
            <field>
              <name>ADCBUFADDRX3</name>
              <description>[26:16] TI   Reserved</description>
              <bitWidth>11</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ADCBUFADDRX2</name>
              <description>[10:0] 128 bit Address offset to be added to the internal address pointer for Rx2 writes in Non-interleaved mode.</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFCFG4</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>ADCBUFCFG4</description>
          <fields>
            <field>
              <name>ADCBUFPNGSELTGLDIS</name>
              <description>[30:30] TI Internal Feature 0 --&gt; Delay Interrupt Gen and Ping/Pong toggle together based on cfg_interrupt_gen_delay,  1 --&gt; Delay only Interrupt Gen based on cfg_interrupt_gen_delay. But toggle Ping/Pong select signal as soon as the write is complete.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>ADCBUFNUMCHRPPING</name>
              <description>[20:16] Number of chirps to be stored in Ping / Pong buffer. This register should be programmed with one less than the actual number needed.</description>
              <bitWidth>5</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ADCBUFSAMPCNT</name>
              <description>[15:0] No of samples to store in each Ping and Pong register in continuous mode of ADC Buffer. In real only mode this refers to the number of real samples and in complex mode, this refers to number of complex samples.  This refers to the number of samples per channel. This counter increments once for every new sample from DFE (as long as 1 or more channels are enabled). The max allowed value varies depending on other configurations (No of channels enabled and real/complex data). Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFINTGENDITHERDLY</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>ADCBUFINTGENDITHERDLY</description>
          <fields>
            <field>
              <name>ADCBUFINTGENDITHERDLY</name>
              <description>[31:0] TI Internal Feature. Additional dithering delay added on the Chirp Avilable interrupt</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PING_MEM_INIT</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PING_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of ADCBUFF PING Memory . Value in each row is initialized to 0x00_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PING_MEM_DONE</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PING_MEM_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of ADCBUFF PING Memory is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PING_MEM_STATUS</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PING_MEM_STATUS</description>
          <fields>
            <field>
              <name>mem_init_status</name>
              <description>[0:0] 1'b0: No initialization is happening for ADCBUF PING Memory 1'b1: Initialization is in progress for ADCBUF PING Memory</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PONG_MEM_INIT</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PONG_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of ADCBUF PONG Memory . Value in each row is initialized to 0x00_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PONG_MEM_DONE</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PONG_MEM_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of ADCBUF PONG Memory is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ADCBUFF_PONG_MEM_STATUS</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>ADCBUFF_PONG_MEM_STATUS</description>
          <fields>
            <field>
              <name>mem_init_status</name>
              <description>[0:0] 1'b0: No initialization is happening for ADCBUF PONG Memory 1'b1: Initialization is in progress for ADCBUF PONG Memory</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_MEM_INIT</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_MEM_INIT</description>
          <fields>
            <field>
              <name>mem_init</name>
              <description>[0:0] Write_pulse bit field: Writing 1'b1 will start initialization of HWASS 160 kb shared memory bank . Value in each row is initialized to 0x00_0000_0000</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_MEM_DONE</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_MEM_DONE</description>
          <fields>
            <field>
              <name>mem_init_done</name>
              <description>[0:0] This field will be high once initialization of HWASS 160 kb shared memory bank is finished. Writing '1' would clear the bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_MEM_STATUS</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_MEM_STATUS</description>
          <fields>
            <field>
              <name>mem_init_status</name>
              <description>[0:0] 1'b0: No initialization is happening for HWASS 160kb shared memory bank 1'b1: Initialization is in progress for HWASS 160kb shared  memory bank</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_ACCESS_ERROR_MASK</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_ACCESS_ERROR_MASK</description>
          <fields>
            <field>
              <name>shmem_access_error_mask</name>
              <description>[0:0] When 1'b1 : shared ram access error is masked. 1'b0 : shared ram access error is not masked.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_ACCESS_ERROR_STATUS</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_ACCESS_ERROR_STATUS</description>
          <fields>
            <field>
              <name>shmem_access_error_status</name>
              <description>[0:0] This field will be high whenever the invalid address of shared memory is accessed and the interrupt is not masked.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_SHRD_RAM_ACCESS_ERROR_STATUS_RAW</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>HWASS_SHRD_RAM_ACCESS_ERROR_STATUS_RAW</description>
          <fields>
            <field>
              <name>shmem_access_errror_status_raw</name>
              <description>[0:0] Indicates the shared ram access error (raw status). Set irrespective of HWASS_SHRD_RAM_ACCESS_ERROR_MASK bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_EDMA_CLOCK_GATE_CONTROL</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>HWASS_EDMA_CLOCK_GATE_CONTROL</description>
          <fields>
            <field>
              <name>hwa_edma_clock_gating_en</name>
              <description>[2:0] Writing 3'b111 will gate the clock to HWA EDMA.Writing 3'b000 will ungate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HWASS_RAM_160KB_CLOCK_GATE</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>HWASS_RAM_160KB_CLOCK_GATE</description>
          <fields>
            <field>
              <name>enable</name>
              <description>[2:0] 3'b000 : Ungate clock to 160KB RAM 3'b111 : Gate Clock to 160KB RAM</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_10_0000</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_ECC_AGG</name>
      <baseAddress>0x56F7EC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>784</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_ECC_AGG</description>
      <registers>
        <register>
          <name>AGGR_REVISION</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Revision parameters</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] Scheme - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>BU</name>
              <description>[29:28] bu - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>MODULE_ID</name>
              <description>[27:16] Module ID - (RO  )</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>REVRTL</name>
              <description>[15:11] RTL version - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>REVMAJ</name>
              <description>[10:8] Major version - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom version - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>REVMIN</name>
              <description>[5:0] Minor version - (RO  )</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECC_VECTOR</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>ECC Vector Register</description>
          <fields>
            <field>
              <name>RES1</name>
              <description>[31:25] RESERVE FIELD</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS_DONE</name>
              <description>[24:24] Status to indicate if read on serial VBUS is complete - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS_ADDRESS</name>
              <description>[23:16] Read address - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RD_SVBUS</name>
              <description>[15:15] Write 1 to trigger a read on the serial VBUS - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RES2</name>
              <description>[14:11] RESERVE FIELD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>ECC_VECTOR</name>
              <description>[10:0] Value written to select the corresponding ECC RAM for  control or status - (RW  )</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MISC_STATUS</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Misc Status</description>
          <fields>
            <field>
              <name>RES3</name>
              <description>[31:11] RESERVE FIELD</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>NUM_RAMS</name>
              <description>[10:0] Indicates the number of RAMS serviced by the ECC aggregator  - (RO  )</description>
              <bitWidth>11</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ECC_WRAP_REVISION</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Revision parameters</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] Scheme - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>BU</name>
              <description>[29:28] bu - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>MODULE_ID</name>
              <description>[27:16] Module ID - (RO  )</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>REVRTL</name>
              <description>[15:11] RTL version - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>REVMAJ</name>
              <description>[10:8] Major version - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom version - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>REVMIN</name>
              <description>[5:0] Minor version - (RO  )</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CONTROL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>ECC Control Register</description>
          <fields>
            <field>
              <name>RES4</name>
              <description>[31:9] RESERVE FIELD</description>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CHECK_SVBUS_TIMEOUT</name>
              <description>[8:8] check for svbus timeout errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CHECK_PARITY</name>
              <description>[7:7] check for parity errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>ERROR_ONCE</name>
              <description>[6:6] Force Error only once - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>FORCE_N_ROW</name>
              <description>[5:5] Force Error on any RAM read - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>FORCE_DED</name>
              <description>[4:4] Force Double Bit Error - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>FORCE_SEC</name>
              <description>[3:3] Force Single Bit Error - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ENABLE_RMW</name>
              <description>[2:2] Enable rmw - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ECC_CHECK</name>
              <description>[1:1] Enable ECC check - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ECC_ENABLE</name>
              <description>[0:0] Enable ECC - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERROR_CTRL1</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>ECC Error Control1 Register</description>
          <fields>
            <field>
              <name>ECC_ROW</name>
              <description>[31:0] Row address where single or double-bit error needs to be  applied. This is ignored if force_n_row is set - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERROR_CTRL2</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>ECC Error Control2 Register</description>
          <fields>
            <field>
              <name>ECC_BIT2</name>
              <description>[31:16] Data bit that needs to be flipped if double bit error needs  to be forced - (RW  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ECC_BIT1</name>
              <description>[15:0] Data bit that needs to be flipped when force_sec is set -  (RW  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERROR_STATUS1</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>ECC Error Status1 Register</description>
          <fields>
            <field>
              <name>ECC_BIT1</name>
              <description>[31:16] Data bit that corresponds to the single-bit error - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CLR_CTRL_REG_ERR</name>
              <description>[15:15] Clear control reg error Error Status you must also re write  the contorl ergister itself to clear this - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>CLR_PARITY_ERR</name>
              <description>[14:13] Clear parity Error Status - (RW  decr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_OTHER</name>
              <description>[12:12] Clear other Error Status - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_DED</name>
              <description>[11:10] Clear Double Bit Error Status - (RW  decr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_ECC_SEC</name>
              <description>[9:8] Clear Single Bit Error Status - (RW  decr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CTR_REG_ERR</name>
              <description>[7:7] control register error pending Level interrupt - (RW</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>PARITY_ERR</name>
              <description>[6:5] Level parity error Error Status - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ECC_OTHER</name>
              <description>[4:4] successive single-bit errors have occurred while a writeback  is still pending Level interrupt - (RW</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ECC_DED</name>
              <description>[3:2] Level Double Bit Error Status - (RW  incr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ECC_SEC</name>
              <description>[1:0] Level Single Bit Error Status - (RW  incr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERROR_STATUS2</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>ECC Error Status2 Register</description>
          <fields>
            <field>
              <name>ECC_ROW</name>
              <description>[31:0] Row address where the single or double-bit error has  occurred - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ERROR_STATUS3</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>ECC Error Status3 Register</description>
          <fields>
            <field>
              <name>RES5</name>
              <description>[31:10] RESERVE FIELD</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_SVBUS_TIMEOUT_ERR</name>
              <description>[9:9] Clear svbus timeout Error Status - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>RES6</name>
              <description>[8:2] RESERVE FIELD</description>
              <bitWidth>7</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SVBUS_TIMEOUT_ERR</name>
              <description>[1:1] Level svbus timeout error Error Status - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WB_PEND</name>
              <description>[0:0] delayed write back pending  Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_EOI_REG</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>EOI Register</description>
          <fields>
            <field>
              <name>RES7</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EOI_WR</name>
              <description>[0:0] EOI Register - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_STATUS_REG0</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register 0</description>
          <fields>
            <field>
              <name>RES8</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_PEND</name>
              <description>[13:13] Interrupt Pending Status for adcpong_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_PEND</name>
              <description>[12:12] Interrupt Pending Status for adcping_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_PEND</name>
              <description>[11:11] Interrupt Pending Status for shared_mem2_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_PEND</name>
              <description>[10:10] Interrupt Pending Status for hwa_param_mem_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_PEND</name>
              <description>[9:9] Interrupt Pending Status for shared_mem1_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_PEND</name>
              <description>[8:8] Interrupt Pending Status for shared_mem0_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_PEND</name>
              <description>[7:7] Interrupt Pending Status for hwa_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_PEND</name>
              <description>[6:6] Interrupt Pending Status for hwa_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_PEND</name>
              <description>[5:5] Interrupt Pending Status for app_ss_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_PEND</name>
              <description>[4:4] Interrupt Pending Status for app_ss_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_PEND</name>
              <description>[3:3] Interrupt Pending Status for app_ss_ram3_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_PEND</name>
              <description>[2:2] Interrupt Pending Status for app_ss_ram2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_PEND</name>
              <description>[1:1] Interrupt Pending Status for app_ss_ram1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_PEND</name>
              <description>[0:0] Interrupt Pending Status for app_ss_rom_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_ENABLE_SET_REG0</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Set Register 0</description>
          <fields>
            <field>
              <name>RES9</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_ENABLE_SET</name>
              <description>[13:13] Interrupt Enable Set Register for adcpong_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_ENABLE_SET</name>
              <description>[12:12] Interrupt Enable Set Register for adcping_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_ENABLE_SET</name>
              <description>[11:11] Interrupt Enable Set Register for shared_mem2_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_ENABLE_SET</name>
              <description>[10:10] Interrupt Enable Set Register for hwa_param_mem_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_ENABLE_SET</name>
              <description>[9:9] Interrupt Enable Set Register for shared_mem1_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_ENABLE_SET</name>
              <description>[8:8] Interrupt Enable Set Register for shared_mem0_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_ENABLE_SET</name>
              <description>[7:7] Interrupt Enable Set Register for hwa_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_ENABLE_SET</name>
              <description>[6:6] Interrupt Enable Set Register for hwa_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_ENABLE_SET</name>
              <description>[5:5] Interrupt Enable Set Register for app_ss_tptc2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_ENABLE_SET</name>
              <description>[4:4] Interrupt Enable Set Register for app_ss_tptc1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_ENABLE_SET</name>
              <description>[3:3] Interrupt Enable Set Register for app_ss_ram3_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_ENABLE_SET</name>
              <description>[2:2] Interrupt Enable Set Register for app_ss_ram2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_ENABLE_SET</name>
              <description>[1:1] Interrupt Enable Set Register for app_ss_ram1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_ENABLE_SET</name>
              <description>[0:0] Interrupt Enable Set Register for app_ss_rom_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SEC_ENABLE_CLR_REG0</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear Register 0</description>
          <fields>
            <field>
              <name>RES10</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_ENABLE_CLR</name>
              <description>[13:13] Interrupt Enable Clear Register for adcpong_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_ENABLE_CLR</name>
              <description>[12:12] Interrupt Enable Clear Register for adcping_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_ENABLE_CLR</name>
              <description>[11:11] Interrupt Enable Clear Register for shared_mem2_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_ENABLE_CLR</name>
              <description>[10:10] Interrupt Enable Clear Register for hwa_param_mem_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_ENABLE_CLR</name>
              <description>[9:9] Interrupt Enable Clear Register for shared_mem1_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_ENABLE_CLR</name>
              <description>[8:8] Interrupt Enable Clear Register for shared_mem0_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_ENABLE_CLR</name>
              <description>[7:7] Interrupt Enable Clear Register for hwa_tptc2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_ENABLE_CLR</name>
              <description>[6:6] Interrupt Enable Clear Register for hwa_tptc1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_ENABLE_CLR</name>
              <description>[5:5] Interrupt Enable Clear Register for app_ss_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_ENABLE_CLR</name>
              <description>[4:4] Interrupt Enable Clear Register for app_ss_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_ENABLE_CLR</name>
              <description>[3:3] Interrupt Enable Clear Register for app_ss_ram3_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_ENABLE_CLR</name>
              <description>[2:2] Interrupt Enable Clear Register for app_ss_ram2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_ENABLE_CLR</name>
              <description>[1:1] Interrupt Enable Clear Register for app_ss_ram1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_ENABLE_CLR</name>
              <description>[0:0] Interrupt Enable Clear Register for app_ss_rom_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_EOI_REG</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>EOI Register</description>
          <fields>
            <field>
              <name>RES11</name>
              <description>[31:1] RESERVE FIELD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EOI_WR</name>
              <description>[0:0] EOI Register - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_STATUS_REG0</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register 0</description>
          <fields>
            <field>
              <name>RES12</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_PEND</name>
              <description>[13:13] Interrupt Pending Status for adcpong_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_PEND</name>
              <description>[12:12] Interrupt Pending Status for adcping_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_PEND</name>
              <description>[11:11] Interrupt Pending Status for shared_mem2_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_PEND</name>
              <description>[10:10] Interrupt Pending Status for hwa_param_mem_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_PEND</name>
              <description>[9:9] Interrupt Pending Status for shared_mem1_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_PEND</name>
              <description>[8:8] Interrupt Pending Status for shared_mem0_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_PEND</name>
              <description>[7:7] Interrupt Pending Status for hwa_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_PEND</name>
              <description>[6:6] Interrupt Pending Status for hwa_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_PEND</name>
              <description>[5:5] Interrupt Pending Status for app_ss_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_PEND</name>
              <description>[4:4] Interrupt Pending Status for app_ss_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_PEND</name>
              <description>[3:3] Interrupt Pending Status for app_ss_ram3_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_PEND</name>
              <description>[2:2] Interrupt Pending Status for app_ss_ram2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_PEND</name>
              <description>[1:1] Interrupt Pending Status for app_ss_ram1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_PEND</name>
              <description>[0:0] Interrupt Pending Status for app_ss_rom_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_ENABLE_SET_REG0</name>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Set Register 0</description>
          <fields>
            <field>
              <name>RES13</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_ENABLE_SET</name>
              <description>[13:13] Interrupt Enable Set Register for adcpong_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_ENABLE_SET</name>
              <description>[12:12] Interrupt Enable Set Register for adcping_ramecc_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_ENABLE_SET</name>
              <description>[11:11] Interrupt Enable Set Register for shared_mem2_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_ENABLE_SET</name>
              <description>[10:10] Interrupt Enable Set Register for hwa_param_mem_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_ENABLE_SET</name>
              <description>[9:9] Interrupt Enable Set Register for shared_mem1_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_ENABLE_SET</name>
              <description>[8:8] Interrupt Enable Set Register for shared_mem0_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_ENABLE_SET</name>
              <description>[7:7] Interrupt Enable Set Register for hwa_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_ENABLE_SET</name>
              <description>[6:6] Interrupt Enable Set Register for hwa_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_ENABLE_SET</name>
              <description>[5:5] Interrupt Enable Set Register for app_ss_tptc2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_ENABLE_SET</name>
              <description>[4:4] Interrupt Enable Set Register for app_ss_tptc1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_ENABLE_SET</name>
              <description>[3:3] Interrupt Enable Set Register for app_ss_ram3_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_ENABLE_SET</name>
              <description>[2:2] Interrupt Enable Set Register for app_ss_ram2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_ENABLE_SET</name>
              <description>[1:1] Interrupt Enable Set Register for app_ss_ram1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_ENABLE_SET</name>
              <description>[0:0] Interrupt Enable Set Register for app_ss_rom_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DED_ENABLE_CLR_REG0</name>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear Register 0</description>
          <fields>
            <field>
              <name>RES14</name>
              <description>[31:14] RESERVE FIELD</description>
              <bitWidth>18</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ADCPONG_RAMECC_ENABLE_CLR</name>
              <description>[13:13] Interrupt Enable Clear Register for adcpong_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>ADCPING_RAMECC_ENABLE_CLR</name>
              <description>[12:12] Interrupt Enable Clear Register for adcping_ramecc_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM2_RAMECC_ENABLE_CLR</name>
              <description>[11:11] Interrupt Enable Clear Register for shared_mem2_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>HWA_PARAM_MEM_ENABLE_CLR</name>
              <description>[10:10] Interrupt Enable Clear Register for hwa_param_mem_pend -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM1_RAMECC_ENABLE_CLR</name>
              <description>[9:9] Interrupt Enable Clear Register for shared_mem1_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SHARED_MEM0_RAMECC_ENABLE_CLR</name>
              <description>[8:8] Interrupt Enable Clear Register for shared_mem0_ramecc_pend  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC2_ENABLE_CLR</name>
              <description>[7:7] Interrupt Enable Clear Register for hwa_tptc2_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>HWA_TPTC1_ENABLE_CLR</name>
              <description>[6:6] Interrupt Enable Clear Register for hwa_tptc1_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC2_ENABLE_CLR</name>
              <description>[5:5] Interrupt Enable Clear Register for app_ss_tptc2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>APP_SS_TPTC1_ENABLE_CLR</name>
              <description>[4:4] Interrupt Enable Clear Register for app_ss_tptc1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM3_ENABLE_CLR</name>
              <description>[3:3] Interrupt Enable Clear Register for app_ss_ram3_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM2_ENABLE_CLR</name>
              <description>[2:2] Interrupt Enable Clear Register for app_ss_ram2_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>APP_SS_RAM1_ENABLE_CLR</name>
              <description>[1:1] Interrupt Enable Clear Register for app_ss_ram1_pend - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>APP_SS_ROM_ENABLE_CLR</name>
              <description>[0:0] Interrupt Enable Clear Register for app_ss_rom_pend - (RW   )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_ENABLE_SET</name>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <description>AGGR interrupt enable set Register</description>
          <fields>
            <field>
              <name>RES15</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[1:1] interrupt enable set for svbus timeout errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[0:0] interrupt enable set for parity errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_ENABLE_CLR</name>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <description>AGGR interrupt enable clear Register</description>
          <fields>
            <field>
              <name>RES16</name>
              <description>[31:2] RESERVE FIELD</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[1:1] interrupt enable clear for svbus timeout errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[0:0] interrupt enable clear for parity errors - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_STATUS_SET</name>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <description>AGGR interrupt status set Register</description>
          <fields>
            <field>
              <name>RES17</name>
              <description>[31:4] RESERVE FIELD</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[3:2] interrupt status set for svbus timeout errors - (RW  incr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[1:0] interrupt status set for parity errors - (RW  incr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AGGR_STATUS_CLR</name>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <description>AGGR interrupt status clear Register</description>
          <fields>
            <field>
              <name>RES18</name>
              <description>[31:4] RESERVE FIELD</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>[3:2] interrupt status clear for svbus timeout errors - (RW   decr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[1:0] interrupt status clear for parity errors - (RW  decr)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_RTI</name>
      <baseAddress>0x56F7F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>192</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_RTI</description>
      <registers>
        <register>
          <name>RTIGCTRL</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Global Control Register starts / stops the counters</description>
          <fields>
            <field>
              <name>RESERVED2</name>
              <description>[31:20] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NTUSEL</name>
              <description>[19:16] NTUSEL: Select NTU signal. These bits determine which NTU input signal is used as external timebase. There are up to four inputs supported with four valid selection combinations. Any invalid selection value written to the NTUSEL bit-field will result in a TIED LOW being used as the NTU signal. The NTU signal will also be TIED LOW in case of a single-bit flip as it will result in an invalid combination of NTUSEL. User and privilege mode (read): 0000 = NTU0 0101 = NTU1 1010 = NTU2 1111 = NTU3 other = tied to ΓÇÿ0ΓÇÖ Privilege mode (write): 0000 = NTU0 0101 = NTU1 1010 = NTU2 1111 = NTU3 other = tied to ΓÇÿ0ΓÇÖ</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>COS</name>
              <description>[15:15] COS: Continue On Suspend. This bit determines if both counters are stopped when the device goes into debug mode or if they continue counting. User and privilege mode (read): 0 = counters are stopped while in debug mode 1 = counters are running while in debug mode Privilege mode (write): 0 = stop counters in debug mode 1 = continue counting in debug mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[14:2] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CNT1EN</name>
              <description>[1:1] CNT1EN: Counter 1 Enable. The CNT1EN bit starts and stops the operation of counter block 1 (UC1 and FRC1). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters Gives the absolute 32 bit destination address (physical).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CNT0EN</name>
              <description>[0:0] CNT0EN: Counter 0 Enable.The CNT0EN bit starts and stops the operation of counter block 0 (UC0 and FRC0). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters Gives the absolute 32 bits source address (physical).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBCTRL</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Timebase Control selection which source triggers free running counter 0</description>
          <fields>
            <field>
              <name>RESERVED3</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>INC</name>
              <description>[1:1] INC: Increment Free Running Counter 0. This bit determines wether the Free Running Counter 0 is automatically incremented if a failing clock on the NTUx signal is detected. User and privilege mode (read): 0 = FRC0 will not be incremented 1 = FRC0 will be incremented Privilege mode (write): 0 = Do not increment FRC0 on failing external clock 1 = Increment FRC0 on failing external clock</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TBEXT</name>
              <description>[0:0] TBEXT: Timebase External. The Timebase External bit selects whether the Free Running Counter 0 is clocked by the internal Up Counter 0 or from the external signal NTUx. Since setting the TBEXT bit to 1 resets Up Counter 0, Free Running Counter 0 will not be incremented in this occurence. The only source which is able to increment Free Running Counter 0 is NTUx. When the Timebase Supervisor circuit detects a missing clockedge, then the TBEXT bit is reset. The selection if the external signal should be used, can only be done by software. User and privilege mode (read): 0 = UC0 clocks FRC0 1 = NTUx clocks FRC0 Privilege mode (write): 0 = MUX is switched to internal UC0 clocking scheme 1 = MUX is switched to external NTUx clocking scheme</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAPCTRL</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Capture Control controls the capture source for the counters</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:2] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CAPCNTR1</name>
              <description>[1:1] CAPCNTR1: Capture Counter 1. This bit determines, which external interrupt source triggers a capture event of both UC1 and FRC1. User and privilege mode (read): 0 = capture event is triggered by Capture Event Source 0 1 = capture event is triggered by Capture Event Source 1 Privilege mode (write): 0 = enable capture event triggered by Capture Event Source 0 1 = enable capture event triggered by Capture Event Source 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CAPCNTR0</name>
              <description>[0:0] CAPCNTR0: Capture Counter 0. This bit determines, which external interrupt source triggers a capture event of both UC0 and FRC0. User and privilege mode (read): 0 = capture event is triggered by Capture Event Source 0 1 = capture event is triggered by Capture Event Source 1 Privilege mode (write): 0 = enable capture event triggered by Capture Event Source 0 1 = enable capture event triggered by Capture Event Source 1 11 indexed 10 reserved 01 post-increment 00 constant</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMPCTRL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Compare Control controls the source for the compare registers</description>
          <fields>
            <field>
              <name>RESERVED8</name>
              <description>[31:13] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>COMP3SEL</name>
              <description>[12:12] COMPSEL3: Compare Select 3. This bit determines the counter with which the compare value hold in compare register 3 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED7</name>
              <description>[11:9] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>COMP2SEL</name>
              <description>[8:8] COMPSEL2: Compare Select 2. This bit determines the counter with which the compare value hold in compare register 2 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED6</name>
              <description>[7:5] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>COMP1SEL</name>
              <description>[4:4] COMPSEL1: Compare Select 1. This bit determines the counter with which the compare value hold in compare register 1 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RESERVED5</name>
              <description>[3:1] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COMP0SEL</name>
              <description>[0:0] COMPSEL0: Compare Select 0. This bit determines the counter with which the compare value hold in compare register 0 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIFRC0</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Free Running Counter 0 current value of free running counter 0</description>
          <fields>
            <field>
              <name>FRC0</name>
              <description>[31:0] FRC0: Free Running Counter 0. This registers holds the current value of the Free Running Counter 0 and will be updated continuously. User and privilege mode (read): current value of the counter Privilege mode (write): The counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUC0</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Up Counter 0 current value of prescale counter 0</description>
          <fields>
            <field>
              <name>UC0</name>
              <description>[31:0] UC0: Up Counter 0. This registers holds the current value of the Up Counter 0 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 0. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 0 and Free Running Counter 0. User and privilege mode (read): value of the counter when the Free Running Counter 0 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0. Note: Preset value concern If the preset value is bigger than the compare value stored in register RTICPUC0 then it can take a long time until a compare matches, since RTIUC0 has to count up until it overflows.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICPUC0</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Compare Up Counter 0 compare value compared with prescale counter 0</description>
          <fields>
            <field>
              <name>CPUC0</name>
              <description>[31:0] This registers holds the compare value, which is compared with the Up Counter 0. When the compare matches, Free Running counter 0 is incremented. The Up Counter is set to zero when the counter value matches the CPUC0 value. The value set in this prescales the RTI clock. If CPUC0 = 0: then, frequency = RTICLK/ (2^32) If CPUC0 Γëá 0: then , frequency = RTICLK/(CPUC0 + 1) User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAFRC0</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>Capture Free Running Counter 0 current value of free running counter 0 on external event</description>
          <fields>
            <field>
              <name>CAFRC0</name>
              <description>[31:0] CAFRC0: Capture Free Running Counter 0. This registers captures the current value of the Free Running Counter 0 when a event occurs, controlled by the external capture control block. User and privilege mode (read): value of Free Running Counter 0 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAUC0</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>Capture Up Counter 0 current value of prescale counter 0 on external event</description>
          <fields>
            <field>
              <name>CAUC0</name>
              <description>[31:0] CAUC0: Capture Up Counter 0. This registers captures the current value of the Up Counter 0 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 0 and Free Running Counter 0. So the RTICAFRC0 register has to be read first, before the RTICAUC0 register is read. This sequence ensures that the value of the RTICAUC0 register is the corresponding value to the RTICAFRC0 register, even if another capture event happens in between the two reads. User and privilege mode (read): value of Up Counter 0 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIFRC1</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Free Running Counter 1 current value of free running counter 1</description>
          <fields>
            <field>
              <name>FRC1</name>
              <description>[31:0] FRC1: Free Running Counter 1. This registers holds the current value of the Free Running Counter 1 and will be updated continuously. User and privilege mode (read): current value of the counter Privilege mode (write): The counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUC1</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Up Counter 1 current value of prescale counter 1</description>
          <fields>
            <field>
              <name>UC1</name>
              <description>[31:0] UC1: Up Counter 1. This registers holds the current value of the Up Counter 1 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 1. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 1 and Free Running Counter 1. User and privilege mode (read): value of the counter when the Free Running Counter 1 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1. Note: Preset value concern If the preset value is bigger than the compare value stored in register RTICPUC1 then it can take a long time until a compare matches, since RTIUC1 has to count up until it overflows.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICPUC1</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Compare Up Counter 1 compare value compared with prescale counter 1</description>
          <fields>
            <field>
              <name>CPUC1</name>
              <description>[31:0] This registers holds the compare value, which is compared with the Up Counter 1. When the compare matches, Free Running Counter 1 is incremented. The Up Counter is set to zero when the counter value matches the CPUC1 value. The value set in this prescales the RTI clock. If CPUC1 = 0: then, frequency = RTICLK/ (2^32) If CPUC1 Γëá 0: then , frequency = RTICLK/(CPUC1 + 1) User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAFRC1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Capture Free Running Counter 1 current value of free running counter 1 on external event</description>
          <fields>
            <field>
              <name>CAFRC1</name>
              <description>[31:0] CAFRC1: Capture Free Running Counter 1. This registers captures the current value of the Free Running Counter 1 when a event occurs, controlled by the external capture control block. User and privilege mode (read): value of Free Running Counter 1 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAUC1</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>Capture Up Counter 1 current value of prescale counter 1 on external event</description>
          <fields>
            <field>
              <name>CAUC1</name>
              <description>[31:0] CAUC1: Capture Up Counter 1. This registers captures the current value of the Up Counter 1 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 1 and Free Running Counter 1. So the RTICAFRC1 register has to be read first, before the RTICAUC1 register is read. This sequence ensures that the value of the RTICAUC1 register is the corresponding value to the RTICAFRC1 register, even if another capture event happens in between the two reads. User and privilege mode (read): value of Up Counter 1 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP0</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>Compare 0 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP0</name>
              <description>[31:0] COMP0: Compare 0. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP0</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>Update Compare 0 value to be added to the compare register 0 value on compare match</description>
          <fields>
            <field>
              <name>UDCP0</name>
              <description>[31:0] UDCP0: Update Compare 0 Register. This registers holds a value, which is added to the value in the compare 0 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 0 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP1</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>Compare 1 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP1</name>
              <description>[31:0] COMP1: compare1. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP1</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>Update Compare 1 value to be added to the compare register 1 value on compare match</description>
          <fields>
            <field>
              <name>UDCP1</name>
              <description>[31:0] UDCP1: Update compare1 Register. This registers holds a value, which is added to the value in the compare1 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare1 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP2</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Compare 2 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP2</name>
              <description>[31:0] COMP2: compare 2. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP2</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Update Compare 2 value to be added to the compare register 2 value on compare match</description>
          <fields>
            <field>
              <name>UDCP2</name>
              <description>[31:0] UDCP2: Update compare 2 Register. This registers holds a value, which is added to the value in the compare 2 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 2 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP3</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Compare 3 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP3</name>
              <description>[31:0] COMP3: compare 3. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP3</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Update Compare 3 value to be added to the compare register 3 value on compare match</description>
          <fields>
            <field>
              <name>UDCP3</name>
              <description>[31:0] UDCP3: Update compare 3 Register. This registers holds a value, which is added to the value in the compare 3 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 3 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBLCOMP</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Timebase Low Compare compare value to activate edge detection circuit</description>
          <fields>
            <field>
              <name>TBLCOMP</name>
              <description>[31:0] TBLCOMP: Timebase Low Compare Value. This value determines when the edge detection circuit starts monitoring the NTUx signal. It will be compared with Up Counter 0. User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed Note: Reset behavior A reset does not generate a compare match.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBHCOMP</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>Timebase High Compare compare value to deactivate edge detection circuit</description>
          <fields>
            <field>
              <name>TBHCOMP</name>
              <description>[31:0] TBHCOMP: Timebase High Compare Value. This value determines when the edge detection circuit will stop monitoring the NTUx signal. It will be compared with Up Counter 0. RTITBHCOMP has to be less than RTICPUC0, since RTIUC0 will be reset when RTICPUC0 is reached. Example: The NTUx edge detection circuit should be active +/- 10 RTICLK cycles around RTICPUC0. RTICPUC0 = 0x00000050 RTITBLCOMP = 0x000046 RTITBHCOMP = 0x00000009 User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed Note: Reset behavior A reset does not generate a compare match.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTISETINT</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Set Interrupt Enable sets interrupt enable bits int RTIINTCTRL without having to do a read-modify-write operation</description>
          <fields>
            <field>
              <name>RESERVED11</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SETOVL1INT</name>
              <description>[18:18] SETOVL1INT: Set Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>SETOVL0INT</name>
              <description>[17:17] SETOVL0INT: Set Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SETTBINT</name>
              <description>[16:16] SETTBINT: Set Timebase Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED10</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SETDMA3</name>
              <description>[11:11] SETDMA3: Set Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>SETDMA2</name>
              <description>[10:10] SETDMA2: Set Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SETDMA1</name>
              <description>[9:9] SETDMA1: Set Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SETDMA0</name>
              <description>[8:8] SETDMA0: Set Compare DMA Request 0. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED9</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SETINT3</name>
              <description>[3:3] SETINT3: Set Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SETINT2</name>
              <description>[2:2] SETINT2: Set Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SETINT1</name>
              <description>[1:1] SETINT1: Set Compare Interrupt 1. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SETINT0</name>
              <description>[0:0] SETINT0: Set Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICLEARINT</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>Clear Interrupt Enable clears interrupt enable bits int RTIINTCTRL without having to do a read-modify-write operation</description>
          <fields>
            <field>
              <name>RESERVED14</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLEAROVL1INT</name>
              <description>[18:18] CLEAROVL1INT: CLEAR Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CLEAROVL0INT</name>
              <description>[17:17] CLEAROVL0INT: CLEAR Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLEARTBINT</name>
              <description>[16:16] CLEARTBINT: CLEAR Timebase Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED13</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CLEARDMA3</name>
              <description>[11:11] CLEARDMA3: CLEAR Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CLEARDMA2</name>
              <description>[10:10] CLEARDMA2: CLEAR Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLEARDMA1</name>
              <description>[9:9] CLEARDMA1: CLEAR Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLEARDMA0</name>
              <description>[8:8] CLEARDMA0: CLEAR Compare DMA Request 0. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED12</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CLEARINT3</name>
              <description>[3:3] CLEARINT3: CLEAR Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CLEARINT2</name>
              <description>[2:2] CLEARINT2: CLEAR Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLEARINT1</name>
              <description>[1:1] CLEARINT1: CLEAR Compare Interrupt 1. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLEARINT0</name>
              <description>[0:0] CLEARINT0: CLEAR Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIINTFLAG</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>Interrupt Flags interrupt pending bits</description>
          <fields>
            <field>
              <name>RESERVED16</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>OVL1INT</name>
              <description>[18:18] OVL1INT: Free Running Counter 1 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>OVL0INT</name>
              <description>[17:17] OVL0INT: Free Running Counter 0 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TBINT</name>
              <description>[16:16] User and privilege mode (read): this flag is set when the TBEXT bit is cleared by detection of a missing external clockedge. It will not be set by clearing TBEXT by software. determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED15</name>
              <description>[15:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INT3</name>
              <description>[3:3] INT3: Interrupt Flag 3. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>INT2</name>
              <description>[2:2] INT2: Interrupt Flag 2. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>INT1</name>
              <description>[1:1] INT1: Interrupt Flag 1. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INT0</name>
              <description>[0:0] INT0: Interrupt Flag 0. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDCTRL</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Control Enables the Digital Watchdog</description>
          <fields>
            <field>
              <name>DWDCTRL</name>
              <description>[31:0] DWDCTRL: Digital Watchdog Control. User and priviledge mode (read): 0x5312ACED = DWD counter is disabled. This is the default value. 0xA98559DA = DWD counter is enabled Any other value = DWD counter state is unchanged (enabled or disabled) Priviledge mode (write): 0xA98559DA = DWD counter is enabled Any other value = State of DWD counter is unchanged (stays enabled or disabled) Note: One-Write Functionality of DWDCTRL Register The RTIDWDCTRL register implements a one-write functionality, such that the application cannot write to this registermore than once. Writing the default value will not enable the watchdog as described above. Writing the enable value will start the watchdog counters. A write to RTIDWDCTRL will only be enabled after a system reset again.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDPRLD</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Preload sets the experation time of the Digital Watchdog</description>
          <fields>
            <field>
              <name>RESERVED17</name>
              <description>[31:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>DWDPRLD</name>
              <description>[11:0] DWDPRLD: Digital Watchdog Preload Value. User and priviledge mode (read): A read from this register in any CPU mode returns the current preload value. Priviledge mode (write): If the DWD is always enabled after reset is released: The DWD starts counting down from the reset value of the counter, that is, 0x002DFFFF. The application can configure the DWD preload register any time before this down counter expires. When the application services the DWD, the preload register contents are copied left-justified into the DWD down counter and it starts counting down from that value. If the DWD is implemented such that the down counter is enabled by software: The DWD preload register can be configured only when the DWD is disabled. Therefore, the application can only configure the DWD preload register before it enables the DWD down counter. The expiration time of the DWD Down Counter can be determined with following equation: texp = (RTIDWDPRLD+1) x 2 ^ 13 / RTICLK1 where: RTIDWDPRLD = 0...4095</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWDSTATUS</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>Watchdog Status reflects the status of Analog and Digital Watchdog</description>
          <fields>
            <field>
              <name>RESERVED18</name>
              <description>[31:6] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>DWWD_ST</name>
              <description>[5:5] DWWD ST: Windowed Watchdog Status. This bit denotes whether the time-window defined by the windowed watchdog configuration has been violated, or if a wrong key or key sequence was written to service the watchdog. User and priviledge mode (read): 0 = no time-window violation has occurred. 1 = a time-window violation has occurred. The watchdog will generate either a system reset or a non-maskable interrupt to the CPU in this case. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0. This will also clear all other status flags in the RTIWDSTATUS register except for the AWD ST flag. Clearing of the status flags will deassert the non-maskable interrupt generated due to violation of the DWWD.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ENDTIMEVIOL</name>
              <description>[4:4] END TIME VIOL: Windowed Watchdog End Time Violation Status. This bit denotes whether the end-time defined by the windowed watchdog configuration has been violated. This bit is effectively a copy of the DWD ST status flag. User and priviledge mode (read): 0 = no end-time window violation has occurred. 1 = the end-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STARTTIMEVIOL</name>
              <description>[3:3] START TIME VIOL: Windowed Watchdog Start Time Violation Status.  This bit denotes whether the start-time defined by the windowed watchdog configuration has been violated. This indicates that the WWD was serviced before the service window was opened. User and priviledge mode (read): 0 = no start-time window violation has occurred. 1 = the start-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>KEYST</name>
              <description>[2:2] KEYST: Watchdog KeyStatus. This bit denotes a reset generated by a wrong key or a wrong key-sequence written to the RTIWDKEY register. User and priviledge mode (read): 0 = no wrong key or key-sequence written 1 = wrong key or key-sequence written to RTIWDKEY register Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DWDST</name>
              <description>[1:1] DWDST: Digital Watchdog Status. This bit is effectively a copy of the END TIME VIOL status flag and is maintained for compatibility reasons. User and priviledge mode (read): 0 = DWD timeout period not expired 1 = DWD timeout period has expired Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AWDST</name>
              <description>[0:0] AWDST: Analog Watchdog Status. User and priviledge mode (read): 0 = AWD pin 0 ΓÇô&gt; 1 threshold not exceeded 1 = AWD pin 0 ΓÇô&gt; 1 threshold exceeded Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWDKEY</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>Watchdog Key correct written key values discharge the external capacitor</description>
          <fields>
            <field>
              <name>RESERVED19</name>
              <description>[31:16] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>WDKEY</name>
              <description>[15:0] WDKEY: Watchdog Key. User and privilege mode reads are indeterminate. Privilege mode (write): A write of 0xE51A followed by 0xA35C in two separate write operations defines the Key Sequence and discharges the watchdog capacitor. This also causes the upper 12 bits of the DWD down counter to be reloaded with the contents of the DWD preload register and the lower 13 bits to become all 1ΓÇÖs. Writing any other value causes a digital watchdog reset, as shown in Table 1-3. Note: Register write access time precaution The user has to take into account that the write to the register takes 3 VCLK cycle. This needs to be considered for the AWD/DWD expiration calculation.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDCNTR</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Down Counter current value of DWD down counter</description>
          <fields>
            <field>
              <name>RESERVED20</name>
              <description>[31:25] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>DWDCNTR</name>
              <description>[24:0] DWDCNTR: Digital Watchdog Down Counter. The value of the DWDCNTR after a system reset is 0x002D_FFFF. When the DWD is enabled and the DWD counter starts counting down from this value with an RTICLK1 time base of 3MHz, a watchdog reset will be generated in 1 second. User and privilege mode (read): Reads return the current counter value. Privilege mode (write): Writes donΓÇÖt have an effect.</description>
              <bitWidth>25</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWWDRXNCTRL</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>Windowed Watchdog Reaction Control configures the windowed watchdog to either generate a non-maskable interrupt to the CPU or to generate a system reset</description>
          <fields>
            <field>
              <name>RESERVED21</name>
              <description>[31:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>WWDRXN</name>
              <description>[3:0] WWDRXN: Digital Windowed Watchdog Reaction. User and privilege mode (read), privileged mode (write): 0x5 = This is the default value. The windowed watchdog will cause a reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. 0xA = The windowed watchdog will generate a non-maskable interrupt to the CPU if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Writing any other value will cause a system reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Note: Configuration of DWWD Reaction The DWWD reaction can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDRXN is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDRXN is made when the watchdog service window is already open, then the change in configuration takes effect only after the watchdog is serviced.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWWDSIZECTRL</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>Windowed Watchdog Size Control configures the size of the window for the digital windowed watchdog</description>
          <fields>
            <field>
              <name>WWDSIZE</name>
              <description>[31:0] WWDSIZE: Digital Windowed Watchdog Window Size. User and privilege mode (read), privileged mode (write): Value written to WWDSIZE    Window Size 0x00000005                                   100% (Functionality same as the time-out digital watchdog.) 0x00000050                                   50% 0x00000500                                   25% 0x00005000                                  12.5% 0x00050000                                  6.25% 0x00500000                                  3.125% Any other value                          3.125% Note: Incorrect value being written to watchdog window size control register If an incorerct value is written to the WWDSIZE field, or if a system disturbance causes the WWDSIZE field to have a value other than 0x5, 0x50, 0x500, 0x5000, 0x50000, or 0x500000, then the window size will be configured to be 3.125%. This increases the chances of getting a reset due to the windowed watchdog, which enables the system to handle the cause for the incorrect configuration. Note: Configuration of DWWD Window Size The DWWD window size can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDSIZE is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDSIZE is made when the watchdog service window is already open, then</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIINTCLRENABLE</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>RTI Compare Interrupt Clear Enable enable the auto clear functionality for each of the compare interrupts</description>
          <fields>
            <field>
              <name>RESERVED25</name>
              <description>[31:28] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE3</name>
              <description>[27:24] INTCLRENABLE3. Enables the auto-clear functionality on the compare 3 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 3 interrupt is disabled. Any other value = Auto-clear for compare 3 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 3 interrupt. Any other value = Enables the auto-clear functionality on the compare 3 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED24</name>
              <description>[23:20] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE2</name>
              <description>[19:16] INTCLRENABLE2. Enables the auto-clear functionality on the compare 2 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 2 interrupt is disabled. Any other value = Auto-clear for compare 2 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 2 interrupt. Any other value = Enables the auto-clear functionality on the compare 2 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED23</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE1</name>
              <description>[11:8] INTCLRENABLE1. Enables the auto-clear functionality on the compare 1 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 1 interrupt is disabled. Any other value = Auto-clear for compare 1 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 1 interrupt. Any other value = Enables the auto-clear functionality on the compare 1 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED22</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE0</name>
              <description>[3:0] INTCLRENABLE0. Enables the auto-clear functionality on the compare 0 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 0 interrupt is disabled. Any other value = Auto-clear for compare 0 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 0 interrupt. Any other value = Enables the auto-clear functionality on the compare 0 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP0CLR</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>Compare 0 Clear compare value to be compared with the counter to clear the compare0 interrupt line</description>
          <fields>
            <field>
              <name>COMP0CLR</name>
              <description>[31:0] COMP0CLR: Compare 0 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the compare 0 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP1CLR</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>Compare 1 Clear compare value to be compared with the counter to clear the compare1 interrupt line</description>
          <fields>
            <field>
              <name>COMP1CLR</name>
              <description>[31:0] COMP1CLR: Compare 1 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 1 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP2CLR</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>Compare 2 Clear compare value to be compared with the counter to clear the compare2 interrupt line</description>
          <fields>
            <field>
              <name>COMP2CLR</name>
              <description>[31:0] COMP2CLR: Compare 2 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 2 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP3CLR</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>Compare 3 Clear compare value to be compared with the counter to clear the compare3 interrupt line</description>
          <fields>
            <field>
              <name>COMP3CLR</name>
              <description>[31:0] COMP3CLR: Compare 3 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 3 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_WD</name>
      <baseAddress>0x56F7F400</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>192</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_WD</description>
      <registers>
        <register>
          <name>RTIGCTRL</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Global Control Register starts / stops the counters</description>
          <fields>
            <field>
              <name>RESERVED2</name>
              <description>[31:20] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>NTUSEL</name>
              <description>[19:16] NTUSEL: Select NTU signal. These bits determine which NTU input signal is used as external timebase. There are up to four inputs supported with four valid selection combinations. Any invalid selection value written to the NTUSEL bit-field will result in a TIED LOW being used as the NTU signal. The NTU signal will also be TIED LOW in case of a single-bit flip as it will result in an invalid combination of NTUSEL. User and privilege mode (read): 0000 = NTU0 0101 = NTU1 1010 = NTU2 1111 = NTU3 other = tied to ΓÇÿ0ΓÇÖ Privilege mode (write): 0000 = NTU0 0101 = NTU1 1010 = NTU2 1111 = NTU3 other = tied to ΓÇÿ0ΓÇÖ</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>COS</name>
              <description>[15:15] COS: Continue On Suspend. This bit determines if both counters are stopped when the device goes into debug mode or if they continue counting. User and privilege mode (read): 0 = counters are stopped while in debug mode 1 = counters are running while in debug mode Privilege mode (write): 0 = stop counters in debug mode 1 = continue counting in debug mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[14:2] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CNT1EN</name>
              <description>[1:1] CNT1EN: Counter 1 Enable. The CNT1EN bit starts and stops the operation of counter block 1 (UC1 and FRC1). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters Gives the absolute 32 bit destination address (physical).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CNT0EN</name>
              <description>[0:0] CNT0EN: Counter 0 Enable.The CNT0EN bit starts and stops the operation of counter block 0 (UC0 and FRC0). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters Gives the absolute 32 bits source address (physical).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBCTRL</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Timebase Control selection which source triggers free running counter 0</description>
          <fields>
            <field>
              <name>RESERVED3</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>INC</name>
              <description>[1:1] INC: Increment Free Running Counter 0. This bit determines wether the Free Running Counter 0 is automatically incremented if a failing clock on the NTUx signal is detected. User and privilege mode (read): 0 = FRC0 will not be incremented 1 = FRC0 will be incremented Privilege mode (write): 0 = Do not increment FRC0 on failing external clock 1 = Increment FRC0 on failing external clock</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TBEXT</name>
              <description>[0:0] TBEXT: Timebase External. The Timebase External bit selects whether the Free Running Counter 0 is clocked by the internal Up Counter 0 or from the external signal NTUx. Since setting the TBEXT bit to 1 resets Up Counter 0, Free Running Counter 0 will not be incremented in this occurence. The only source which is able to increment Free Running Counter 0 is NTUx. When the Timebase Supervisor circuit detects a missing clockedge, then the TBEXT bit is reset. The selection if the external signal should be used, can only be done by software. User and privilege mode (read): 0 = UC0 clocks FRC0 1 = NTUx clocks FRC0 Privilege mode (write): 0 = MUX is switched to internal UC0 clocking scheme 1 = MUX is switched to external NTUx clocking scheme</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAPCTRL</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Capture Control controls the capture source for the counters</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:2] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CAPCNTR1</name>
              <description>[1:1] CAPCNTR1: Capture Counter 1. This bit determines, which external interrupt source triggers a capture event of both UC1 and FRC1. User and privilege mode (read): 0 = capture event is triggered by Capture Event Source 0 1 = capture event is triggered by Capture Event Source 1 Privilege mode (write): 0 = enable capture event triggered by Capture Event Source 0 1 = enable capture event triggered by Capture Event Source 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CAPCNTR0</name>
              <description>[0:0] CAPCNTR0: Capture Counter 0. This bit determines, which external interrupt source triggers a capture event of both UC0 and FRC0. User and privilege mode (read): 0 = capture event is triggered by Capture Event Source 0 1 = capture event is triggered by Capture Event Source 1 Privilege mode (write): 0 = enable capture event triggered by Capture Event Source 0 1 = enable capture event triggered by Capture Event Source 1 11 indexed 10 reserved 01 post-increment 00 constant</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMPCTRL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Compare Control controls the source for the compare registers</description>
          <fields>
            <field>
              <name>RESERVED8</name>
              <description>[31:13] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>19</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>COMP3SEL</name>
              <description>[12:12] COMPSEL3: Compare Select 3. This bit determines the counter with which the compare value hold in compare register 3 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED7</name>
              <description>[11:9] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>COMP2SEL</name>
              <description>[8:8] COMPSEL2: Compare Select 2. This bit determines the counter with which the compare value hold in compare register 2 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED6</name>
              <description>[7:5] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>COMP1SEL</name>
              <description>[4:4] COMPSEL1: Compare Select 1. This bit determines the counter with which the compare value hold in compare register 1 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RESERVED5</name>
              <description>[3:1] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>3</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COMP0SEL</name>
              <description>[0:0] COMPSEL0: Compare Select 0. This bit determines the counter with which the compare value hold in compare register 0 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIFRC0</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Free Running Counter 0 current value of free running counter 0</description>
          <fields>
            <field>
              <name>FRC0</name>
              <description>[31:0] FRC0: Free Running Counter 0. This registers holds the current value of the Free Running Counter 0 and will be updated continuously. User and privilege mode (read): current value of the counter Privilege mode (write): The counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUC0</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Up Counter 0 current value of prescale counter 0</description>
          <fields>
            <field>
              <name>UC0</name>
              <description>[31:0] UC0: Up Counter 0. This registers holds the current value of the Up Counter 0 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 0. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 0 and Free Running Counter 0. User and privilege mode (read): value of the counter when the Free Running Counter 0 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0. Note: Preset value concern If the preset value is bigger than the compare value stored in register RTICPUC0 then it can take a long time until a compare matches, since RTIUC0 has to count up until it overflows.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICPUC0</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Compare Up Counter 0 compare value compared with prescale counter 0</description>
          <fields>
            <field>
              <name>CPUC0</name>
              <description>[31:0] This registers holds the compare value, which is compared with the Up Counter 0. When the compare matches, Free Running counter 0 is incremented. The Up Counter is set to zero when the counter value matches the CPUC0 value. The value set in this prescales the RTI clock. If CPUC0 = 0: then, frequency = RTICLK/ (2^32) If CPUC0 Γëá 0: then , frequency = RTICLK/(CPUC0 + 1) User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAFRC0</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>Capture Free Running Counter 0 current value of free running counter 0 on external event</description>
          <fields>
            <field>
              <name>CAFRC0</name>
              <description>[31:0] CAFRC0: Capture Free Running Counter 0. This registers captures the current value of the Free Running Counter 0 when a event occurs, controlled by the external capture control block. User and privilege mode (read): value of Free Running Counter 0 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAUC0</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>Capture Up Counter 0 current value of prescale counter 0 on external event</description>
          <fields>
            <field>
              <name>CAUC0</name>
              <description>[31:0] CAUC0: Capture Up Counter 0. This registers captures the current value of the Up Counter 0 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 0 and Free Running Counter 0. So the RTICAFRC0 register has to be read first, before the RTICAUC0 register is read. This sequence ensures that the value of the RTICAUC0 register is the corresponding value to the RTICAFRC0 register, even if another capture event happens in between the two reads. User and privilege mode (read): value of Up Counter 0 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIFRC1</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Free Running Counter 1 current value of free running counter 1</description>
          <fields>
            <field>
              <name>FRC1</name>
              <description>[31:0] FRC1: Free Running Counter 1. This registers holds the current value of the Free Running Counter 1 and will be updated continuously. User and privilege mode (read): current value of the counter Privilege mode (write): The counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUC1</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Up Counter 1 current value of prescale counter 1</description>
          <fields>
            <field>
              <name>UC1</name>
              <description>[31:0] UC1: Up Counter 1. This registers holds the current value of the Up Counter 1 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 1. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 1 and Free Running Counter 1. User and privilege mode (read): value of the counter when the Free Running Counter 1 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Note: Presetting counters If counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1. Note: Preset value concern If the preset value is bigger than the compare value stored in register RTICPUC1 then it can take a long time until a compare matches, since RTIUC1 has to count up until it overflows.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICPUC1</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Compare Up Counter 1 compare value compared with prescale counter 1</description>
          <fields>
            <field>
              <name>CPUC1</name>
              <description>[31:0] This registers holds the compare value, which is compared with the Up Counter 1. When the compare matches, Free Running Counter 1 is incremented. The Up Counter is set to zero when the counter value matches the CPUC1 value. The value set in this prescales the RTI clock. If CPUC1 = 0: then, frequency = RTICLK/ (2^32) If CPUC1 Γëá 0: then , frequency = RTICLK/(CPUC1 + 1) User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAFRC1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Capture Free Running Counter 1 current value of free running counter 1 on external event</description>
          <fields>
            <field>
              <name>CAFRC1</name>
              <description>[31:0] CAFRC1: Capture Free Running Counter 1. This registers captures the current value of the Free Running Counter 1 when a event occurs, controlled by the external capture control block. User and privilege mode (read): value of Free Running Counter 1 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICAUC1</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>Capture Up Counter 1 current value of prescale counter 1 on external event</description>
          <fields>
            <field>
              <name>CAUC1</name>
              <description>[31:0] CAUC1: Capture Up Counter 1. This registers captures the current value of the Up Counter 1 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 1 and Free Running Counter 1. So the RTICAFRC1 register has to be read first, before the RTICAUC1 register is read. This sequence ensures that the value of the RTICAUC1 register is the corresponding value to the RTICAFRC1 register, even if another capture event happens in between the two reads. User and privilege mode (read): value of Up Counter 1 on a capture event</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP0</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>Compare 0 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP0</name>
              <description>[31:0] COMP0: Compare 0. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP0</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>Update Compare 0 value to be added to the compare register 0 value on compare match</description>
          <fields>
            <field>
              <name>UDCP0</name>
              <description>[31:0] UDCP0: Update Compare 0 Register. This registers holds a value, which is added to the value in the compare 0 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 0 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP1</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>Compare 1 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP1</name>
              <description>[31:0] COMP1: compare1. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP1</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>Update Compare 1 value to be added to the compare register 1 value on compare match</description>
          <fields>
            <field>
              <name>UDCP1</name>
              <description>[31:0] UDCP1: Update compare1 Register. This registers holds a value, which is added to the value in the compare1 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare1 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP2</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Compare 2 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP2</name>
              <description>[31:0] COMP2: compare 2. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP2</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Update Compare 2 value to be added to the compare register 2 value on compare match</description>
          <fields>
            <field>
              <name>UDCP2</name>
              <description>[31:0] UDCP2: Update compare 2 Register. This registers holds a value, which is added to the value in the compare 2 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 2 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP3</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Compare 3 compare value to be compared with the counters</description>
          <fields>
            <field>
              <name>COMP3</name>
              <description>[31:0] COMP3: compare 3. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIUDCP3</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Update Compare 3 value to be added to the compare register 3 value on compare match</description>
          <fields>
            <field>
              <name>UDCP3</name>
              <description>[31:0] UDCP3: Update compare 3 Register. This registers holds a value, which is added to the value in the compare 3 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention. User and privilege mode (read): value to be added to the compare 3 register on the next compare match Privilege mode (write): new update value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBLCOMP</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Timebase Low Compare compare value to activate edge detection circuit</description>
          <fields>
            <field>
              <name>TBLCOMP</name>
              <description>[31:0] TBLCOMP: Timebase Low Compare Value. This value determines when the edge detection circuit starts monitoring the NTUx signal. It will be compared with Up Counter 0. User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed Note: Reset behavior A reset does not generate a compare match.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTITBHCOMP</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>Timebase High Compare compare value to deactivate edge detection circuit</description>
          <fields>
            <field>
              <name>TBHCOMP</name>
              <description>[31:0] TBHCOMP: Timebase High Compare Value. This value determines when the edge detection circuit will stop monitoring the NTUx signal. It will be compared with Up Counter 0. RTITBHCOMP has to be less than RTICPUC0, since RTIUC0 will be reset when RTICPUC0 is reached. Example: The NTUx edge detection circuit should be active +/- 10 RTICLK cycles around RTICPUC0. RTICPUC0 = 0x00000050 RTITBLCOMP = 0x000046 RTITBHCOMP = 0x00000009 User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed Note: Reset behavior A reset does not generate a compare match.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTISETINT</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>Set Interrupt Enable sets interrupt enable bits int RTIINTCTRL without having to do a read-modify-write operation</description>
          <fields>
            <field>
              <name>RESERVED11</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SETOVL1INT</name>
              <description>[18:18] SETOVL1INT: Set Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>SETOVL0INT</name>
              <description>[17:17] SETOVL0INT: Set Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SETTBINT</name>
              <description>[16:16] SETTBINT: Set Timebase Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED10</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SETDMA3</name>
              <description>[11:11] SETDMA3: Set Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>SETDMA2</name>
              <description>[10:10] SETDMA2: Set Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SETDMA1</name>
              <description>[9:9] SETDMA1: Set Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SETDMA0</name>
              <description>[8:8] SETDMA0: Set Compare DMA Request 0. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED9</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SETINT3</name>
              <description>[3:3] SETINT3: Set Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SETINT2</name>
              <description>[2:2] SETINT2: Set Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SETINT1</name>
              <description>[1:1] SETINT1: Set Compare Interrupt 1. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SETINT0</name>
              <description>[0:0] SETINT0: Set Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICLEARINT</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>Clear Interrupt Enable clears interrupt enable bits int RTIINTCTRL without having to do a read-modify-write operation</description>
          <fields>
            <field>
              <name>RESERVED14</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLEAROVL1INT</name>
              <description>[18:18] CLEAROVL1INT: CLEAR Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CLEAROVL0INT</name>
              <description>[17:17] CLEAROVL0INT: CLEAR Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLEARTBINT</name>
              <description>[16:16] CLEARTBINT: CLEAR Timebase Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED13</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>CLEARDMA3</name>
              <description>[11:11] CLEARDMA3: CLEAR Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CLEARDMA2</name>
              <description>[10:10] CLEARDMA2: CLEAR Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLEARDMA1</name>
              <description>[9:9] CLEARDMA1: CLEAR Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLEARDMA0</name>
              <description>[8:8] CLEARDMA0: CLEAR Compare DMA Request 0. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED12</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CLEARINT3</name>
              <description>[3:3] CLEARINT3: CLEAR Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CLEARINT2</name>
              <description>[2:2] CLEARINT2: CLEAR Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLEARINT1</name>
              <description>[1:1] CLEARINT1: CLEAR Compare Interrupt 1. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLEARINT0</name>
              <description>[0:0] CLEARINT0: CLEAR Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIINTFLAG</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>Interrupt Flags interrupt pending bits</description>
          <fields>
            <field>
              <name>RESERVED16</name>
              <description>[31:19] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>OVL1INT</name>
              <description>[18:18] OVL1INT: Free Running Counter 1 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>OVL0INT</name>
              <description>[17:17] OVL0INT: Free Running Counter 0 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TBINT</name>
              <description>[16:16] User and privilege mode (read): this flag is set when the TBEXT bit is cleared by detection of a missing external clockedge. It will not be set by clearing TBEXT by software. determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED15</name>
              <description>[15:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INT3</name>
              <description>[3:3] INT3: Interrupt Flag 3. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>INT2</name>
              <description>[2:2] INT2: Interrupt Flag 2. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>INT1</name>
              <description>[1:1] INT1: Interrupt Flag 1. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>INT0</name>
              <description>[0:0] INT0: Interrupt Flag 0. User and privilege mode (read): determines if a interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDCTRL</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Control Enables the Digital Watchdog</description>
          <fields>
            <field>
              <name>DWDCTRL</name>
              <description>[31:0] DWDCTRL: Digital Watchdog Control. User and priviledge mode (read): 0x5312ACED = DWD counter is disabled. This is the default value. 0xA98559DA = DWD counter is enabled Any other value = DWD counter state is unchanged (enabled or disabled) Priviledge mode (write): 0xA98559DA = DWD counter is enabled Any other value = State of DWD counter is unchanged (stays enabled or disabled) Note: One-Write Functionality of DWDCTRL Register The RTIDWDCTRL register implements a one-write functionality, such that the application cannot write to this registermore than once. Writing the default value will not enable the watchdog as described above. Writing the enable value will start the watchdog counters. A write to RTIDWDCTRL will only be enabled after a system reset again.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDPRLD</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Preload sets the experation time of the Digital Watchdog</description>
          <fields>
            <field>
              <name>RESERVED17</name>
              <description>[31:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>DWDPRLD</name>
              <description>[11:0] DWDPRLD: Digital Watchdog Preload Value. User and priviledge mode (read): A read from this register in any CPU mode returns the current preload value. Priviledge mode (write): If the DWD is always enabled after reset is released: The DWD starts counting down from the reset value of the counter, that is, 0x002DFFFF. The application can configure the DWD preload register any time before this down counter expires. When the application services the DWD, the preload register contents are copied left-justified into the DWD down counter and it starts counting down from that value. If the DWD is implemented such that the down counter is enabled by software: The DWD preload register can be configured only when the DWD is disabled. Therefore, the application can only configure the DWD preload register before it enables the DWD down counter. The expiration time of the DWD Down Counter can be determined with following equation: texp = (RTIDWDPRLD+1) x 2 ^ 13 / RTICLK1 where: RTIDWDPRLD = 0...4095</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWDSTATUS</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>Watchdog Status reflects the status of Analog and Digital Watchdog</description>
          <fields>
            <field>
              <name>RESERVED18</name>
              <description>[31:6] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>DWWD_ST</name>
              <description>[5:5] DWWD ST: Windowed Watchdog Status. This bit denotes whether the time-window defined by the windowed watchdog configuration has been violated, or if a wrong key or key sequence was written to service the watchdog. User and priviledge mode (read): 0 = no time-window violation has occurred. 1 = a time-window violation has occurred. The watchdog will generate either a system reset or a non-maskable interrupt to the CPU in this case. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0. This will also clear all other status flags in the RTIWDSTATUS register except for the AWD ST flag. Clearing of the status flags will deassert the non-maskable interrupt generated due to violation of the DWWD.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ENDTIMEVIOL</name>
              <description>[4:4] END TIME VIOL: Windowed Watchdog End Time Violation Status. This bit denotes whether the end-time defined by the windowed watchdog configuration has been violated. This bit is effectively a copy of the DWD ST status flag. User and priviledge mode (read): 0 = no end-time window violation has occurred. 1 = the end-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>STARTTIMEVIOL</name>
              <description>[3:3] START TIME VIOL: Windowed Watchdog Start Time Violation Status.  This bit denotes whether the start-time defined by the windowed watchdog configuration has been violated. This indicates that the WWD was serviced before the service window was opened. User and priviledge mode (read): 0 = no start-time window violation has occurred. 1 = the start-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>KEYST</name>
              <description>[2:2] KEYST: Watchdog KeyStatus. This bit denotes a reset generated by a wrong key or a wrong key-sequence written to the RTIWDKEY register. User and priviledge mode (read): 0 = no wrong key or key-sequence written 1 = wrong key or key-sequence written to RTIWDKEY register Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DWDST</name>
              <description>[1:1] DWDST: Digital Watchdog Status. This bit is effectively a copy of the END TIME VIOL status flag and is maintained for compatibility reasons. User and priviledge mode (read): 0 = DWD timeout period not expired 1 = DWD timeout period has expired Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AWDST</name>
              <description>[0:0] AWDST: Analog Watchdog Status. User and priviledge mode (read): 0 = AWD pin 0 ΓÇô&gt; 1 threshold not exceeded 1 = AWD pin 0 ΓÇô&gt; 1 threshold exceeded Priviledge mode (write): 0 = leaves the current value unchanged 1 = clears the bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWDKEY</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>Watchdog Key correct written key values discharge the external capacitor</description>
          <fields>
            <field>
              <name>RESERVED19</name>
              <description>[31:16] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>WDKEY</name>
              <description>[15:0] WDKEY: Watchdog Key. User and privilege mode reads are indeterminate. Privilege mode (write): A write of 0xE51A followed by 0xA35C in two separate write operations defines the Key Sequence and discharges the watchdog capacitor. This also causes the upper 12 bits of the DWD down counter to be reloaded with the contents of the DWD preload register and the lower 13 bits to become all 1ΓÇÖs. Writing any other value causes a digital watchdog reset, as shown in Table 1-3. Note: Register write access time precaution The user has to take into account that the write to the register takes 3 VCLK cycle. This needs to be considered for the AWD/DWD expiration calculation.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIDWDCNTR</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>Digital Watchdog Down Counter current value of DWD down counter</description>
          <fields>
            <field>
              <name>RESERVED20</name>
              <description>[31:25] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>7</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>DWDCNTR</name>
              <description>[24:0] DWDCNTR: Digital Watchdog Down Counter. The value of the DWDCNTR after a system reset is 0x002D_FFFF. When the DWD is enabled and the DWD counter starts counting down from this value with an RTICLK1 time base of 3MHz, a watchdog reset will be generated in 1 second. User and privilege mode (read): Reads return the current counter value. Privilege mode (write): Writes donΓÇÖt have an effect.</description>
              <bitWidth>25</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWWDRXNCTRL</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>Windowed Watchdog Reaction Control configures the windowed watchdog to either generate a non-maskable interrupt to the CPU or to generate a system reset</description>
          <fields>
            <field>
              <name>RESERVED21</name>
              <description>[31:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>WWDRXN</name>
              <description>[3:0] WWDRXN: Digital Windowed Watchdog Reaction. User and privilege mode (read), privileged mode (write): 0x5 = This is the default value. The windowed watchdog will cause a reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. 0xA = The windowed watchdog will generate a non-maskable interrupt to the CPU if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Writing any other value will cause a system reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Note: Configuration of DWWD Reaction The DWWD reaction can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDRXN is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDRXN is made when the watchdog service window is already open, then the change in configuration takes effect only after the watchdog is serviced.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIWWDSIZECTRL</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>Windowed Watchdog Size Control configures the size of the window for the digital windowed watchdog</description>
          <fields>
            <field>
              <name>WWDSIZE</name>
              <description>[31:0] WWDSIZE: Digital Windowed Watchdog Window Size. User and privilege mode (read), privileged mode (write): Value written to WWDSIZE    Window Size 0x00000005                                   100% (Functionality same as the time-out digital watchdog.) 0x00000050                                   50% 0x00000500                                   25% 0x00005000                                  12.5% 0x00050000                                  6.25% 0x00500000                                  3.125% Any other value                          3.125% Note: Incorrect value being written to watchdog window size control register If an incorerct value is written to the WWDSIZE field, or if a system disturbance causes the WWDSIZE field to have a value other than 0x5, 0x50, 0x500, 0x5000, 0x50000, or 0x500000, then the window size will be configured to be 3.125%. This increases the chances of getting a reset due to the windowed watchdog, which enables the system to handle the cause for the incorrect configuration. Note: Configuration of DWWD Window Size The DWWD window size can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDSIZE is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDSIZE is made when the watchdog service window is already open, then</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTIINTCLRENABLE</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>RTI Compare Interrupt Clear Enable enable the auto clear functionality for each of the compare interrupts</description>
          <fields>
            <field>
              <name>RESERVED25</name>
              <description>[31:28] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE3</name>
              <description>[27:24] INTCLRENABLE3. Enables the auto-clear functionality on the compare 3 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 3 interrupt is disabled. Any other value = Auto-clear for compare 3 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 3 interrupt. Any other value = Enables the auto-clear functionality on the compare 3 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED24</name>
              <description>[23:20] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE2</name>
              <description>[19:16] INTCLRENABLE2. Enables the auto-clear functionality on the compare 2 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 2 interrupt is disabled. Any other value = Auto-clear for compare 2 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 2 interrupt. Any other value = Enables the auto-clear functionality on the compare 2 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED23</name>
              <description>[15:12] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE1</name>
              <description>[11:8] INTCLRENABLE1. Enables the auto-clear functionality on the compare 1 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 1 interrupt is disabled. Any other value = Auto-clear for compare 1 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 1 interrupt. Any other value = Enables the auto-clear functionality on the compare 1 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED22</name>
              <description>[7:4] Reserved. Reads return 0 and writes have no effect</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTCLRENABLE0</name>
              <description>[3:0] INTCLRENABLE0. Enables the auto-clear functionality on the compare 0 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 0 interrupt is disabled. Any other value = Auto-clear for compare 0 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 0 interrupt. Any other value = Enables the auto-clear functionality on the compare 0 interrupt.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP0CLR</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>Compare 0 Clear compare value to be compared with the counter to clear the compare0 interrupt line</description>
          <fields>
            <field>
              <name>COMP0CLR</name>
              <description>[31:0] COMP0CLR: Compare 0 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the compare 0 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP1CLR</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>Compare 1 Clear compare value to be compared with the counter to clear the compare1 interrupt line</description>
          <fields>
            <field>
              <name>COMP1CLR</name>
              <description>[31:0] COMP1CLR: Compare 1 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 1 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP2CLR</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>Compare 2 Clear compare value to be compared with the counter to clear the compare2 interrupt line</description>
          <fields>
            <field>
              <name>COMP2CLR</name>
              <description>[31:0] COMP2CLR: Compare 2 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 2 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICOMP3CLR</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>Compare 3 Clear compare value to be compared with the counter to clear the compare3 interrupt line</description>
          <fields>
            <field>
              <name>COMP3CLR</name>
              <description>[31:0] COMP3CLR: Compare 3 Clear. This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 3 interrupt or DMA request line is cleared. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Note: Reset behavior A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_DCC</name>
      <baseAddress>0x56F7F800</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>59</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_DCC</description>
      <registers>
        <register>
          <name>DCCGCTRL</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Starts / stops the counters clears the  error signal</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DONENA</name>
              <description>[15:12] The DONEENA bit enables/disables the done signal. 0101 =  disabled &amp; 1010 = enabled</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SINGLESHOT</name>
              <description>[11:8] Single/Continuous checking mode. 0101 = Continuous &amp; 1010 =  Single</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ERRENA</name>
              <description>[7:4] The ERRENA bit enables/disables the error signal. 0101 =  disabled &amp; 1010 = enabled</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DCCENA</name>
              <description>[3:0] The DCCENA bit starts and stops the operation of the dcc  0101 = disabled &amp; 1010 = enabled</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCREV</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Module version</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] SCHEME. - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[29:28] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] Functional release number - (RO  )</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RTL</name>
              <description>[15:11] Design Release Number - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MAJOR</name>
              <description>[10:8] Major Revision Number - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Indicates a special version of the module. May not be  supported  by standard software - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MINOR</name>
              <description>[5:0] Minor revision number. - (RO  )</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCNTSEED0</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Seed value for the counter attached to  clock source 0</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>COUNTSEED0</name>
              <description>[19:0] The seed value for Counter 0. The seed value that gets  loaded into counter 0 (clock  source 0)</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCVALIDSEED0</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Seed value for the timeout counter  attached to clock source 0</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>VALIDSEED0</name>
              <description>[15:0] The seed value for Valid Duration Counter 0.The seed value  that gets loaded into the valid duration counter for clock  source 0</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCNTSEED1</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Seed value for the counter attached to  clock source 1</description>
          <fields>
            <field>
              <name>NU5</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>COUNTSEED1</name>
              <description>[19:0] The seed value for Counter 1. The seed value that gets  loaded into counter 1 (clock  source 1</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCSTAT</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Contains the error &amp; done flag bit</description>
          <fields>
            <field>
              <name>NU6</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DONE</name>
              <description>[1:1] Indicates whether or not an done has occured. Writing a 1 to this bit clears  the flag.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ERR</name>
              <description>[0:0] Indicates whether or not an error has occured. Writing a 1 to this bit clears  the flag.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCNT0</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Value of the counter attached to clock  source 0</description>
          <fields>
            <field>
              <name>NU7</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>COUNT0</name>
              <description>[19:0] This field contains the current value of counter 0. - (RO   )</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCVALID0</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>Value of the valid counter attached to  clock source 0</description>
          <fields>
            <field>
              <name>NU8</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>VALID0</name>
              <description>[15:0] This field contains the current value of valid counter 0. -  (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCNT1</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>Value of the counter attached to clock  source 1</description>
          <fields>
            <field>
              <name>NU9</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>COUNT1</name>
              <description>[19:0] This field contains the current value of counter 1. - (RO   )</description>
              <bitWidth>20</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCLKSSRC1</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>Clock source1 selection control</description>
          <fields>
            <field>
              <name>NU11</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>KEY_B4</name>
              <description>[15:12] Key Programing (1010 is the KEY Value)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NU10</name>
              <description>[11:4] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CLK_SRC1</name>
              <description>[3:0] RCOSC                                            Input1_clksrc[10] CANFD_GCM                                         Input1_clksrc[9] APPSS_GCM                                         Input1_clksrc[8] OSC_CLK                                             Input1_clksrc[7] LIN_CLK                                               Input1_clksrc[6] MDLL_CLK                                                    Input1_clksrc[5] SYNTH_CLK                                         Input1_clksrc[4] RAMPGEN/DFE CLK                                     Input1_clksrc[3] GPADC CLK                                                  Input1_clksrc[2] FECSS_GCM                                         Input1_clksrc[1] fast_clk(muxed apll and pll_dig_clk )(root mux)  Input1_clksrc[0]</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCCLKSSRC0</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>Clock source0 selection control</description>
          <fields>
            <field>
              <name>NU13</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>KEY_B4</name>
              <description>[15:12] Key Programing (1010 is the KEY Value)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NU12</name>
              <description>[11:4] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CLK_SRC0</name>
              <description>[3:0] APLL clock 400MHz         Input0_clksrc[2] PLL_DIG clock 400MHz Input0_clksrc[1] OSC_CLK                      Input0_clksrc[0]</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCGCTRL2</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Global control register 2</description>
          <fields>
            <field>
              <name>NU13</name>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>FIFO_NONERR</name>
              <description>[11:8] FIFO update on Non-Error Enables/disables FIFO writes without the error event on completion of comparison window.    0101: Counter values are captured to non-full FIFO only upon Error event   Others: Write counter values to non-full FIFO upon completion of comparison window regardless of error or not.  Note this setting is applicable only in Continuous mode; in single shot mode FIFO captures counts only on Error. Note: The user should write 1010 to these enable fields to enable each feature to avoid single soft errors.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>FIFO_READ</name>
              <description>[7:4] FIFO Read Enable Enables the counter read registers reflect FIFO output instead of live counter value.    0101: Counter value is read directly.   Others:  FIFO output is read Note: The user should write 1010 to these enable fields to enable each feature to avoid single soft errors.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>CONT_ON_ERR</name>
              <description>[3:0] Continue on Error enable Continues to next window of comparison despite the error condition.   0101: Comparison and counter reload is stopped from advancing if error is detected.    Others: Counters get reloaded with seed and continue counting despite the error condition.  Note: The user should write 1010 to these enable fields to enable each feature to avoid single soft errors.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCSTATUS2</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>FIFO status register</description>
          <fields>
            <field>
              <name>NU14</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>COUNT1_FIFO_FULL</name>
              <description>[5:5] Count1 FIFO Full Indicates whether Count1 FIFO is Full.   0: Count1 FIFO is not Full   1: Count1 FIFO is Full.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>VALID0_FIFO_FULL</name>
              <description>[4:4] Valid0 FIFO Full Indicates whether Valid0 FIFO is Full.    0: Valid0 FIFO is not Full   1: Valid0 FIFO is Full.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>COUNT0_FIFO_FULL</name>
              <description>[3:3] Count0 FIFO Full Indicates whether Count0 FIFO is Full.    0: Count0 FIFO is not Full   1: Count0 FIFO is Full.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>COUNT1_FIFO_EMPTY</name>
              <description>[2:2] Count1 FIFO Empty Indicates whether Count1 FIFO is Empty.   0: Count1 FIFO is not empty   1: Count1 FIFO is empty.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>VALID0_FIFO_EMPTY</name>
              <description>[1:1] Valid0 FIFO Empty Indicates whether Valid0 FIFO is Empty.    0: Valid0 FIFO is not empty   1: Valid0 FIFO is empty.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COUNT0_FIFO_EMPTY</name>
              <description>[0:0] Count0 FIFO Empty Indicates whether Count0 FIFO is Empty.    0: Count0 FIFO is not empty   1: Count0 FIFO is empty.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCERRCNT</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Error count register</description>
          <fields>
            <field>
              <name>NU15</name>
              <description>[31:10] Reserved</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>ERRCNT</name>
              <description>[9:0] Counts the number of errors after the last write to this register or reset.  If reached terminal count the count freezes. User needs to clear it.</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_ESM</name>
      <baseAddress>0x56F7FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>220</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_ESM</description>
      <registers>
        <register>
          <name>ESMIEPSR1</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>ESM Enable ERROR Pin Action/Response Register 1</description>
          <fields>
            <field>
              <name>IEPSET</name>
              <description>[31:0] Enable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding clear bit in the ESMIEPCR1 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Enables failure influence on ERROR pin and sets the corresponding clear bit in the ESMIEPCR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPCR1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>ESM Disable ERROR Pin Action/Response Register 1</description>
          <fields>
            <field>
              <name>IEPCLR</name>
              <description>[31:0] Disable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding set bit in the ESMIEPSR1 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Disables failure influence on ERROR pin and clears the corresponding set bit in the ESMIEPSR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIESR1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Set/Status Register 1</description>
          <fields>
            <field>
              <name>INTENSET</name>
              <description>[31:0] Set interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding clear bit in the ESMIECR1 register unchanged. 1 Read: Interrupt is enabled. Write: Enables interrupt and sets the corresponding clear bit in the ESMIECR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIECR1</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Clear/Status Register 1</description>
          <fields>
            <field>
              <name>INTENCLR</name>
              <description>[31:0] Clear Interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding set bit in the ESMIESR1 register unchanged. 1 Read: Interrupt is enabled. Write: Disables interrupt and clears the corresponding set bit in the ESMIESR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILSR1</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Interrupt Level Set/Status Register 1</description>
          <fields>
            <field>
              <name>INTLVLSET</name>
              <description>[31:0] Set Interrupt Priority Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding clear bit in the ESMILCR1 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to high level interrupt line and sets the corresponding clear bit in the ESMILCR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILCR1</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Interrupt Level Clear/Status Register 1</description>
          <fields>
            <field>
              <name>INTLVLCLR</name>
              <description>[31:0] Clear Interrupt Priority. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding set bit in the ESMILSR1 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to low level interrupt line and clears the corresponding set bit in the ESMILSR1 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR1</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>ESM Status Register 1</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred; no interrupt is pending. Write: Leaves the bit unchanged. 1 Read: Error occurred; interrupt is pending. Write: Clears the bit. Note: After nRST, if one of these flags are set and the corresponding interrupt are enabled, the interrupt service routine will be called.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR2</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>ESM Status Register 2</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred; no interrupt is pending. Write: Leaves the bit unchanged. 1 Read: Error occurred; interrupt is pending. Write: Clears the bit. ESMSSR2 is not impacted by this action. Note: In normal operation the flag gets cleared when reading the appropriate vector in the ESMIOFFHR offset register. Reading ESMIOFFHR will not clear the ESMSR1 and the shadow register ESMSSR2.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR3</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>ESM Status Register 3</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred. Write: Leaves the bit unchanged. 1 Read: Error occurred. Write: Clears the bit.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMEPSR</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>ESM ERROR Pin Status Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:1] Read returns 0. Writes have no effect.</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EPSF</name>
              <description>[0:0] ERROR Pin Status Flag. Provides status information for the ERROR Pin. Read/Write in User and Privileged mode. 0 Read: ERROR Pin is low (active) if any error has occurred. Write: Writes have no effect. 1 Read: ERROR Pin is high if no error has occurred. Write: Writes have no effect. Note: This flag will be set to 1 after PORRST. The value will be unchanged after nRST. The ERROR pin status remains un-changed during after nRST.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIOFFHR</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Offset High Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:9] Read returns 0. Writes have no effect.</description>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>INTOFFH</name>
              <description>[8:0] Offset High Level Interrupt. This vector gives the channel number of the highest pending interrupt request for the high level interrupt line. Interrupts of error Group2 have higher priority than interrupts of error Group1. Inside a group, channel 0 has highest priority and channel 31 has lowest priority. User and privileged mode (read): Returns number of pending interrupt with the highest priority for the high level interrupt line. 0 No pending interrupt. 1h Interrupt pending for channel 0, error Group1. ... 20h Interrupt pending for channel 31, error Group1. 21h Interrupt pending for channel 0, error Group2. ... 40h Interrupt pending for channel 31, error Group2. 41h Interrupt pending for channel 32, error Group1. ... 60h Interrupt pending for channel 63, error Group1. Note: Reading the interrupt vector will clear the corresponding flag in the ESMSR2 register; will not clear ESMSR1 and ESMSSR2 and the offset register gets updated. User and privileged mode (write): Writes have no effect.</description>
              <bitWidth>9</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIOFFLR</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Offset Low Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Read returns 0. Writes have no effect.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>INTOFFL</name>
              <description>[7:0] Offset Low Level Interrupt. This vector gives the channel number of the highest pending interrupt request for the low level interrupt line. Inside a group, channel 0 has highest priority and channel 31 has lowest priority. User and privileged mode (read): Returns number of pending interrupt with the highest priority for the low level interrupt line. 0 No pending interrupt. 1h Interrupt pending for channel 0, error Group1. ... 20h Interrupt pending for channel 31, error Group1. 21h Interrupt pending for channel 32, error Group1. ... 60h Interrupt pending for channel 63, error Group1. Note: Reading the interrupt vector will not clear the corresponding flag in the ESMSR1 register. Group2 interrupts are fixed to the high level interrupt line only. User and privileged mode (write): Writes have no effect.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMLTCR</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>ESM Low-Time Counter Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:16] Read returns 0. Writes have no effect.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>LTCP</name>
              <description>[15:0] ERROR Pin Low-Time Counter 16bit pre-loadable down-counter to control low-time of ERROR pin. The low-time counter is triggered by the peripheral clock (VCLK). Note: Low time counter is set to the default preload value of the ESMLTCPR in the following cases: 1. Reset (power on reset or warm reset) 2. An error occurs 3. User forces an error</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMLTCPR</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>ESM Low-Time Counter Preload Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:16] Read returns 0. Writes have no effect.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>LTCP</name>
              <description>[15:0] ERROR Pin Low-Time Counter Pre-load Value 16bit pre-load value for the ERROR pin low-time counter. Note: Only LTCP.15 and LTCP.14 are configurable (privileged mode write).</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMEKR</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>ESM Error Key Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:4] Read returns 0. Writes have no effect.</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>EKEY</name>
              <description>[3:0] Error Key. The key to reset the ERROR pin or to force an error on the ERROR pin. User and privileged mode (read): Returns current value of the EKEY. Privileged mode (write): 0 Activates normal mode (recommended default mode). Ah Forces error on ERROR pin. 5h The ERROR pin set to high when the low time counter (LTC) has completed; then the EKEY bit will switch back to normal mode (EKEY = 0000) All other values Activates normal mode.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSSR2</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>ESM Status Shadow Register 2</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Shadow register for status information on pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred. Write: Leaves the bit unchanged. 1 Read: Error occurred. Write: Clears the bit. ESMSR2 is not impacted by this action. Note: Errors are stored until they are cleared by the software or at power-on reset (PORRST).</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPSR4</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>ESM Enable ERROR Pin Action/Response Register 4</description>
          <fields>
            <field>
              <name>IEPSET</name>
              <description>[31:0] Enable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding clear bit in the ESMIEPCR4 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Enables failure influence on ERROR pin and sets the corresponding clear bit in the ESMIEPCR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPCR4</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>ESM Disable ERROR Pin Action/Response Register 4</description>
          <fields>
            <field>
              <name>IEPCLR</name>
              <description>[31:0] Disable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding set bit in the ESMIEPSR4 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Disables failure influence on ERROR pin and clears the corresponding set bit in the ESMIEPSR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIESR4</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Set/Status Register 4</description>
          <fields>
            <field>
              <name>INTENSET</name>
              <description>[31:0] Set interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding clear bit in the ESMIECR4 register unchanged. 1 Read: Interrupt is enabled. Write: Enables interrupt and sets the corresponding clear bit in the ESMIECR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIECR4</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Clear/Status Register 4</description>
          <fields>
            <field>
              <name>INTENCLR</name>
              <description>[31:0] Clear Interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding set bit in the ESMIESR4 register unchanged. 1 Read: Interrupt is enabled. Write: Disables interrupt and clears the corresponding set bit in the ESMIESR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILSR4</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>Interrupt Level Set/Status Register 4</description>
          <fields>
            <field>
              <name>INTLVLSET</name>
              <description>[31:0] Set Interrupt Priority Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding clear bit in the ESMILCR4 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to high level interrupt line and sets the corresponding clear bit in the ESMILCR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILCR4</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>Interrupt Level Clear/Status Register 4</description>
          <fields>
            <field>
              <name>INTLVLCLR</name>
              <description>[31:0] Clear Interrupt Priority. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding set bit in the ESMILSR4 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to low level interrupt line and clears the corresponding set bit in the ESMILSR4 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR4</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>ESM Status Register 4</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred; no interrupt is pending. Write: Leaves the bit unchanged. 1 Read: Error occurred; interrupt is pending. Write: Clears the bit. Note: After nRST, if one of these flags are set and the corresponding interrupt are enabled, the interrupt service routine will be called.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPSR7</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>ESM Enable ERROR Pin Action/Response Register 7</description>
          <fields>
            <field>
              <name>IEPSET</name>
              <description>[31:0] Enable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding clear bit in the ESMIEPCR7 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Enables failure influence on ERROR pin and sets the corresponding clear bit in the ESMIEPCR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPCR7</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>ESM Disable ERROR Pin Action/Response Register 7</description>
          <fields>
            <field>
              <name>IEPCLR</name>
              <description>[31:0] Disable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding set bit in the ESMIEPSR7 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Disables failure influence on ERROR pin and clears the corresponding set bit in the ESMIEPSR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIESR7</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Set/Status Register 7</description>
          <fields>
            <field>
              <name>INTENSET</name>
              <description>[31:0] Set interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding clear bit in the ESMIECR7 register unchanged. 1 Read: Interrupt is enabled. Write: Enables interrupt and sets the corresponding clear bit in the ESMIECR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIECR7</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Clear/Status Register 7</description>
          <fields>
            <field>
              <name>INTENCLR</name>
              <description>[31:0] Clear Interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding set bit in the ESMIESR7 register unchanged. 1 Read: Interrupt is enabled. Write: Disables interrupt and clears the corresponding set bit in the ESMIESR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILSR7</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>Interrupt Level Set/Status Register 7</description>
          <fields>
            <field>
              <name>INTLVLSET</name>
              <description>[31:0] Set Interrupt Priority Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding clear bit in the ESMILCR7 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to high level interrupt line and sets the corresponding clear bit in the ESMILCR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILCR7</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>Interrupt Level Clear/Status Register 7</description>
          <fields>
            <field>
              <name>INTLVLCLR</name>
              <description>[31:0] Clear Interrupt Priority. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding set bit in the ESMILSR7 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to low level interrupt line and clears the corresponding set bit in the ESMILSR7 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR7</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>ESM Status Register 7</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred; no interrupt is pending. Write: Leaves the bit unchanged. 1 Read: Error occurred; interrupt is pending. Write: Clears the bit. Note: After nRST, if one of these flags are set and the corresponding interrupt are enabled, the interrupt service routine will be called.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPSR10</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>ESM Enable ERROR Pin Action/Response Register 10</description>
          <fields>
            <field>
              <name>IEPSET</name>
              <description>[31:0] Enable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding clear bit in the ESMIEPCR10 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Enables failure influence on ERROR pin and sets the corresponding clear bit in the ESMIEPCR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIEPCR10</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>ESM Disable ERROR Pin Action/Response Register 10</description>
          <fields>
            <field>
              <name>IEPCLR</name>
              <description>[31:0] Disable ERROR Pin Action/Response on Group 1. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Failure on channel x has no influence on ERROR pin. Write: Leaves the bit and the corresponding set bit in the ESMIEPSR10 register unchanged. 1 Read: Failure on channel x has influence on ERROR pin. Write: Disables failure influence on ERROR pin and clears the corresponding set bit in the ESMIEPSR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIESR10</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Set/Status Register 10</description>
          <fields>
            <field>
              <name>INTENSET</name>
              <description>[31:0] Set interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding clear bit in the ESMIECR10 register unchanged. 1 Read: Interrupt is enabled. Write: Enables interrupt and sets the corresponding clear bit in the ESMIECR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMIECR10</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>ESM Interrupt Enable Clear/Status Register 10</description>
          <fields>
            <field>
              <name>INTENCLR</name>
              <description>[31:0] Clear Interrupt Enable Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt is disabled. Write: Leaves the bit and the corresponding set bit in the ESMIESR10 register unchanged. 1 Read: Interrupt is enabled. Write: Disables interrupt and clears the corresponding set bit in the ESMIESR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILSR10</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>Interrupt Level Set/Status Register 10</description>
          <fields>
            <field>
              <name>INTLVLSET</name>
              <description>[31:0] Set Interrupt Priority Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding clear bit in the ESMILCR10 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to high level interrupt line and sets the corresponding clear bit in the ESMILCR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMILCR10</name>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <description>Interrupt Level Clear/Status Register 10</description>
          <fields>
            <field>
              <name>INTLVLCLR</name>
              <description>[31:0] Clear Interrupt Priority. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: Interrupt of channel x is mapped to low level interrupt line. Write: Leaves the bit and the corresponding set bit in the ESMILSR10 register unchanged. 1 Read: Interrupt of channel x is mapped to high level interrupt line. Write: Maps interrupt of channel x to low level interrupt line and clears the corresponding set bit in the ESMILSR10 register.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ESMSR10</name>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <description>ESM Status Register 10</description>
          <fields>
            <field>
              <name>ESF</name>
              <description>[31:0] Error Status Flag. Provides status information on a pending error. Read in User and Privileged mode. Write in Privileged mode only. 0 Read: No error occurred; no interrupt is pending. Write: Leaves the bit unchanged. 1 Read: Error occurred; interrupt is pending. Write: Clears the bit. Note: After nRST, if one of these flags are set and the corresponding interrupt are enabled, the interrupt service routine will be called.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_UART_1</name>
      <baseAddress>0x57F7F000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>148</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_UART</description>
      <registers>
        <register>
          <name>SCIGCR0</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>The SCIGCR0 register defines the module reset</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESET</name>
              <description>[0:0] GIO reset</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIGCR1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>The SCIGCR1 register defines the frame format, protocol, and communication mode used by the SCI</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>TXENA</name>
              <description>[25:25] Data is transferred from SCITD to SCITXSHF only when the TXENA bit is set</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>RXENA</name>
              <description>[24:24] Allows the receiver to transfer data from the shift buffer to the receive buffer</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:18] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CONT</name>
              <description>[17:17] This bit has an effect only when a program is being debugged with an emulator, and it  determines how the SCI operates when the program is suspended</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>LOOP_BACK</name>
              <description>[16:16] Enable bit for loopback mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>POWERDOWN</name>
              <description>[9:9] When the POWERDOWN bit is set, the SCI attempts to enter local low-power mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SLEEP</name>
              <description>[8:8] In a multiprocessor configuration, this bit controls the receive sleep function. Clearing this  bit brings the SCI out of sleep mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>SW_nRESET</name>
              <description>[7:7] Software reset (active low)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[6:6] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLOCK</name>
              <description>[5:5] SCI internal clock enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>STOP</name>
              <description>[4:4] SCI number of stop bits</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>PARITY</name>
              <description>[3:3] SCI parity odd/even selection</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>PARITY_ENA</name>
              <description>[2:2] SCI parity enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TIMING_MODE</name>
              <description>[1:1] SCI timing mode bit (0=Isosynchronous timing,1=Asynchronous timing)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>COMM_MODE</name>
              <description>[0:0] SCI communication mode bit (0=Idle-line mode, 1=Address-bit mode)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED1</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINT</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>SCI Set Interrupt Register</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SET_FE_INT</name>
              <description>[26:26] Set Framing-Error Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SET_OE_INT</name>
              <description>[25:25] Set Overrun-Error Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SET_PE_INT</name>
              <description>[24:24] Set Parity Interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA_ALL</name>
              <description>[18:18] Determines if a separate interrupt is generated for the address frames sent in multiprocessor communications User and privilege mode (read): 0 = DMA request is disabled for address frames (RX interrupt request is enabled for address frames) 1 = DMA request is enabled for address and data frames  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request for address and data frames</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA</name>
              <description>[17:17] To select receiver DMA requests, this bit must be set. If it is cleared, interrupt requests are generated depending on bit SCISETINT.9 User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>SET_TX_DMA</name>
              <description>[16:16] To select DMA requests for the transmitter, this bit must be set. If it is cleared, interrupt requests are generated depending on SET TX INT bit (SCISETINT.8) User and privilege mode (read): 0 = TX interrupt request selected 1 = TX DMA request selected  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SET_RX_INT</name>
              <description>[9:9] Receiver interrupt enable:Setting this bit enables the SCI to generate a receive interrupt after a frame has been completely received and the data is being transferred from SCIRXSHF to SCIRD. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SET_TX_INT</name>
              <description>[8:8] Set Transmitter interrupt. Setting this bit enables the SCI to generate a transmit interrupt as data is being transferred from SCITD to SCITXSHF and the TXRDY bit is being set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET_WAKEUP_INT</name>
              <description>[1:1] Set Wake-up interrupt User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SET_BRKDT_INT</name>
              <description>[0:0] Set Break-detect interrupt. Setting this bit enables the SCI to generate an error interrupt if a break condition is detected on the SCIRX pin. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINT</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>SCI Clear Interrupt Register</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLR_FE_INT</name>
              <description>[26:26] Clear Framing-Error Interrupt: Setting this bit disables the SCI module to generate an interrupt when there is a Framing error. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLR_OE_INT</name>
              <description>[25:25] Clear Overrun-Error Interrupt. This bit disables the SCI overrun interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLR_PE_INT</name>
              <description>[24:24] Clear Parity Interrupt. Setting this bit disables the SCI Parity error interrupt. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA_ALL</name>
              <description>[18:18] User and privilege mode (read): 0 = DMA request is disabled for address frames (RX interrupt request is enabled for address frames). DMA request is enabled for data frames. 1 = DMA request is enabled for address and data frames  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request for address frames</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA</name>
              <description>[17:17] Clear RX DMA request. This bit disalbes the receive DMA request when set. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CLR_TX_DMA</name>
              <description>[16:16] Clear TX DMA request. This bit disables the transmit DMA request when set. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_RX_INT</name>
              <description>[9:9] Clear Receiver interrupt. This bit disables the receiver interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLR_TX_INT</name>
              <description>[8:8] Clear Transmitter interrupt. This bit disables the transmitter interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLR_WAKEUP_INT</name>
              <description>[1:1] Clear Wake-up interrupt. This bit disables the wakeup interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR_BRKDT_INT</name>
              <description>[0:0] Clear Break-detect interrupt. This bit disables the Break-detect interrupt when set. User and privilege mode (read): 0 = Interrupt is disabled 1 = Interrupt is enabled  User and privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCISETINTLVL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>SCI Set Interrupt Level Register</description>
          <fields>
            <field>
              <name>RESERVED5</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>SET_FE_INT_LVL</name>
              <description>[26:26] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SET_OE_INT_LVL</name>
              <description>[25:25] Clear Overrun-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SET_PE_INT_LVL</name>
              <description>[24:24] Clear Parity Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED4</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>SET_RX_DMA_ALL_INT_LVL</name>
              <description>[18:18] User and privilege mode (read): 0 = RX interrupt request for address frames mapped to INT0 line. 1 = RX interrupt request for address frames mapped to INT1 line.  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>SET_INC_BR_INT_LVL</name>
              <description>[15:15] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[14:10] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SET_RX_INT_LVL</name>
              <description>[9:9] Clear Receiver interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SET_TX_INT_LVL</name>
              <description>[8:8] Clear Transmitter interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SET_WAKEUP_INT_LVL</name>
              <description>[1:1] Clear Wake-up interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SET_BRKDT_INT_LVL</name>
              <description>[0:0] Clear Break-detect interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Clear interrupt level to line INT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICLEARINTLVL</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>SCI Clear Interrupt Level Register</description>
          <fields>
            <field>
              <name>RESERVED5</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CLR_FE_INT_LVL</name>
              <description>[26:26] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CLR_OE_INT_LVL</name>
              <description>[25:25] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CLR_PE_INT_LVL</name>
              <description>[24:24] Clear Framing-Error Interrupt Level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED4</name>
              <description>[23:19] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CLR_RX_DMA_ALL_INT_LVL</name>
              <description>[18:18] Clear receive DMA ALL interrupt level. User and privilege mode (read): 0 = RX interrupt request for address frames is mapped to INT0 line. 1 = RX interrupt request for address frames is mapped to INT1 line.  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged. 1 = Reset interrupt level to line INT0.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[17:16] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CLR_INC_BR_INT_LVL</name>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[14:10] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLR_RX_INT_LVL</name>
              <description>[9:9] Clear Receiver interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CLR_TX_INT_LVL</name>
              <description>[8:8] Clear Transmitter interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CLR_WAKEUP_INT_LVL</name>
              <description>[1:1] Clear Wake-up interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLR_BRKDT_INT_LVL</name>
              <description>[0:0] Clear Break-detect interrupt level. User and privilege mode (read): 0 = Interrupt level mapped to INT0 line 1 = Interrupt level mapped to INT1 line  User and privilege mode (write): 0 = Leaves the corresponding bit unchanged 1 = Reset interrupt level to line INT0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIFLR</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>SCI Flags Register</description>
          <fields>
            <field>
              <name>RESERVED3</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FE</name>
              <description>[26:26] SCI framing error flag Read: 0=No framing error detected 1=Framing error detected Write: 0=No effect 1=Clears this bit to 0</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>OE</name>
              <description>[25:25] SCI overrun error flag This bit is set when the transfer of data from SCIRXSHF to SCIRD overwrites unread data already in SCIRD</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>PE</name>
              <description>[24:24] SCI parity error flag. This bit is set when a parity error is detected in the received data</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[23:13] Reserved</description>
              <bitWidth>11</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>RXWAKE</name>
              <description>[12:12] Receiver wake-up detect flag. The SCI sets this bit to indicate that the data currently in SCIRD is an address</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>[11:11] Transmitter empty flag. The value of this flag indicates the contents of the transmitterΓÇÖs buffer register (SCITD) and shift register (SCITXSHF)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TXWAKE</name>
              <description>[10:10] SCI transmitter wake-up method select. The TXWAKE bit controls whether the data in SCITD should be sent as an address or data frame using multiprocessor communication format</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>RXRDY</name>
              <description>[9:9] SCI receiver ready flag. The receiver sets this bit to indicate that the SCIRD contains new data and is ready to be read by the CPU or DMA.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TXRDY</name>
              <description>[8:8] Transmitter buffer register ready flag. When set, this bit indicates that the transmit buffer register (SCITD) is ready to receive another character.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:4] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>Bus_busy_flag</name>
              <description>[3:3] This bit indicates whether the receiver is in the process of receiving a frame.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>IDLE</name>
              <description>[2:2] SCI receiver in idle state. While this bit is set, the SCI looks for an idle period to resynchronize itself with the bit stream.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WAKEUP</name>
              <description>[1:1] Wake-up flag. This bit is set by the SCI when receiver or transmitter activity has taken the module out of power-down mode.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>BRKDT</name>
              <description>[0:0] SCI break-detect flag. This bit is set when the SCI detects a break condition on the SCIRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT0</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>SCI Interrupt Offset Vector 0 Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTVECT0</name>
              <description>[3:0] Interrupt vector offset for INT0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIINTVECT1</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>SCI Interrupt Offset Vector 1 Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:4] Reserved</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>INTVECT1</name>
              <description>[3:0] Interrupt vector offset for INT1</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCICHAR</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>SCI Character Control Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CHAR</name>
              <description>[2:0] Sets the SCI data length from 1 to 8 bits</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIBAUD</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>SCI Baud Rate Selection Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>BAUD</name>
              <description>[23:0] SCI 24-bit baud selection</description>
              <bitWidth>24</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIED</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Receiver Emulation Data Buffer</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ED</name>
              <description>[7:0] Receiver Emulation Data Buffer</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIRD</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Receiver Data Buffer</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RD</name>
              <description>[7:0] Contains received data.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCITD</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Transmit Data Buffer Register</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TD</name>
              <description>[7:0] Contains Data to be transmitted. This is pushed to SCITXSHF(shift register) when TXENA bit is set in SCRGCR1 register.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO0</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 0</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_FUNC</name>
              <description>[2:2] Defines the function of pin SCITX. 0=SCITX is a general-purpose digital I/O pin. 1=SCITX is the SCI transmit pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_FUNC</name>
              <description>[1:1] Determines the data direction on the SCIRX pin if it is configured with general-purpose I/O functionality (RX FUNC = 0). See Table 12 for bit values. 0=SCIRX is a general-purpose input pin. 1=SCIRX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_FUNC</name>
              <description>[0:0] Clock function. Defines the function of pin SCICLK. 0=SCICLK is a general-purpose digital I/O pin. 1=SCICLK is the SCI serial clock pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 1</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DIR</name>
              <description>[2:2] Determines the data direction on the SCITX pin if it is configured with general-purpose I/O functionality (TX FUNC = 0). See Table 11 for bit values. 0=SCITX is a general-purpose input pin. 1=SCITX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DIR</name>
              <description>[1:1] Determines the data direction on the SCIRX pin if it is configured with general-purpose I/O functionality (RX FUNC = 0). See Table 12 for bit values. 0=SCIRX is a general-purpose input pin. 1=SCIRX is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DIR</name>
              <description>[0:0] Clock data direction. Determines the data direction on the SCICLK pin. The direction is defined differently depending upon the value of the CLK FUNC bit 0=SCICLK is a general-purpose input pin. 1=SCICLK is a general-purpose output pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO2</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 2</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_IN</name>
              <description>[2:2] Contains current value on the SCITX pin. 0=SCITX value is logic low. 1=SCITX value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_IN</name>
              <description>[1:1] Contains current value on the SCIRX pin. 0=SCIRX value is logic low. 1=SCIRX value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_IN</name>
              <description>[0:0] Contains the current value on pin SCICLK. 0=Pin SCICLK value is logic low. 1=Pin SCICLK value is logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO3</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 3</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_OUT</name>
              <description>[2:2] Contains the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX DATA DIR = 1 (SCITX pin is a general-purpose output.) 0=Output value on SCITX is a 0 (logic low). 1=Output value on SCITX is a 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_OUT</name>
              <description>[1:1] Contains the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCIRX pin is a general-purpose I/O.) RX DATA DIR = 1 (SCIRX pin is a general-purpose output.) 0=Output value on SCIRX is 0 (logic low). 1=Output value on SCIRX is 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_OUT</name>
              <description>[0:0] Contains the data to be output on pin SCICLK if the following conditions are met: CLK FUNC = 0 (SCICLK pin is a general-purpose I/O.) CLK DATA DIR = 1 (SCICLK pin is a general-purpose output.) 0=Output value on SCICLK is a 0 (logic low). 1=Output value on SCICLK is a 1 (logic high).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO4</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 4</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_SET</name>
              <description>[2:2] Sets the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX  DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_SET</name>
              <description>[1:1] Sets the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCIRX pin is a general-purpose I/O.) RX DIR = 1 (SCIRX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_SET</name>
              <description>[0:0] Sets the data to be output on pin SCICLK if the following conditions are met: CLK FUNC = 0 (SCICLK pin is a general-purpose I/O.) CLK DIR = 1 (SCICLK pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO5</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 5</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_DATA_CLR</name>
              <description>[2:2] Clears the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX  DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_DATA_CLR</name>
              <description>[1:1] Clears the data to be output on pin SCIRX if the following conditions are met: RX FUNC = 0 (SCITX pin is a general-purpose I/O.) RX DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_DATA_CLR</name>
              <description>[0:0] Clears the data to be output on pin SCITX if the following conditions are met: TX FUNC = 0 (SCITX pin is a general-purpose I/O.) TX DIR = 1 (SCITX pin is a general-purpose output.)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO6</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 6</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PDR</name>
              <description>[2:2] TX Open Drain Enable Enables open-drain capability in the output pin SCITX if the following conditions are met: TX DATA DIR = 1 (SCITX pin is a general-purpose output.) TX DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PDR</name>
              <description>[1:1] RX Open Drain Enable Enables open-drain capability in the output pin SCIRX if the following conditions are met: RX DATA DIR = 1 (SCIRX pin is a general-purpose output.) RX DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PDR</name>
              <description>[0:0] CLK Open Drain Enable Enables open-drain capability in the output pin SCICLK if the following conditions are met: CLK DATA DIR = 1 (SCICLK pin is a general-purpose output.) CLK DOUT = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO7</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 7</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PD</name>
              <description>[2:2] TX pin Pull Control Disable Disables pull control capability in the output pin SCITX. 0=Pull Control on SCITX pin is enabled. 1=Pull Control on SCITX pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PD</name>
              <description>[1:1] RX pin Pull Control Disable Disables pull control capability in the output pin SCIRX. 0=Pull Control on SCIRX pin is enabled. 1=Pull Control on SCIRX pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PD</name>
              <description>[0:0] CLK pin Pull Control Disable Disables pull control capability in the output pin SCICLK. 0=Pull Control on SCICLK pin is enabled. 1=Pull Control on SCICLK pin is disabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO8</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 8</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_PSL</name>
              <description>[2:2] TX pin Pull Select Selects pull type in the output pin SCITX. 0=Pull-Down is on SCITX pin. 1=Pull-Up is on SCITX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_PSL</name>
              <description>[1:1] RX pin Pull Select Selects pull type in the output pin SCIRX. 0=Pull-Down is on SCIRX pin. 1=Pull-Up is on SCIRX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_PSL</name>
              <description>[0:0] CLK pin Pull Select Selects pull type in the output pin SCICLK. 0=Pull-Down is on SCICLK pin. 1=Pull-Up is on SCICLK pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED2</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED3</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED4</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED5</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED6</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED7</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED8</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED9</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIPIO9</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>SCI Pin I/O Control Register 9</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:3] Reserved</description>
              <bitWidth>29</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TX_SL</name>
              <description>[2:2] This bit controls the slew rate for the SCITX pin. 0=The normal output buffer is used for SCITX pin 1=The output buffer with slew control is used for SCITX pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>RX_SL</name>
              <description>[1:1] This bit controls the slew rate for the SCIRX pin. 0=The normal output buffer is used for SCIRX pin 1=The output buffer with slew control is used for SCIRX pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CLK_SL</name>
              <description>[0:0] This bit controls the slew rate for the SCICLK pin. 0=The normal output buffer is used for SCICLK pin 1=The output buffer with slew control is used for SCICLK pin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SCIIODCTRL</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>SCI IO DFT Control</description>
          <fields>
            <field>
              <name>RESERVED4</name>
              <description>[31:27] Reserved</description>
              <bitWidth>5</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>FEN</name>
              <description>[26:26] Frame Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create a Frame Error. The stop bit received is ANDed with ΓÇÖ0ΓÇÖ and passed to the stop bit check circuitry. 0 = No effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>PEN</name>
              <description>[25:25] Parity Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create a Parity Error. The parity bit received is toggled so that a parity error occurs. 0 = No effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>BRKDT_ENA</name>
              <description>[24:24] Break Detect Error Enable. User and Privileged Mode Reads and Writes: 1 = This bit is used to create BRKDT Error. The stop bit of the frame is ANDed with ΓÇÿ0ΓÇÖ and passed to the RSM so that a frame error occurs. Then the RX pin is forced to continuous low for 10 TBITS so that a BRKDT error occurs. 0 = No effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RESERVED3</name>
              <description>[23:21] Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>PIN_SAMPLE_MASK</name>
              <description>[20:19] PIN SAMPLE MASK These bits define the sample number at which the TX Pin value that is being transmitted will be inverted to verify the receive pin samples majority detection circuitry. PIN SAMPLE MASK: 00 -- No Mask, 01 -- Invert the TX Pin value at 7th SCLK, 10 -- Invert the TX Pin value at 8th SCLK, 11 -- Invert the TX Pin value at 9th SCLK.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TX_SHIFT</name>
              <description>[18:16] These bits define the delay by which the value on TX pin is delayed so that the value on RX Pin is asynchronous. (Not applicable to Start Bit) TX SHIFT: 000 -- No Delay, 001 -- Delay by 1 SCLK, 010 -- Delay by 2 SCLKs, 011 -- Delay by 3 SCLKs, 100 -- Delay by 4 SCLKs, 101 -- Delay by 5 SCLKs, 110 -- Delay by 6 SCLKs, 111 -- No Delay.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED2</name>
              <description>[15:12] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>IODFTENA</name>
              <description>[11:8] These bits define the delay by which the value on TX pin is delayed so that the value on RX Pin is asynchronous. (Not applicable to Start Bit) TX SHIFT: 000 -- No Delay, 001 -- Delay by 1 SCLK, 010 -- Delay by 2 SCLKs, 011 -- Delay by 3 SCLKs, 100 -- Delay by 4 SCLKs, 101 -- Delay by 5 SCLKs, 110 -- Delay by 6 SCLKs, 111 -- No Delay.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED1</name>
              <description>[7:2] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>LBP_ENA</name>
              <description>[1:1] Module loopback enable. user and privileged mode reads: Write only in privileged mode: write/read : 1=Analog loopback is enabled in module I/O DFT mode(when IODFTENA = 1010) 0=Digital loopback is enabled.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXP_ENA</name>
              <description>[0:0] Module Analog loopback through receive pin enable. user and privileged mode reads: Write only in privileged mode: write/read : 1=Analog loopback through receive pin. 0=Analog loopback through transmit pin.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_SPI_1</name>
      <baseAddress>0x57F7F400</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>420</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_SPI</description>
      <registers>
        <register>
          <name>HL_REV</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>IP Revision Identifier (X.Y.R) Used by software to track  features bugs and compatibility</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] Used to distinguish between old scheme and current - (RO   )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>RSVD</name>
              <description>[29:28] Reserved These bits are initialized to zero and writes to  them are ignored - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] Function indicates a software compatible module family If  there is no level of software compatibility a new Func  number [and hence REVISION] should be assigned - (RO  )</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>R_RTL</name>
              <description>[15:11] RTL Version [R] maintained by IP design owner RTL follows a  numbering such as XYRZ which are explained in this table R  changes ONLY when: [1] PDS uploads occur which may have been  due to spec changes [2] Bug fixes occur [3] Resets to '0'  when X or Y changes Design team has an internal 'Z'  [customer invisible] number which increments on every drop  that happens due to DV and RTL updates Z resets to 0 when R  increments - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>X_MAJOR</name>
              <description>[10:8] Major Revision [X] maintained by IP specification owner X  changes ONLY when: [1] There is a major feature addition An  example would be adding Master Mode to Utopia Level2 The  Func field [or Class/Type in old PID format] will remain the  same X does NOT change due to: [1] Bug fixes [2] Change in  feature parameters - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Indicates a special version for a particular device  Consequence of use may avoid use of standard Chip Support  Library [CSL] / Drivers - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Y_MINOR</name>
              <description>[5:0] Minor Revision [Y] maintained by IP specification owner Y  changes ONLY when: [1] Features are scaled [up or down]  Flexibility exists in that this feature scalability may  either be represented in the Y change or a specific register  in the IP that indicates which features are exactly  available [2] When feature creeps from Is-Not list to Is  list But this may not be the case once it sees silicon; in  which case X will change Y does NOT change due to: [1] Bug  fixes [2] Typos or clarifications [3] major  functional/feature change/addition/deletion Instead these  changes may be reflected via R S X as applicable Spec  owner maintains a customer-invisible number 'S' which  changes due to: [1] Typos/clarifications [2] Bug  documentation Note that this bug is not due to a spec change  but due to implementation Nevertheless the spec tracks the  IP bugs An RTL release [say for silicon PG11] that occurs  due to bug fix should document the corresponding spec number  [XYS] in its release notes - (RO  )</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HL_HWINFO</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Information about the IP module's hardware configuration  i.e. typically the module's HDL generics (if any). Actual  field format and encoding is up to the module's designer to  decide.</description>
          <fields>
            <field>
              <name>RSVD</name>
              <description>[31:7] Reserved These bits are initialized to zero and writes to  them are ignored - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RETMODE</name>
              <description>[6:6] This bit field indicates whether the retention mode is  supported using the pin PIRFFRET - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>FFNBYTE</name>
              <description>[5:1] FIFO number of byte generic parameter This register defines  the value of FFNBYTE generic parameter only MSB bits from 8  down to 4 are taken into account - (RO  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>USEFIFO</name>
              <description>[0:0] Use of a FIFO enable: This bit field indicates if a FIFO is  integrated within controller design with its management -  (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>HL_SYSCONFIG</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Clock management configuration</description>
          <fields>
            <field>
              <name>RSVD</name>
              <description>[31:4] Reserved - (RO  )</description>
              <bitWidth>28</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>IDLEMODE</name>
              <description>[3:2] Configuration of the local target state management mode By  definition target can handle read/write transaction as long  as it is out of IDLE state - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>FREEEMU</name>
              <description>[1:1] Sensitivity to emulation [debug] suspend input signal - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SOFTRESET</name>
              <description>[0:0] Software reset [Optional] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>REVISION</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>This register contains the hard coded RTL revision number.</description>
          <fields>
            <field>
              <name>RESERVED_13</name>
              <description>[31:8] Reads returns 0 - (RO  )</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>REV</name>
              <description>[7:0] IP revision [7:4] Major revision [3:0] Minor revision  Examples: 0x10 for 10 0x21 for 21 - (RO</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYSCONFIG</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>This register allows controlling various parameters of the  OCP interface.</description>
          <fields>
            <field>
              <name>RESERVED_14</name>
              <description>[31:10] Reads returns 0 - (RO  )</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CLOCKACTIVITY</name>
              <description>[9:8] Clocks activity during wake up mode period - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_15</name>
              <description>[7:5] Reads returns 0 - (RO  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SIDLEMODE</name>
              <description>[4:3] Power management - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ENAWAKEUP</name>
              <description>[2:2] WakeUp feature control - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SOFTRESET</name>
              <description>[1:1] Software reset During reads it always returns 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AUTOIDLE</name>
              <description>[0:0] Internal OCP Clock gating strategy - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYSSTATUS</name>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <description>This register provides status information about the module  excluding the interrupt status information</description>
          <fields>
            <field>
              <name>RESERVED_16</name>
              <description>[31:1] Reserved for module specific status information Read returns  0 - (RO  )</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESETDONE</name>
              <description>[0:0] Internal Reset Monitoring - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IRQSTATUS</name>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <description>The interrupt status regroups all the status of the module  internal events that can generate an interrupt</description>
          <fields>
            <field>
              <name>RESERVED_8</name>
              <description>[31:18] Reads returns 0 - (RO  )</description>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>EOW</name>
              <description>[17:17] End of word count event when a channel is enabled using the  FIFO buffer and the channel had sent the number of SPI word  defined by MCSPI_XFERLEVEL[WCNT]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>WKS</name>
              <description>[16:16] Wake Up event in slave mode when an active control signal is  detected on the SPIEN line programmed in the field  MCSPI_CH0CONF[SPIENSLV]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED_7</name>
              <description>[15:15] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RX3_FULL</name>
              <description>[14:14] Receiver register is full or almost full Only when Channel 3  is enabled  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TX3_UNDERFLOW</name>
              <description>[13:13] Transmitter register underflow Only when Channel 3 is  enabled The transmitter register is empty [not updated by  Host or DMA with new data] before its time slot assignment  Exception: No TX_underflow event when no data has been  loaded into the transmitter register since channel has been  enabled  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TX3_EMPTY</name>
              <description>[12:12] Transmitter register is empty or almost empty Note: Enabling  the channel automatically rises this event  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED_9</name>
              <description>[11:11] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>RX2_FULL</name>
              <description>[10:10] Receiver register full or almost full Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TX2_UNDERFLOW</name>
              <description>[9:9] Transmitter register underflow Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TX2_EMPTY</name>
              <description>[8:8] Transmitter register empty or almost empty Channel 2  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_10</name>
              <description>[7:7] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RX1_FULL</name>
              <description>[6:6] Receiver register full or almost full Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TX1_UNDERFLOW</name>
              <description>[5:5] Transmitter register underflow Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TX1_EMPTY</name>
              <description>[4:4] Transmitter register empty or almost empty Channel 1  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RX0_OVERFLOW</name>
              <description>[3:3] Receiver register overflow [slave mode only] Channel 0  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RX0_FULL</name>
              <description>[2:2] Receiver register full or almost full Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TX0_UNDERFLOW</name>
              <description>[1:1] Transmitter register underflow Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TX0_EMPTY</name>
              <description>[0:0] Transmitter register empty or almost empty Channel 0  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IRQENABLE</name>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <description>This register allows to enable/disable the module internal  sources of interrupt on an event-by-event basis.</description>
          <fields>
            <field>
              <name>RESERVED_5</name>
              <description>[31:18] Reads return 0 - (RO  )</description>
              <bitWidth>14</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>EOW_ENABLE</name>
              <description>[17:17] End of Word count Interrupt Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>WKE</name>
              <description>[16:16] Wake Up event interrupt Enable in slave mode when an active  control signal is detected on the SPIEN line programmed in  the field MCSPI_CH0CONF[SPIENSLV] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RESERVED_4</name>
              <description>[15:15] Reads returns 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>RX3_FULL_ENABLE</name>
              <description>[14:14] Receiver register Full Interrupt Enable Ch 3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TX3_UNDERFLOW_ENABLE</name>
              <description>[13:13] Transmitter register Underflow Interrupt Enable Ch 3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TX3_EMPTY_ENABLE</name>
              <description>[12:12] Transmitter register Empty Interrupt Enable Ch3 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RESERVED_6</name>
              <description>[11:11] Reads return 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>RX2_FULL_ENABLE</name>
              <description>[10:10] Receiver register Full Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TX2_UNDERFLOW_ENABLE</name>
              <description>[9:9] Transmitter register Underflow Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TX2_EMPTY_ENABLE</name>
              <description>[8:8] Transmitter register Empty Interrupt Enable Ch 2 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_3</name>
              <description>[7:7] Reads return 0 - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RX1_FULL_ENABLE</name>
              <description>[6:6] Receiver register Full Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TX1_UNDERFLOW_ENABLE</name>
              <description>[5:5] Transmitter register Underflow Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TX1_EMPTY_ENABLE</name>
              <description>[4:4] Transmitter register Empty Interrupt Enable Ch 1 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>RX0_OVERFLOW_ENABLE</name>
              <description>[3:3] Receiver register Overflow Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RX0_FULL_ENABLE</name>
              <description>[2:2] Receiver register Full Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TX0_UNDERFLOW_ENABLE</name>
              <description>[1:1] Transmitter register Underflow Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TX0_EMPTY_ENABLE</name>
              <description>[0:0] Transmitter register Empty Interrupt Enable Ch 0 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WAKEUPENABLE</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>The wakeup enable register allows to enable/disable the  module internal sources of wakeup on event-by-event basis.</description>
          <fields>
            <field>
              <name>RESERVED_18</name>
              <description>[31:1] Reads returns 0 - (RO  )</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>WKEN</name>
              <description>[0:0] WakeUp functionality in slave mode when an active control  signal is detected on the SPIEN line programmed in the field  MCSPI_CH0CONF[SPIENSLV] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYST</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>This register is used to check the correctness of the system  interconnect either internally to peripheral bus or  externally to device IO pads when the module is configured  in system test (SYSTEST) mode.</description>
          <fields>
            <field>
              <name>RESERVED_17</name>
              <description>[31:12] Reads returns 0 - (RO  )</description>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>SSB</name>
              <description>[11:11] Set status bit - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>SPIENDIR</name>
              <description>[10:10] Set the direction of the SPIEN[3:0] lines and SPICLK line -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>SPIDATDIR1</name>
              <description>[9:9] Set the direction of the SPIDAT[1] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>SPIDATDIR0</name>
              <description>[8:8] Set the direction of the SPIDAT[0] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>WAKD</name>
              <description>[7:7] SWAKEUP output [signal data value of internal signal to  system] The signal is driven high or low according to the  value written into this register bit - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>SPICLK</name>
              <description>[6:6] SPICLK line [signal data value] If MCSPI_SYST[SPIENDIR] = 1  [input mode direction] this bit returns the value on the  CLKSPI line [high or low] and a write into this bit has no  effect If MCSPI_SYST[SPIENDIR] = 0 [output mode direction]  the CLKSPI line is driven high or low according to the value  written into this register - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>SPIDAT_1</name>
              <description>[5:5] SPIDAT[1] line [signal data value] If MCSPI_SYST[SPIDATDIR1]  = 0 [output mode direction] the SPIDAT[1] line is driven  high or low according to the value written into this  register If MCSPI_SYST[SPIDATDIR1] = 1 [input mode  direction] this bit returns the value on the SPIDAT[1] line  [high or low] and a write into this bit has no effect  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>SPIDAT_0</name>
              <description>[4:4] SPIDAT[0] line [signal data value] If MCSPI_SYST[SPIDATDIR0]  = 0 [output mode direction] the SPIDAT[0] line is driven  high or low according to the value written into this  register If MCSPI_SYST[SPIDATDIR0] = 1 [input mode  direction] this bit returns the value on the SPIDAT[0] line  [high or low] and a write into this bit has no effect  -  (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SPIEN_3</name>
              <description>[3:3] SPIEN[3] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[3] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[3] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>SPIEN_2</name>
              <description>[2:2] SPIEN[2] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[2] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[2] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>SPIEN_1</name>
              <description>[1:1] SPIEN[1] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[1] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[1] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SPIEN_0</name>
              <description>[0:0] SPIEN[0] line [signal data value] If MCSPI_SYST[SPIENDIR] =  0 [output mode direction] the SPIENT[0] line is driven high  or low according to the value written into this register If  MCSPI_SYST[SPIENDIR] = 1 [input mode direction] this bit  returns the value on the SPIEN[0] line [high or low] and a  write into this bit has no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MODULCTRL</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  serial port interface.</description>
          <fields>
            <field>
              <name>RESERVED_11</name>
              <description>[31:9] Reads returns 0 - (RO  )</description>
              <bitWidth>23</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>FDAA</name>
              <description>[8:8] FIFO DMA Address 256-bit aligned This register is used when  a FIFO is managed by the module and DMA connected to the  controller provides only 256 bit aligned address If this bit  is set the enabled channel which uses the FIFO has its datas  managed through MCSPI_DAFTX and MCSPI_DAFRX registers  instead of MCSPI_TX[i] and MCSPI_RX[i] registers - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>MOA</name>
              <description>[7:7] Multiple word ocp access: This register can only be used  when a channel is enabled using a FIFO It allows the system  to perform multiple SPI word access for a single 32-bit OCP  word access This is possible for WL &lt; 16 - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>INITDLY</name>
              <description>[6:4] Initial spi delay for first transfer: This register is an  option only available in SINGLE master mode The controller  waits for a delay to transmit the first spi word after  channel enabled and corresponding TX register filled This  Delay is based on SPI output frequency clock No clock  output provided to the boundary and chip select is not  active in 4 pin mode within this period  - (RW  )</description>
              <bitWidth>3</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>SYSTEM_TEST</name>
              <description>[3:3] Enables the system test mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>MS</name>
              <description>[2:2] Master/ Slave  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PIN34</name>
              <description>[1:1] Pin mode selection: This register is used to configure the  SPI pin mode in master or slave mode If asserted the  controller only use SIMOSOMI and SPICLK clock pin for spi  transfers - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>SINGLE</name>
              <description>[0:0] Single channel / Multi Channel [master mode only] - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0CONF</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 0</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS0</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>SPIENSLV</name>
              <description>[22:21] Channel 0 only and slave mode only: SPI slave select signal  detection Reserved bits for other cases - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0STAT</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 0</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH0CTRL</name>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 0</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX0</name>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 0 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX0</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 0 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1CONF</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel.</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS1</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1STAT</name>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 1</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH1CTRL</name>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 1</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX1</name>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 1 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX1</name>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 1 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2CONF</name>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 2</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS2</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2STAT</name>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 2</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH2CTRL</name>
          <addressOffset>0x15C</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 2</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX2</name>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 2 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX2</name>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 2 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3CONF</name>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <description>This register is dedicated to the configuration of the  channel 3</description>
          <fields>
            <field>
              <name>RESERVED_0</name>
              <description>[31:30] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CLKG</name>
              <description>[29:29] Clock divider granularity This register defines the  granularity of channel clock divider: power of two or one  clock cycle granularity When this bit is set the register  MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum  of 4096 clock divider ratio Then The clock divider ratio is  a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>FFER</name>
              <description>[28:28] FIFO enabled for receive:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FFEW</name>
              <description>[27:27] FIFO enabled for Transmit:Only one channel can have this bit  field set - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>TCS3</name>
              <description>[26:25] Chip Select Time Control This 2-bits field defines the  number of interface clock cycles between CS toggling and  first or last edge of SPI clock - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SBPOL</name>
              <description>[24:24] Start bit polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>SBE</name>
              <description>[23:23] Start bit enable for SPI transfer - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[22:21] read returns 0 - (RO  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>FORCE</name>
              <description>[20:20] Manual SPIEN assertion to keep SPIEN active between SPI  words [single channel master mode only]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TURBO</name>
              <description>[19:19] Turbo mode - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>IS</name>
              <description>[18:18] Input Select - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DPE1</name>
              <description>[17:17] Transmission Enable for data line 1 [SPIDATAGZEN[1]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DPE0</name>
              <description>[16:16] Transmission Enable for data line 0 [SPIDATAGZEN[0]]  - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DMAR</name>
              <description>[15:15] DMA Read request The DMA Read request line is asserted when  the channel is enabled and a new data is available in the  receive register of the channel The DMA Read request line is  deasserted on read completion of the receive register of the  channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>DMAW</name>
              <description>[14:14] DMA Write request The DMA Write request line is asserted  when The channel is enabled and the transmitter register of  the channel is empty The DMA Write request line is  deasserted on load completion of the transmitter register of  the channel - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TRM</name>
              <description>[13:12] Transmit/Receive modes - (RW  )</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>WL</name>
              <description>[11:7] SPI word length - (RW  )</description>
              <bitWidth>5</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>EPOL</name>
              <description>[6:6] SPIEN polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>CLKD</name>
              <description>[5:2] Frequency divider for SPICLK [only when the module is a  Master SPI device] A programmable clock divider divides the  SPI reference clock [CLKSPIREF] with a 4-bit value and  results in a new clock SPICLK available to shift-in and  shift-out data By default the clock divider ratio has a  power of two granularity when MCSPI_CHCONF[CLKG] is cleared  Otherwise this register is the 4 LSB bit of a 12-bit  register concatenated with clock divider extension  MCSPI_CHCTRL[EXTCLK] registerThe value description below  defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0  - (RW  )</description>
              <bitWidth>4</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>POL</name>
              <description>[1:1] SPICLK polarity - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PHA</name>
              <description>[0:0] SPICLK phase - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3STAT</name>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <description>This register provides status information about transmitter  and receiver registers of channel 3</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:7] Read returns 0 - (RO  )</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>RXFFF</name>
              <description>[6:6] Channel "i" FIFO Receive Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>RXFFE</name>
              <description>[5:5] Channel "i" FIFO Receive Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TXFFF</name>
              <description>[4:4] Channel "i" FIFO Transmit Buffer Full Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TXFFE</name>
              <description>[3:3] Channel "i" FIFO Transmit Buffer Empty Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>EOT</name>
              <description>[2:2] Channel "i" End of transfer Status The definitions of  beginning and end of transfer vary with master versus slave  and the transfer format [Transmit/Receive modes Turbo mode]  See dedicated chapters for details - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXS</name>
              <description>[1:1] Channel "i" Transmitter Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXS</name>
              <description>[0:0] Channel "i" Receiver Register Status - (RO  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CH3CTRL</name>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <description>This register is dedicated to enable the channel 3</description>
          <fields>
            <field>
              <name>RESERVED_2</name>
              <description>[31:16] Read returns 0 - (RO  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>EXTCLK</name>
              <description>[15:8] Clock ratio extension: This register is used to concatenate  with MCSPI_CHCONF[CLKD] register for clock ratio only when  granularity is one clock cycle [MCSPI_CHCONF[CLKG] set to 1]  Then the max value reached is 4096 clock divider ratio -  (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RESERVED_1</name>
              <description>[7:1] Read returns 0 - (RO  )</description>
              <bitWidth>7</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>EN</name>
              <description>[0:0] Channel Enable - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TX3</name>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word to transmit on the  serial link  what ever SPI word length is.</description>
          <fields>
            <field>
              <name>TDATA</name>
              <description>[31:0] Channel 3 Data to transmit - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RX3</name>
          <addressOffset>0x178</addressOffset>
          <size>32</size>
          <description>This register contains a single SPI word received through  the serial link what ever SPI word length is.</description>
          <fields>
            <field>
              <name>RDATA</name>
              <description>[31:0] Channel 3 Received Data - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XFERLEVEL</name>
          <addressOffset>0x17C</addressOffset>
          <size>32</size>
          <description>This register provides transfer levels needed while using  FIFO buffer during transfer.</description>
          <fields>
            <field>
              <name>WCNT</name>
              <description>[31:16] Spi word counterThis register holds the programmable value  of number of SPI word to be transferred on channel which is  using the FIFO bufferWhen transfer had started a read back  in this register returns the current SPI word transfer index  - (RW  )</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>AFL</name>
              <description>[15:8] Buffer Almost Full This register holds the programmable  almost full level value used to determine almost full buffer  condition If the user wants an interrupt or a DMA read  request to be issued during a receive operation when the  data buffer holds at least n bytes then the buffer  MCSPI_MODULCTRL[AFL] must be set with n-1The size of this  register is defined by the generic parameter FFNBYTE - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>AEL</name>
              <description>[7:0] Buffer Almost EmptyThis register holds the programmable  almost empty level value used to determine almost empty  buffer condition If the user wants an interrupt or a DMA  write request to be issued during a transmit operation when  the data buffer is able to receive n bytes then the buffer  MCSPI_MODULCTRL[AEL] must be set with n-1 - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DAFTX</name>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <description>This register contains the  SPI words to transmit on the  serial link when FIFO used and DMA address is aligned on 256  bit.This register is an image of one of MCSPI_TX(i) register  corresponding to the channel which have its FIFO enabled.</description>
          <fields>
            <field>
              <name>DAFTDATA</name>
              <description>[31:0] FIFO Data to transmit with DMA 256 bit aligned address This  Register is only is used when MCSPI_MODULCTRL[FDAA] is set  to "1" and only one of the MCSPI_CH[i]CONF[FFEW] of enabled  channels is set If these conditions are not respected any  access to this register return a null value - (RW  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DAFRX</name>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <description>This register contains the  SPI words to received on the  serial link when FIFO used and DMA address is aligned on 256  bit.This register is an image of one of MCSPI_RX(i) register  corresponding to the channel which have its FIFO enabled.</description>
          <fields>
            <field>
              <name>DAFRDATA</name>
              <description>[31:0] FIFO Data to transmit with DMA 256 bit aligned address This  Register is only is used when MCSPI_MODULCTRL[FDAA] is set  to "1" and only one of the MCSPI_CH[i]CONF[FFEW] of enabled  channels is set If these conditions are not respected any  access to this register return a null value - (RO  )</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_I2C</name>
      <baseAddress>0x57F7F800</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>100</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_I2C</description>
      <registers>
        <register>
          <name>ICOAR</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>I2C Own Address register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:10] Reserved</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>A9_A0</name>
              <description>[9:0] Own address. Use in both 7- and 10-bit address mode. Note  that usercan program the I2C own address to any value as  long as it does notconflict with other components in the  system.</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICIMR</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Mask/Status register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:7] Reserved</description>
              <bitWidth>25</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>AAS</name>
              <description>[6:6] Address As Slave interrupt mask bit. Setting a"1" to this  bit unmasks the Address As Slave interrupt. Setting a"0" to  this bit masks the Address As Slave interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>SCD</name>
              <description>[5:5] Stop Condition Detection mask bit. Setting a"1" to this bit  unmasks the Stop Condition Detection interrupt. Setting a "0" to this bit masks the Stop Condition Detection  interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ICXRDY</name>
              <description>[4:4] Transmit Data Ready interrupt mask bit. Setting a"1" to  this bit unmasks the Transmit Data Ready interrupt. Setting  a"0" to this bit masks the Transmit Data Ready interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ICRRDY</name>
              <description>[3:3] Receive Data Ready interrupt mask bit. Setting a"1" to this  bit unmasks the Receive Data Ready interrupt. Setting a"0"  to this bit masks the Receive Data Ready interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ARDY</name>
              <description>[2:2] Register access ready interrupt mask bit. Setting a"1" to  this bit unmasks the Register access ready interrupt.  Setting a"0" to this bit masks the Register access ready  interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NACK</name>
              <description>[1:1] No Acknowledgement interrupt mask bit. Setting a"1" to this  bit unmasks the No Acknowledgement interrupt. Setting a"0"  to this bit masks the No Acknowledgement interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AL</name>
              <description>[0:0] Arbitration Lost interrupt mask bit. Setting a"1" to this  bit unmasks the Arbitration Lost interrupt. Setting a"0" to  this bit masks the Arbitration Lost interrupt.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICSTR</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Status register</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:15] Reserved</description>
              <bitWidth>17</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>SDIR</name>
              <description>[14:14] Slave Direction.  This bit is clear to '0' indicating the I2C is a master  transmitter/receiver or a slave receiver. This bit is also  clear by  STOP condition or START condition. It is set to '1' when the  I2C  slave is a transmitter. In DLB mode (which the configuration  should be master-transmitter slave-receiver) this bit is  clear to  '0'. Writing a"1" to this bit to clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>NACKSNT</name>
              <description>[13:13] A No Acknowledge is sent due to NACKMOD is set to a"1".  NACKSNT =0: A No Acknowledge is not sent. NACKSNT =1: A No  Acknowledge is sent.  Writing a"1" to this bit to clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>BB</name>
              <description>[12:12] Bus Busy. This bit indicates the state of the serial bus.  BB=0: The bus is free.  BB=1: The bus is occupied.  On reception of a"start" condition the device sets BB to  1. This  bit is also set if the I2C detects SCL low state.  BB is clear to 0 after reception of a"stop" condition.  BB is kept to"0" regardless SCL state when the I2C is in  reset  (IRS_=0). If the IRS_ is set to"1" during transaction  between  other I2C devices the BB bit is set at the first falling  edge of SCL  or START condition. - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>RSFULL</name>
              <description>[11:11] Receive shift full. This bit indicates whether the receiver  has  experienced overrun. Overrun occurs when the receive shift  register (ICRSR) is full and ICDRR has not been read since  the  ICRSR-to-ICDRR transfer. The FSM is holding for ICDRR read  access.  RSFULL is clear when reading the ICDRR.  RSFULL is set to"1" when the I2C has recognized an overrun.  The contents of ICDRR are NOT lost in this case.  In repeat mode since double buffer (ICRSR and ICDRR)  behaves like a single buffer RSFULL is set to"1" every  time the  data is received.  RSFULL is clear as a result of reading the ICDRR. - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>XSMT</name>
              <description>[10:10] Transmit shift empty not. This bit indicates whether the  transmitter has experienced underflow. Underflow occurs when  the transmit shift register (ICXSR) is empty and ICDXR has  not  been loaded. The FSM is holding for ICDXR write access.  XSMT_ is cleared when underflow has occurred.  XSMT_ is set to"1" as a result of writing to ICDXR.  In repeat mode if the I2C in master transmitter mode is  holding  transfer with XSMT_=0 (i.e. waiting for further action) and  the  STT or STP bit is set XSMT_ is set to"1" by hardware.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>AAS</name>
              <description>[9:9] Address As Slave. This bit is set to 1 by the device when it  has  recognized its own slave address or an address of all (8)  zeros.  The AAS bit is reset by stop condition or detection of any  address byte that does not match ICOAR. - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>AD0</name>
              <description>[8:8] Address Zero Status: This bit is set to 1 by device if it  detects the  address of all (8) zeros (i.e. general call). The AD0 bit is  reset to  0 (default value) when a"start" or"stop" condition is  detected. - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:6] Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>SCD</name>
              <description>[5:5] Stop Condition Detection bit  SCD is set when the I2C sends or receives STOP condition.  This  bit is cleared by reading ICIVR (as 110) or writing '1' to  itself.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ICXRDY</name>
              <description>[4:4] Transmit Data Ready interrupt flag bit.  ICXRDY is set to"1" is generated when the transmitted data  has been copied from ICDXR to the transmit-shift register  (ICXSR).  ICRXDY is clear to"0" when the ICDXR is written. This bit  can  also be polled by the CPU to write a new transmitted data  into  the ICDXR.  Write '1' to this bit will set it and DXR Write will clear  it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ICRRDY</name>
              <description>[3:3] Receive Data Ready interrupt flag bit.  ICRRDY is set to"1" when the received data has been copied  from ICRSR into the ICDRR. ICRRDY is cleared to"0" when the  ICDRR is read. This bit can also be polled by the CPU to read  the received data in the ICDRR.  Write '1' or DRR Read will clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ARDY</name>
              <description>[2:2] Register-access-ready interrupt flag bit.  ARDY is generated by the hardware if the I2C is in the  master  mode when the previously programmed data and command has  been performed and status bit has been updated. This flag is  used by the CPU to let it knows that the I2C registers are  ready  to be accessed again.  When RM=0 ARDY is set when the internal data count is  passed 0 if STP register bit has not been set.  When RM=1 ARDY is set at each byte end. If the I2C is in FDF  mode(FDF=1) ARDY is set just after Start condition.  This bit is automatically cleared by hardware when writing  data  to ICDXR in transmit mode reading data from ICDRR in receive  mode or setting STT or STP bit.  Write '1' will clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>NACK</name>
              <description>[1:1] No-Acknowledgement interrupt flag bit.  The No Acknowledge flag bit is set when the hardware in "master" mode detects no acknowledge has been received.  This bit is NOT set by no-acknowledgement after Start byte  Write '1' or Read the ICIVR (as 010) will clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>AL</name>
              <description>[0:0] Arbitration-Lost interrupt flag bit.  The Arbitration Lost flag bit is set to 1 when the device in  the "master" mode senses it has lost an arbitration when two or  more  transmitters start a transmission almost simultaneously or  when  the I2C attempts to start a transfer while BB (bus busy) is  1.  When this is set to 1 due to arbitration lost the  MST/STT/STP  bits are clear the I2C becomes a slave.  Write '1' or Read the ICIVR (as 001) will clear it.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICCLKL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>I2C Clock Divider Low register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ICCL15_ICCL0</name>
              <description>[15:0] Low time I 2 C SCL Clock Division Factor. They are used to  divide down the master clock to create the SCL low time  transition frequency. This register must be configured while  the I2C is still in reset (IRS_=0).</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICCLKH</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>I2C Clock Divider High register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ICCH15_ICCLH0</name>
              <description>[15:0] High time I 2 C SCL Clock Division Factor. They are used to  divide down the master clock to create the SCL high time  transition frequency. This register must be configured while  the I2C is still in reset (IRS_=0).</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICCNT</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>I2C Data Count register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ICDC15_ICDC0</name>
              <description>[15:0] Data count. This data count register is used to generate a  Stop condition if a Stop condition is specified (STP=1). .   ICCNT=1 data count is 1   ::::::::::::::::::::::::::::::::::::::::::::   ::::::::::::::::::::::::::::::::::::::::::::   ICCNT=0FFFFh data count is 65535   ICCNT=0data counter is 65536   Note that ICCNT is a don"t care when RM is set to 1.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICDRR</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>I2C Data Receive register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>D7_D0</name>
              <description>[7:0] Receive data</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICSAR</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>I2C Slave Address register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:10] Reserved</description>
              <bitWidth>22</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>A9_A0</name>
              <description>[9:0] Slave address. Use in both 7- and 10-bit address mode.</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICDXR</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>I2C Data Transmit register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>D7_D0</name>
              <description>[7:0] Transmit data</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICMDR</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>I2C Mode register</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:16] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>NACKMOD</name>
              <description>[15:15] No Acknowledge (NACK) mode.  This bit is used to send an Acknowledge (ACK) or a No  Acknowledge (NACK) to the transmitter. This bit is only  applicable  when the I2C is in receiver mode. In master receiver mode  when  the internal data count counter decrements to zero the I2C  sends a  NACK. The master receiver I2C finishes a transfer when it  sends a  NACK. The I2C ignores ICCNT when NACKMOD is '1'. The  NACKMOD bit should be set before the rising edge of the last  data  bit (bit 8) if a NACK must be sent and this bit is cleared  once a  NACK has been sent.   NACKMOD=0 the I2C sends an ACK to the transmitter during the  acknowledge cycle.  NACKMOD=1 the I2C sends a NACK to the transmitter during the  acknowledge cycle.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>FREE</name>
              <description>[14:14] Free Running.  This bit is used to determine the state of the I2C when a  breakpoint  is encountered in the HLL debugger.  FREE=0: (default) Stops immediately if SCL is low and keep  driving  SCL low whether I2C is master transmitter/receiver. If SCL  is high  I2C waits until SCL becomes low and then stops. If the I2C  is a  slave it will stop when the transmission/receiving  completes.  FREE=1: The I2C runs free.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>STT</name>
              <description>[13:13] Start Condition (Master only mode).  This bit can be set to a"1" by the CPU to generate a Start  condition.  In master mode when setting Start to"1" generates a Start  condition.  It is reset to "0" by the hardware after the Start condition  has been  generated. The Start/Stop bits can be configured to generate  different transfer formats. Note that the STT and STP can be  used to  terminate the repeat mode.   ____________________________________________________ STT___STP____Conditions_______________Bus Activities   _1_____0________Start___________________S-A-D   _0_____1________Stop_____________________P   _1_____1________Start-Stop (ICCNT= n)______S-A-D..(n)..D-P   _1_____0________Start (ICCNT= n)__________S-A-D..(n)..D      ____________________________________________________</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[12:12] Reserved for IDLEEN (IDLE Enable on 5509). - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>STP</name>
              <description>[11:11] Stop Condition (Master mode only).  This bit can be set to a"1" by the CPU to generate a Stop  condition.  It is reset to "0" by the hardware after the Stop condition  has been  generated. The Stop condition is generated when ICCNT passes  0  when the I2C is in non-repeat mode(RM=0).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MST</name>
              <description>[10:10] Master.  MST=0: The I 2 C peripheral is in the"slave" mode and clock  is  received from the"master" device.  MST=1: The I 2 C peripheral is in the"master" mode and it  generates  the clock. This bit is clear when the transfer completed.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TRX</name>
              <description>[9:9] Transmitter.  TRX=0: The I 2 C is in the"receiver" mode and data on data  line SDA  is shifted into the data register ICDRR.  TRX=1: The I 2 C is in the"transmitter" mode and the data  in ICDXR  is shifted out on data line SDA.  The operating modes (not in FDF mode) are defined as follows.  In FDF mode TRX must be configured even if the I2C is in  slave  mode because there is no address/direction byte in FDF mode.   ______________________________ MST___TRX___Operating Modes   _0______x_____"slave receiver"   _0______x_____"slave transmitter"   _1______0_____"master receiver"   _1______1_____"master transmitter"      ______________________________</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>XA</name>
              <description>[8:8] Expanded Address.  XA=0: (default) 7-bit address mode (normal address mode).  XA=1: 10-bit address mode (expanded address mode)  Please note that XA needs to be configured even if the I2C  is in  slave mode.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RM</name>
              <description>[7:7] Repeat Mode.  This bit is set to a"1" by the CPU to put the I2C in the  repeat mode.  In this mode data is continuously transmitted out of the  ICDXR until  the STP bit is set to"1" regardless of ICCNT value. This  bit is don"t  care if the I2C is configured in slave mode.   _________________________________________________________ RM___STT___STP___Conditions_____Bus Activities_______Mode   _0_____0_____0_______Idle___________None___________NA   _0_____0_____1_______Stop____________P____________NA   _0_____1_____0_____(Re)Start_______S-A-D..(n)..D____Repeat n   _0_____1_____1_____(Re)Start-Stop___S-A-D..(n)..D-P__Repeat n   _1_____0_____0_______Idle___________none___________NA   _1_____0_____1_______Stop____________P  ___________NA   _1_____1_____0_____(Re)Start_______S-A-D-D-D.._____Continuous   _1_____1_____1_____Reserved________None___________NA  _________________________________________________________</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>DLB</name>
              <description>[6:6] Digital Loop Back (in master transmit mode only).  This bit is set to a"1" by the CPU to put the I2C in the  loop back  mode. In this mode data transmitted out of the ICDXR will be  received in the ICDRR after ((CPU freq/I2C freq)8) CPU  cycles via an internal path. The address of the ICOAR is  output on SDA.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>IRS</name>
              <description>[5:5] I2C Reset Not.  This can be set to a"0" by the CPU to put the I2C in reset  or to a"1"  to take the I2C out of reset. When this bit is reset to 0  all status bits  in ICSTR and ICIVR are set to default values. Note that if  this bit is  reset during a transfer it can cause the I2C bus hang (SDA  and SCL  are tri-stated).</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>STB</name>
              <description>[4:4] Start Byte (Master only mode).  The Start Byte mode bit is set to 1 by the CPU to configure  the I2C  in Start byte mode the I2C sends "00000001"∩┐╜ regardless ICSAR  value. Refer to the Philip I2C spec for more details.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>FDF</name>
              <description>[3:3] Free Data Format.   This bit can be set to"1" by the CPU to configure the I2C  in Free  Data Format mode.   ______________________________________________ FDF___MST___TRX______Operating mode  _0______0_____ x____Slave in non FDF mode   _0______1_____0____Master receive in non FDF mode   _0______1_____1____Master transmit in non FDF mode   _1______0_____0____Slave receiver in FDF mode   _1______0_____1____Slave transmitter in FDF mode   _1______1_____0____Master receiver in FDF mode   _1______1_____1____Master transmitter in FDF mode   ______________________________________________</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>BC2_BC1_BC0</name>
              <description>[2:0] Bit Count : Bit Count 2, Bit Count 1 and Bit Count 0 define  the  number of bits starting from the lsb (excluding the  acknowledge bit)  of the next byte which are yet to be received or transmitted.   __________________________________________ BC2_BC1_BC0__Bits/byte in FDF__Bits/byte w/ ACK   _0___0___1_____NA (reserved)____ NA (reserved)   _0___1___0________2______________3_______  _0___1___1________3______________4_______   _1___0___0________4______________5_______   _1___0___1________5______________6_______   _1___1___0________6______________7_______   _1___1___1________7______________8_______   _0___0___0________8______________9_______  __________________________________________</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICIVR</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Vector register</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:12] Reserved.</description>
              <bitWidth>20</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TESTMD</name>
              <description>[11:8] Reserved for internal testing.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>NU1</name>
              <description>[7:3] Reserved.</description>
              <bitWidth>5</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>INTCODE</name>
              <description>[2:0] Interrupt code.  The binary-coded-interrupt vector indicates which interrupt  has  occurred. Reading the ICIVR clears the interrupt code except  ARDY(011) RRDY(100) and XRDY(101). Interrupt code for ARDY  RRDY and XRDY is cleared when ARDY ICRRDY and ICXRDY  bits in the ICSTR is cleared to default value respectively.  If other  interrupts are pending a new interrupt is generated. If  there are  more than one interrupt flag reading the ICIVR clears the  highest  priority interrupt code.  Reading the ICIVR also clears corresponding status bit in the  ICSTR except ARDY ICRRDY ICXRDY and AAS.  Note that users must read (clear) the ICIVR before doing  another  start otherwise the ICIVR could contain incorrect (old  interrupt flags)  value.   ________________________________________________ Interrupt Code____________Interrupt Occurred__________ _000_(default)_________________None   _001_(highest priority)____Arbitration Lost interrupt   _010__________________No Acknowledgement interrupt   _011__________________Register Access Ready interrupt   _100__________________Receive Data Ready interrupt   _101__________________Transmit Data Ready interrupt   _110__________________Stop Condition Detection   _111_(lowest priority)_____Address As Slave - (RW)   ________________________________________________</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICEMDR</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>I2C Extended Mode register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved. - (RW  )</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>IGNACK</name>
              <description>[1:1] Ignore NACK mode  IGNACK=0 The master transmitter will operate normally  discontinue the data transfer and set the ARDY and NACK  status bits when a NACK signal is received from the slave.  IGNACK=1 The master transmitter will ignore a NACK  received from the slave.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>BCM</name>
              <description>[0:0] Backward Compatibility Mode.  This bit affects the I2C interrupt behavior. Refer to  appendix A  for details.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPSC</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>I2C Prescaler register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:8] Reserved.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>IPSC7_IPSC0</name>
              <description>[7:0] 8-bit prescaler to divide the system clock down to 4/8/12Mhz  clock and used by the I2C module. This register must be  initialized while the I2C is still in reset (IRS_=0). The  value takes  effect on the rising edge of IRS_.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPID1</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>I2C Peripheral ID register 1</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:16] Reserved.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CLASS</name>
              <description>[15:8] Identifies the class of peripheral. This value should be  0x01 - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>REVISION</name>
              <description>[7:0] Identifies the revision level of the I2C. This value should  be  incremented each time the design is revised. - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPID2</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>I2C Peripheral ID register 2</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:8] Reserved.</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TYPE</name>
              <description>[7:0] Identifies the type of peripheral. This value should be 0x05  - (RW  )</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICDMAC</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>I2C DMA Control Register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved. - (RW  )</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TXDMAEN</name>
              <description>[1:1] Transmit DMA enable. This bit controls the receive DMA  event pin to the system. When this bit is 1 the DMA event is  enabled and ICTEVT_POR pin is asserted when the DMA  transfer is required. When this bit is 0 the ICTEVT_POR pin  is never asserted.  RXDMAEN=0: DMA transmit event is disabled.  RXDMAEN=1: DMA transmit event is enabled. (Default)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RXDMAEN</name>
              <description>[0:0] Receive DMA enable. This bit controls the receive DMA  event pin to the system. When this bit is 1 the DMA event is  enabled and ICREVT_POR pin is asserted when the DMA  transfer is required. When this bit is 0 the ICREVT_POR  pin is never asserted.  RXDMAEN=0: DMA receive event is disabled.  RXDMAEN=1: DMA receive event is enabled. (Default)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>I2C_RESERVED1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:0] Reserved.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>I2C_RESERVED2</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:0] Reserved.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPFUNC</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>I2C Pin Function register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:1] Reserved.</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PFUNC0</name>
              <description>[0:0] Controls the function of the I2C SCL and SDA pins.  0 = Pins function as SCL and SDA  1 = Pins functions as GPIO  Note: No hardware protection is required to disable I2C  function when the PFUNC[0] and IRS_ bits are both set to  one. When PFUNC[0] is"1" (GPIO mode) the sub-module  which controls the I2C function receives the value"1" for  SCL  and SDA. IRS_ can be set to"1" regardless of PFUNC[0]  and the I2C function works whenever the IRS_ bit is"1". The  user is expected to hold I2C in reset via IRS_ bit when  changing to/from GPIO mode via the PFUNC[0] bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDIR</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>I2C Pin Direction register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDIR1</name>
              <description>[1:1] Controls the direction of the I2C SDA pin when configured as  GPIO.  0 = SDA pin functions as input  1 = SDA pin functions as output</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDIR0</name>
              <description>[0:0] Controls the direction of the I2C SCL pin when configured as  GPIO.  0 = SCL pin functions as input  1 = SCL pin functions as output</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDIN</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>I2C Pin Data In register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDIN1</name>
              <description>[1:1] Indicates the logic level present on the SDA pin.  Reads:  0 = Logic low present at SDA pin regardless of PFUNC  setting.  1 = Logic high present at SDA pin regardless of PFUNC  setting.  Writes:  Writes have no effect. - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDIN0</name>
              <description>[0:0] Indicates the logic level present on the SCL pin.  Reads:  0 = Logic low present at SCL pin regardless of PFUNC  setting.  1 = Logic high present at SCL pin regardless of PFUNC  setting.  Writes:  Writes have no effect - (RW  )</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDOUT</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>I2C Pin Data Out register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDOUT1</name>
              <description>[1:1] Controls the level driven on the SDA pin when configured as  GPIO output.  Reads:  Reads return register values not GPIO pin levels.  Writes:  0 = SDA pin driven low  1 = SDA pin driven high.  Note: If SDA is connected to an open-drain buffer at the  chiplevel  the I2C cannot drive SDA to high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDOUT0</name>
              <description>[0:0] Controls the level driven on the SCL pin when configured as  GPIO output.  Reads:  Reads return register values not GPIO pin levels.  Writes:  0 = SCL pin driven low  1 = SCL pin driven high  Note: If SCL is connected to an open-drain buffer at the  chiplevel  the I2C cannot drive SCL to high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDSET</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>I2C Pin Data Set register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDSET1</name>
              <description>[1:1] Used to set PDOUT[1] bit which corresponds to the SDA GPIO  pin.  Reads:  Reads should return 0. User documentation should say reads  are indeterminate.  Writes:  0 = no effect  1 = PDOUT[1] bit is set to logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDSET0</name>
              <description>[0:0] Used to set PDOUT[0] bit which corresponds to the SCL GPIO  pin.  Reads:  Reads should return 0. User documentation should say reads  are indeterminate.  Writes:  0 = no effect  1 = PDOUT[0] bit is set to logic high.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDCLR</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>I2C Pin Data Clear register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDCLR1</name>
              <description>[1:1] Used to clear PDOUT[1] bit which corresponds to the SDA pin.  Reads:  Reads should return 0. User documentation should say reads  are indeterminate.  Writes:  0 = no effect  1 = PDOUT[1] bit is cleared to logic low.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDCLR0</name>
              <description>[0:0] Used to clear PDOUT[0] bit which corresponds to the SCL pin.  Reads:  Reads should return 0. User documentation should say reads  are indeterminate.  Writes:  0 = no effect  1 = PDOUT[0] bit is cleared to logic low.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ICPDRV</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>I2C Pin Driver Mode Register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:2] Reserved</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>PDRV1</name>
              <description>[1:1] Used to select driver mode of output buffer for SDA pin.  0 = I2C mode.   1 = GPIO mode. Note: Value of this register is reflected on the  PDRV_SDA_POR port. Actual function depends on I/O buffer and  chip implementation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PDRV0</name>
              <description>[0:0] Used to select driver mode of output buffer for SCL pin.  0 = I2C mode. 1 = GPIO mode. Note: Value of this register is reflected on the  PDRV_SCL_POR port. Actual function depends on I/O buffer  and chip implementation.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_PWM</name>
      <baseAddress>0x57F7FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>116</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_PWM</description>
      <registers>
        <register>
          <name>TBCTL_TBSTS</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Time-Base Control Register/ Status Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:19] Reserved</description>
              <bitWidth>13</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TBSTS_CTRMAX</name>
              <description>[18:18] Time-Base Counter Max Latched Status Bit 0 Read: Indicates the time-base counter never reached its maximum value. Write: No effect. 1 Read: Indicates that the time-base counter reached the maximum value 0xFFFF. Write: Clears the latched event.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>TBSTS_SYNCI</name>
              <description>[17:17] Input Synchronization Latched Status Bit 0 Read: Indicates no external synchronization event has occurred. Write: No effect. 1 Read: Indicates that an external synchronization event has occurred (EPWMxSYNCI). Write: Clears the latched event.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TBSTS_CTRDIR</name>
              <description>[16:16] Time-Base Counter Direction Status Bit. At reset, the counter is frozen; therefore, this bit has no meaning. To make this bit meaningful, you must first set the appropriate mode via TBCTL[CTRMODE]. 0 Time-Base Counter is currently counting down. 1 Time-Base Counter is currently counting up.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TBCTL_FREE_SOFT</name>
              <description>[15:14] Emulation Mode Bits. These bits select the behavior of the ePWM time-base counter during emulation events: 0 Stop after the next time-base counter increment or decrement 1h Stop when counter completes a whole cycle: ΓÇó Up-count mode: stop when the time-base counter = period (TBCTR = TBPRD) ΓÇó Down-count mode: stop when the time-base counter = 0x0000 (TBCTR = 0x0000) ΓÇó Up-down-count mode: stop when the time-base counter = 0x0000 (TBCTR = 0x0000) 2h-3h Free run</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TBCTL_PHSDIR</name>
              <description>[13:13] Phase Direction Bit. This bit is only used when the time-base counter is configured in the up-down-count mode. The PHSDIR bit indicates the direction the time-base counter (TBCTR) will count after a synchronization event occurs and a new phase value is loaded from the phase (TBPHS) register. This is irrespective of the direction of the counter before the synchronization event.. In the up-count and down-count modes this bit is ignored. 0 Count down after the synchronization event. 1 Count up after the synchronization event</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TBCTL_CLKDIV</name>
              <description>[12:10] Time-base Clock Prescale Bits These bits determine part of the time-base clock prescale value. TBCLK = VCLK3 / (HSPCLKDIV ∩┐╜ CLKDIV) 0 /1 (default on reset) 1h /2 2h /4 3h /8 4h /16 5h /32 6h /64 7h /128</description>
              <bitWidth>3</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TBCTL_HSPCLKDIV</name>
              <description>[9:7] High Speed Time-base Clock Prescale Bits. These bits determine part of the time-base clock prescale value: TBCLK = VCLK3 / (HSPCLKDIV ∩┐╜ CLKDIV) 0 /1 1h /2 (default on reset) 2h /4 3h /6 4h /8 5h /10 6h /12 7h /14</description>
              <bitWidth>3</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TBCTL_SWFSYNC</name>
              <description>[6:6] Software Forced Synchronization Pulse 0 Writing a 0 has no effect and reads always return a 0. 1 Writing a 1 forces a one-time synchronization pulse to be generated. This event is ORed with the EPWMxSYNCI input of the ePWM module. SWFSYNC is valid (operates) only when EPWMxSYNCI is selected by SYNCOSEL = 00.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TBCTL_SYNCOSEL</name>
              <description>[5:4] Synchronization Output Select. These bits select the source of the EPWMxSYNCO signal. 0 EPWMxSYNC: 1h CTR = zero: Time-base counter equal to zero (TBCTR = 0x0000) 2h CTR = CMPB : Time-base counter equal to counter-compare B (TBCTR = CMPB) 3h Disable EPWMxSYNCO signal</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TBCTL_PRDLD</name>
              <description>[3:3] Active Period Register Load From Shadow Register Select 0 The period register (TBPRD) is loaded from its shadow register when the time-base counter, TBCTR, is equal to zero. A write or read to the TBPRD register accesses the shadow register. 1 Load the TBPRD register immediately without using a shadow register. A write or read to the TBPRD register directly accesses the active register.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TBCTL_PHSEN</name>
              <description>[2:2] Counter Register Load From Phase Register Enable 0 Do not load the time-base counter (TBCTR) from the time-base phase register (TBPHS) 1 Load the time-base counter with the phase register when an EPWMxSYNCI input signal occurs or when a software synchronization is forced by the SWFSYNC bit, or when a digital compare sync event occurs.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TBCTL_CTRMODE</name>
              <description>[1:0] Counter Mode The time-base counter mode is normally configured once and not changed during normal operation. If you change the mode of the counter, the change will take effect at the next TBCLK edge and the current counter value shall increment or decrement from the value before the mode change. These bits set the time-base counter mode of operation as follows: 0 Up-count mode 1h Down-count mode 2h Up-down-count mode 3h Stop-freeze counter operation (default on reset)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TBPHS</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Time-Base Phase Register</description>
          <fields>
            <field>
              <name>TBPHS</name>
              <description>[31:16] Time-Base Phase Register  These bits set time-base counter phase of the selected ePWM relative to the time-base that is supplying the synchronization input signal. ΓÇó If TBCTL[PHSEN] = 0, then the synchronization event is ignored and the time-base counter is not loaded with the phase. ΓÇó If TBCTL[PHSEN] = 1, then the time-base counter (TBCTR) will be loaded with the phase (TBPHS) when a synchronization event occurs. The synchronization event can be initiated by the input synchronization signal (EPWMxSYNCI) or by a software forced synchronization.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TBCTR_TBPRD</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Time-Base Counter Register/ Period Register</description>
          <fields>
            <field>
              <name>TBPRD</name>
              <description>[31:16] Time-Base Period Register  These bits determine the period of the time-base counter. This sets the PWM frequency. Shadowing of this register is enabled and disabled by the TBCTL[PRDLD] bit. By default this register is shadowed. ΓÇó If TBCTL[PRDLD] = 0, then the shadow is enabled and any write or read will automatically go to the shadow register. In this case, the active register will be loaded from the shadow register when the timebase counter equals zero. ΓÇó If TBCTL[PRDLD] = 1, then the shadow is disabled and any write or read will go directly to the active register, that is the register actively controlling the hardware. ΓÇó The active and shadow registers share the same memory map address.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TBCTR</name>
              <description>[15:0] Time-Base Counter Register  Reading these bits gives the current time-base counter value. Writing to these bits sets the current time-base counter value. The update happens as soon as the write occurs; the write is NOT synchronized to the time-base clock (TBCLK) and the register is not shadowed.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMPCTL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Counter-Compare Control Register</description>
          <fields>
            <field>
              <name>Reserved4</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>SHDWBFULL</name>
              <description>[25:25] Counter-compare B (CMPB) Shadow Register Full Status Flag This bit self clears once a load-strobe occurs. 0 CMPB shadow FIFO not full yet 1 Indicates the CMPB shadow FIFO is full; a CPU write will overwrite current shadow value.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>SHDWAFULL</name>
              <description>[24:24] Counter-compare A (CMPA) Shadow Register Full Status Flag The flag bit is set when a 32-bit write to CMPA:CMPAHR register or a 16-bit write to CMPA register is made. A 16-bit write to CMPAHR register will not affect the flag. This bit self clears once a load-strobe occurs. 0 CMPA shadow FIFO not full yet 1 Indicates the CMPA shadow FIFO is full, a CPU write will overwrite the current shadow value</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[23:23] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>SHDWBMODE</name>
              <description>[22:22] Counter-compare B (CMPB) Register Operating Mode 0 Shadow mode. Operates as a double buffer. All writes via the CPU access the shadow register. 1 Immediate mode. Only the active compare B register is used. All writes and reads directly access the active register for immediate compare action.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[21:21] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>SHDWAMODE</name>
              <description>[20:20] Counter-compare A (CMPA) Register Operating Mode 0 Shadow mode. Operates as a double buffer. All writes via the CPU access the shadow register. 1 Immediate mode. Only the active compare register is used. All writes and reads directly access the active register for immediate compare action</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>LOADBMODE</name>
              <description>[19:18] Active Counter-Compare B (CMPB) Load From Shadow Select Mode This bit has no effect in immediate mode (CMPCTL[SHDWBMODE] = 1). 0 Load on CTR = Zero: Time-base counter equal to zero (TBCTR = 0x0000) 1h Load on CTR = PRD: Time-base counter equal to period (TBCTR = TBPRD) 2h Load on either CTR = Zero or CTR = PRD 3h Freeze (no loads possible)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>LOADAMODE</name>
              <description>[17:16] Active Counter-Compare A (CMPA) Load From Shadow Select Mode. This bit has no effect in immediate mode (CMPCTL[SHDWAMODE] = 1). 0 Load on CTR = Zero: Time-base counter equal to zero (TBCTR = 0x0000) 1h Load on CTR = PRD: Time-base counter equal to period (TBCTR = TBPRD) 2h Load on either CTR = Zero or CTR = PRD 3h Freeze (no loads possible)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMPA</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Counter-Compare A Register</description>
          <fields>
            <field>
              <name>CMPA</name>
              <description>[31:16] Counter-Compare A Register  The value in the active CMPA register is continuously compared to the time-base counter (TBCTR). When the values are equal, the counter-compare module generates a "time-base counter equal to counter compare A" event. This event is sent to the action-qualifier where it is qualified and converted it into one or more actions. These actions can be applied to either the EPWMxA or the EPWMxB output depending on the configuration of the AQCTLA and AQCTLB registers. The actions that can be defined in the AQCTLA and AQCTLB registers include: ΓÇó Do nothing; the event is ignored. ΓÇó Clear: Pull the EPWMxA and/or EPWMxB signal low ΓÇó Set: Pull the EPWMxA and/or EPWMxB signal high ΓÇó Toggle the EPWMxA and/or EPWMxB signal Shadowing of this register is enabled and disabled by the CMPCTL[SHDWAMODE] bit. By default this register is shadowed. ΓÇó If CMPCTL[SHDWAMODE] = 0, then the shadow is enabled and any write or read will automatically go to the shadow register. In this case, the CMPCTL[LOADAMODE] bit field determines which event will load the active register from the shadow register. ΓÇó Before a write, the CMPCTL[SHDWAFULL] bit can be read to determine if the shadow register is currently full. ΓÇó If CMPCTL[SHDWAMODE] = 1, then the shadow register is disabled and any write or read will go directly to the active register, that is the register actively controlling the hardware. ΓÇó In either mode, the active and shadow registers share the same memory map address.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:0] Reserved</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CMPB_AQCTLA</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Counter-Compare B Register/ Action-Qualifier Control Register for Output A (EPWMxA)</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:28] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>AQCTLA_CBD</name>
              <description>[27:26] Action when the time-base counter equals the active CMPB register and the counter is decrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>AQCTLA_CBU</name>
              <description>[25:24] Action when the counter equals the active CMPB register and the counter is incrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>AQCTLA_CAD</name>
              <description>[23:22] Action when the counter equals the active CMPA register and the counter is decrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>AQCTLA_CAU</name>
              <description>[21:20] Action when the counter equals the active CMPA register and the counter is incrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>AQCTLA_PRD</name>
              <description>[19:18] Action when the counter equals the period. Note: By definition, in count up-down mode when the counter equals period the direction is defined as 0 or counting down. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>AQCTLA_ZRO</name>
              <description>[17:16] Action when counter equals zero. Note: By definition, in count up-down mode when the counter equals 0 the direction is defined as 1 or counting up. 0 Do nothing (action disabled) 1h Clear: force EPWMxA output low. 2h Set: force EPWMxA output high. 3h Toggle EPWMxA output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CMPB</name>
              <description>[15:0] The value in the active CMPB register is continuously compared to the time-base counter (TBCTR). When the values are equal, the counter-compare module generates a "time-base counter equal to counter compare B" event. This event is sent to the action-qualifier where it is qualified and converted it into one or more actions. These actions can be applied to either the EPWMxA or the EPWMxB output depending on the configuration of the AQCTLA and AQCTLB registers. The actions that can be defined in the AQCTLA and AQCTLB registers include: ΓÇó Do nothing. event is ignored. ΓÇó Clear: Pull the EPWMxA and/or EPWMxB signal low ΓÇó Set: Pull the EPWMxA and/or EPWMxB signal high ΓÇó Toggle the EPWMxA and/or EPWMxB signal Shadowing of this register is enabled and disabled by the CMPCTL[SHDWBMODE] bit. By default this register is shadowed. ΓÇó If CMPCTL[SHDWBMODE] = 0, then the shadow is enabled and any write or read will automatically go to the shadow register. In this case, the CMPCTL[LOADBMODE] bit field determines which event will load the active register from the shadow register: ΓÇó Before a write, the CMPCTL[SHDWBFULL] bit can be read to determine if the shadow register is currently full. ΓÇó If CMPCTL[SHDWBMODE] = 1, then the shadow register is disabled and any write or read will go directly to the active register, that is the register actively controlling the hardware. ΓÇó In either mode, the active and shadow registers share the same memory map address</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AQCTLB_AQSFRC</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Action-Qualifier Control Register for Output B (EPWMxB)/ Action-Qualifier Software Force Register</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>AQSFRC_RLDCSF</name>
              <description>[23:22] AQCSFRC Active Register Reload From Shadow Options 0 Load on event counter equals zero 1h Load on event counter equals period 2h Load on event counter equals zero or counter equals period 3h Load immediately (the active register is directly accessed by the CPU and is not loaded from the shadow register).</description>
              <bitWidth>2</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>AQSFRC_OTSFB</name>
              <description>[21:21] One-Time Software Forced Event on Output B 0 Writing a 0 has no effect. Always reads back a 0 This bit is auto cleared once a write to this register is complete (that is, a forced event is initiated.) This is a one-shot forced event. It can be overridden by another subsequent event on output B. 1 Initiates a single s/w forced event</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>AQSFRC_ACTSFB</name>
              <description>[20:19] Action when One-Time Software Force B Is invoked 0 Does nothing (action disabled) 1h Clear (low) 2h Set (high) 3h Toggle (Low -&gt; High, High -&gt; Low) Note: This action is not qualified by counter direction (CNT_dir)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>AQSFRC_OTSFA</name>
              <description>[18:18] One-Time Software Forced Event on Output A 0 Writing a 0 has no effect. Always reads back a 0. This bit is auto cleared once a write to this register is complete (that is, a forced event is initiated). 1 Initiates a single software forced event</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>AQSFRC_ACTSFA</name>
              <description>[17:16] Action When One-Time Software Force A Is Invoked 0 Does nothing (action disabled) 1h Clear (low) 2h Set (high) 3h Toggle (Low ΓåÆ High, High ΓåÆ Low) Note: This action is not qualified by counter direction (CNT_dir)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:12] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>AQCTLB_CBD</name>
              <description>[11:10] Action when the counter equals the active CMPB register and the counter is decrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>AQCTLB_CBU</name>
              <description>[9:8] Action when the counter equals the active CMPB register and the counter is incrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>AQCTLB_CAD</name>
              <description>[7:6] Action when the counter equals the active CMPA register and the counter is decrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>AQCTLB_CAU</name>
              <description>[5:4] Action when the counter equals the active CMPA register and the counter is incrementing. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>AQCTLB_PRD</name>
              <description>[3:2] Action when the counter equals the period. Note: By definition, in count up-down mode when the counter equals period the direction is defined as 0 or counting down. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>AQCTLB_ZRO</name>
              <description>[1:0] Action when counter equals zero. Note: By definition, in count up-down mode when the counter equals 0 the direction is defined as 1 or counting up. 0 Do nothing (action disabled) 1h Clear: force EPWMxB output low. 2h Set: force EPWMxB output high. 3h Toggle EPWMxB output: low output signal will be forced high, and a high signal will be forced low.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>AQCSFRC_DBCTL</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>Dead-Band Generator Control Register/ Action-Qualifier Continuous S/W Force Register Set</description>
          <fields>
            <field>
              <name>DBCTL_HALFCYCLE</name>
              <description>[31:31] Half Cycle Clocking Enable Bit: 0 Full cycle clocking enabled. The dead-band counters are clocked at the TBCLK rate. 1 Half cycle clocking enabled. The dead-band counters are clocked at TBCLK ∩┐╜ 2.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[30:22] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>DBCTL_IN_MODE</name>
              <description>[21:20] Dead Band Input Mode Control Bit 5 controls the S5 switch and bit 4 controls the S4 switch shown in Figure 35-28. This allows you to select the input source to the falling-edge and rising-edge delay. To produce classical dead-band waveforms the default is EPWMxA In is the source for both falling and rising-edge delays. 0 EPWMxA In (from the action-qualifier) is the source for both falling-edge and rising-edge delay. 1h EPWMxB In (from the action-qualifier) is the source for rising-edge delayed signal. EPWMxA In (from the action-qualifier) is the source for falling-edge delayed signal. 2h EPWMxA In (from the action-qualifier) is the source for rising-edge delayed signal. EPWMxB In (from the action-qualifier) is the source for falling-edge delayed signal. 3h EPWMxB In (from the action-qualifier) is the source for both rising-edge delay and falling-edge delayed signal.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DBCTL_POLSEL</name>
              <description>[19:18] Polarity Select Control Bit 3 controls the S3 switch and bit 2 controls the S2 switch shown in Figure 35-28. This allows you to selectively invert one of the delayed signals before it is sent out of the dead-band submodule. The following descriptions correspond to classical upper/lower switch control as found in one leg of a digital motor control inverter. These assume that DBCTL[OUT_MODE] = 1,1 and DBCTL[IN_MODE] = 0,0. Other enhanced modes are also possible, but not regarded as typical usage modes. 0 Active high (AH) mode. Neither EPWMxA nor EPWMxB is inverted (default). 1h Active low complementary (ALC) mode. EPWMxA is inverted. 2h Active high complementary (AHC). EPWMxB is inverted. 3h Active low (AL) mode. Both EPWMxA and EPWMxB are inverted</description>
              <bitWidth>2</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DBCTL_OUT_MODE</name>
              <description>[17:16] Dead-band Output Mode Control Bit 1 controls the S1 switch and bit 0 controls the S0 switch shown in Figure 35-28. This allows you to selectively enable or bypass the dead-band generation for the falling-edge and rising-edge delay. 0 Dead-band generation is bypassed for both output signals. In this mode, both the EPWMxA and EPWMxB output signals from the action-qualifier are passed directly to the PWM-chopper submodule. In this mode, the POLSEL and IN_MODE bits have no effect. 1h Disable rising-edge delay. The EPWMxA signal from the action-qualifier is passed straight through to the EPWMxA input of the PWM-chopper submodule. The falling-edge delayed signal is seen on output EPWMxB. The input signal for the delay is determined by DBCTL[IN_MODE]. 2h The rising-edge delayed signal is seen on output EPWMxA. The input signal for the delay is determined by DBCTL[IN_MODE]. Disable falling-edge delay. The EPWMxB signal from the action-qualifier is passed straight through to the EPWMxB input of the PWM-chopper submodule. 3h Dead-band is fully enabled for both rising-edge delay on output EPWMxA and falling-edge delay on output EPWMxB. The input signal for the delay is determined by DBCTL[IN_MODE].</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:4] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>AQCSFRC_CSFB</name>
              <description>[3:2] Continuous Software Force on Output B In immediate mode, a continuous force takes effect on the next TBCLK edge. In shadow mode, a continuous force takes effect on the next TBCLK edge after a shadow load into the active register. To configure shadow mode, use AQSFRC[RLDCSF]. 0 Forcing disabled, that is, has no effect 1h Forces a continuous low on output B 2h Forces a continuous high on output B 3h Software forcing is disabled and has no effect</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>AQCSFRC_CSFA</name>
              <description>[1:0] Continuous Software Force on Output A In immediate mode, a continuous force takes effect on the next TBCLK edge. In shadow mode, a continuous force takes effect on the next TBCLK edge after a shadow load into the active register. 0 Forcing disabled, that is, has no effect 1h Forces a continuous low on output A 2h Forces a continuous high on output A 3h Software forcing is disabled and has no effect</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DBRED_DBFED</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>Dead-Band Generator Rising Edge Delay Count Register/ Dead-Band Generator Falling Edge Delay Count Register</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>DBFED_DEL</name>
              <description>[25:16] Falling Edge Delay Count. 10-bit counter</description>
              <bitWidth>10</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>DBRED_DEL</name>
              <description>[9:0] Rising Edge Delay Count. 10-bit counter</description>
              <bitWidth>10</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TZSEL_TZDCSEL</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>Trip Zone Digital Compare Select Register/ Trip-Zone Select Register</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:28] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>TZDCSEL_DCBEVT2</name>
              <description>[27:25] Digital Compare Output B Event 2 Selection 0 Event disabled 1h DCBH = low, DCBL = don't care 2h DCBH = high, DCBL = don't care 3h DCBL = low, DCBH = don't care 4h DCBL = high, DCBH = don't care 5h DCBL = high, DCBH = low 6h-7h Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>TZDCSEL_DCBEVT1</name>
              <description>[24:22] Digital Compare Output B Event 1 Selection 0 Event disabled 1h DCBH = low, DCBL = don't care 2h DCBH = high, DCBL = don't care 3h DCBL = low, DCBH = don't care 4h DCBL = high, DCBH = don't care 5h DCBL = high, DCBH = low 6h-7h Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>TZDCSEL_DCAEVT2</name>
              <description>[21:19] Digital Compare Output A Event 2 Selection 0 Event disabled 1h DCAH = low, DCAL = don't care 2h DCAH = high, DCAL = don't care 3h DCAL = low, DCAH = don't care 4h DCAL = high, DCAH = don't care 5h DCAL = high, DCAH = low 6h-7h Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TZDCSEL_DCAEVT1</name>
              <description>[18:16] Digital Compare Output A Event 1 Selection 0 Event disabled 1h DCAH = low, DCAL = don't care 2h DCAH = high, DCAL = don't care 3h DCAL = low, DCAH = don't care 4h DCAL = high, DCAH = don't care 5h DCAL = high, DCAH = low 6h-7h Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>TZSEL_DCBEVT1</name>
              <description>[15:15] Digital Compare Output B Event 1 Select 0 Disable DCBEVT1 as one-shot-trip source for this ePWM module. 1 Enable DCBEVT1 as one-shot-trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>TZSEL_DCAEVT1</name>
              <description>[14:14] Digital Compare Output A Event 1 Select 0 Disable DCAEVT1 as one-shot-trip source for this ePWM module. 1 Enable DCAEVT1 as one-shot-trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT6</name>
              <description>[13:13] Trip-zone 6 (TZ6) Select 0 Disable TZ6 as a one-shot trip source for this ePWM module. 1 Enable TZ6 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT5</name>
              <description>[12:12] Trip-zone 5 (TZ5) Select 0 Disable TZ5 as a one-shot trip source for this ePWM module 1 Enable TZ5 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT4</name>
              <description>[11:11] Trip-zone 4 (TZ4) Select 0 Disable TZ4 as a one-shot trip source for this ePWM module 1 Enable TZ4 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT3</name>
              <description>[10:10] Trip-zone 3 (TZ3) Select 0 Disable TZ3 as a one-shot trip source for this ePWM module 1 Enable TZ3 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT2</name>
              <description>[9:9] Trip-zone 2 (TZ2) Select 0 Disable TZ2 as a one-shot trip source for this ePWM module 1 Enable TZ2 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>TZSEL_OSHT1</name>
              <description>[8:8] Trip-zone 1 (TZ1) Select 0 Disable TZ1 as a one-shot trip source for this ePWM module 1 Enable TZ1 as a one-shot trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TZSEL_DCBEVT2</name>
              <description>[7:7] Digital Compare Output B Event 2 Select 0 Disable DCBEVT2 as a CBC trip source for this ePWM module 1 Enable DCBEVT2 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TZSEL_DCAEVT2</name>
              <description>[6:6] Digital Compare Output A Event 2 Select 0 Disable DCAEVT2 as a CBC trip source for this ePWM module 1 Enable DCAEVT2 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC6</name>
              <description>[5:5] Trip-zone 6 (TZ6) Select 0 Disable TZ6 as a CBC trip source for this ePWM module 1 Enable TZ6 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC5</name>
              <description>[4:4] Trip-zone 5 (TZ5) Select 0 Disable TZ5 as a CBC trip source for this ePWM module 1 Enable TZ5 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC4</name>
              <description>[3:3] Trip-zone 4 (TZ4) Select 0 Disable TZ4 as a CBC trip source for this ePWM module 1 Enable TZ4 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC3</name>
              <description>[2:2] Trip-zone 3 (TZ3) Select 0 Disable TZ3 as a CBC trip source for this ePWM module 1 Enable TZ3 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC2</name>
              <description>[1:1] Trip-zone 2 (TZ2) Select 0 Disable TZ2 as a CBC trip source for this ePWM module 1 Enable TZ2 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TZSEL_CBC1</name>
              <description>[0:0] Trip-zone 1 (TZ1) Select 0 Disable TZ1 as a CBC trip source for this ePWM module 1 Enable TZ1 as a CBC trip source for this ePWM module</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TZCTL_TZEINT</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>Trip-Zone Control Register/ Trip-Zone Enable Interrupt Register</description>
          <fields>
            <field>
              <name>Reserved3</name>
              <description>[31:23] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>TZEINT_DCBEVT2</name>
              <description>[22:22] Digital Comparator Output B Event 2 Interrupt Enable 0 Disabled 1 Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>TZEINT_DCBEVT1</name>
              <description>[21:21] Digital Comparator Output B Event 1 Interrupt Enable 0 Disabled 1 Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>TZEINT_DCAEVT2</name>
              <description>[20:20] Digital Comparator Output A Event 2 Interrupt Enable 0 Disabled 1 Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TZEINT_DCAEVT1</name>
              <description>[19:19] Digital Comparator Output A Event 1 Interrupt Enable 0 Disabled 1 Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TZEINT_OST</name>
              <description>[18:18] Trip-zone One-Shot Interrupt Enable 0 Disable one-shot interrupt generation 1 Enable Interrupt generation; a one-shot trip event will cause a EPWMx_TZINT VIM interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>TZEINT_CBC</name>
              <description>[17:17] Trip-zone Cycle-by-Cycle Interrupt Enable 0 Disable cycle-by-cycle interrupt generation. 1 Enable interrupt generation; a cycle-by-cycle trip event will cause an EPWMx_TZINT VIM interrupt</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[16:16] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:12] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>TZCTL_DCBEVT2</name>
              <description>[11:10] Digital Compare Output B Event 2 Action On EPWMxB: 0 High-impedance (EPWMxB = High-impedance state) 1h Force EPWMxB to a high state. 2h Force EPWMxB to a low state. 3h Do Nothing, trip action is disabled</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>TZCTL_DCBEVT1</name>
              <description>[9:8] Digital Compare Output B Event 1 Action On EPWMxB: 0 High-impedance (EPWMxB = High-impedance state) 1h Force EPWMxB to a high state. 2h Force EPWMxB to a low state. 3h Do Nothing, trip action is disabled</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>TZCTL_DCAEVT2</name>
              <description>[7:6] Digital Compare Output A Event 2 Action On EPWMxA: 0 High-impedance (EPWMxA = High-impedance state) 1h Force EPWMxA to a high state. 2h Force EPWMxA to a low state. 3h Do Nothing, trip action is disabled</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TZCTL_DCAEVT1</name>
              <description>[5:4] Digital Compare Output A Event 1 Action On EPWMxA: 0 High-impedance (EPWMxA = High-impedance state) 1h Force EPWMxA to a high state. 2h Force EPWMxA to a low state. 3h Do Nothing, trip action is disabled</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TZCTL_TZB</name>
              <description>[3:2] When a trip event occurs the following action is taken on output EPWMxB. Which trip-zone pins can cause an event is defined in the TZSEL register. 0 High-impedance (EPWMxB = High-impedance state) 1h Force EPWMxB to a high state 2h Force EPWMxB to a low state 3h Do nothing, no action is taken on EPWMxB.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TZCTL_TZA</name>
              <description>[1:0] When a trip event occurs the following action is taken on output EPWMxA. Which trip-zone pins can cause an event is defined in the TZSEL register. 0 High-impedance (EPWMxA = High-impedance state) 1h Force EPWMxA to a high state 2h Force EPWMxA to a low state 3h Do nothing, no action is taken on EPWMxA</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TZFLG_TZCLR</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>Trip-Zone Flag Register/ Trip-Zone Clear Register</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:23] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>TZCLR_DCBEVT2</name>
              <description>[22:22] Clear Flag for Digital Compare Output B Event 2 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 clears the DCBEVT2 event trip condition.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>TZCLR_DCBEVT1</name>
              <description>[21:21] Clear Flag for Digital Compare Output B Event 1 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 clears the DCBEVT1 event trip condition</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>TZCLR_DCAEVT2</name>
              <description>[20:20] Clear Flag for Digital Compare Output A Event 2 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 clears the DCAEVT2 event trip condition</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>TZCLR_DCAEVT1</name>
              <description>[19:19] Clear Flag for Digital Compare Output A Event 1 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 clears the DCAEVT1 event trip condition.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>TZCLR_OST</name>
              <description>[18:18] Clear Flag for One-Shot Trip (OST) Latch 0 Has no effect. Always reads back a 0. 1 Clears this Trip (set) condition.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>TZCLR_CBC</name>
              <description>[17:17] Clear Flag for Cycle-By-Cycle (CBC) Trip Latch 0 Has no effect. Always reads back a 0. 1 Clears this Trip (set) condition.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>TZCLR_INT</name>
              <description>[16:16] Global Interrupt Clear Flag 0 Has no effect. Always reads back a 0. 1 Clears the trip-interrupt flag for this ePWM module (TZFLG[INT]). NOTE: No further EPWMx_TZINT VIM interrupts will be generated until the flag is cleared. If the TZFLG[INT] bit is cleared and any of the other flag bits are set, then another interrupt pulse will be generated. Clearing all flag bits will prevent further interrupts.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:7] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TZFLG_DCBEVT2</name>
              <description>[6:6] Latched Status Flag for Digital Compare Output B Event 2 0 Indicates no trip event has occurred on DCBEVT2 1 Indicates a trip event has occurred for the event defined for DCBEVT2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TZFLG_DCBEVT1</name>
              <description>[5:5] Latched Status Flag for Digital Compare Output B Event 1 0 Indicates no trip event has occurred on DCBEVT1 1 Indicates a trip event has occurred for the event defined for DCBEVT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TZFLG_DCAEVT2</name>
              <description>[4:4] Latched Status Flag for Digital Compare Output A Event 2 0 Indicates no trip event has occurred on DCAEVT2 1 Indicates a trip event has occurred for the event defined for DCAEVT2</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TZFLG_DCAEVT1</name>
              <description>[3:3] Latched Status Flag for Digital Compare Output A Event 1 0 Indicates no trip event has occurred on DCAEVT1 1 Indicates a trip event has occurred for the event defined for DCAEVT1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TZFLG_OST</name>
              <description>[2:2] Latched Status Flag for A One-Shot Trip Event 0 No one-shot trip event has occurred. 1 Indicates a trip event has occurred on a pin selected as a one-shot trip source. This bit is cleared by writing the appropriate value to the TZCLR register</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TZFLG_CBC</name>
              <description>[1:1] Latched Status Flag for Cycle-By-Cycle Trip Event 0 No cycle-by-cycle trip event has occurred. 1 Indicates a trip event has occurred on a signal selected as a cycle-by-cycle trip source. The TZFLG[CBC] bit will remain set until it is manually cleared by the user. If the cycle-by-cycle trip event is still present when the CBC bit is cleared, then CBC will be immediately set again. The specified condition on the signal is automatically cleared when the ePWM time-base counter reaches zero (TBCTR = 0x0000) if the trip condition is no longer present. The condition on the signal is only cleared when the TBCTR = 0x0000 no matter where in the cycle the CBC flag is cleared. This bit is cleared by writing the appropriate value to the TZCLR register</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>TZFLG_INT</name>
              <description>[0:0] Latched Trip Interrupt Status Flag 0 Indicates no interrupt has been generated. 1 Indicates an EPWMx_TZINT VIM interrupt was generated because of a trip condition. No further EPWMx_TZINT VIM interrupts will be generated until this flag is cleared. If the interrupt flag is cleared when either CBC or OST is set, then another interrupt pulse will be generated. Clearing all flag bits will prevent further interrupts. This bit is cleared by writing the appropriate value to the TZCLR register</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TZFRC_ETSEL</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>Trip-Zone Force Register / Event-Trigger Selection Register</description>
          <fields>
            <field>
              <name>ETSEL_SOCBEN</name>
              <description>[31:31] Enable the ADC Start of Conversion B (EPWMxSOCB) Pulse 0 Disable EPWMxSOCB. 1 Enable EPWMxSOCB pulse</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>ETSEL_SOCBSEL</name>
              <description>[30:28] EPWMxSOCB Selection Options These bits determine when a EPWMxSOCB pulse will be generated. 0 Enable DCBEVT1.soc event 1h Enable event time-base counter equal to zero. (TBCTR = 0x0000) 2h Enable event time-base counter equal to period (TBCTR = TBPRD) 3h Enable event time-base counter equal to zero or period (TBCTR = 0x0000 or TBCTR = TBPRD). This mode is useful in up-down count mode. 4h Enable event time-base counter equal to CMPA when the timer is incrementing. 5h Enable event time-base counter equal to CMPA when the timer is decrementing. 6h Enable event: time-base counter equal to CMPB when the timer is incrementing. 7h Enable event: time-base counter equal to CMPB when the timer is decrementing</description>
              <bitWidth>3</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>ETSEL_SOCAEN</name>
              <description>[27:27] Enable the ADC Start of Conversion A (EPWMxSOCA) Pulse 0 Disable EPWMxSOCA. 1 Enable EPWMxSOCA pulse.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>ETSEL_SOCASEL</name>
              <description>[26:24] EPWMxSOCA Selection Options These bits determine when a EPWMxSOCA pulse will be generated. 0 Enable DCAEVT1.soc event 1h Enable event time-base counter equal to zero. (TBCTR = 0x0000) 2h Enable event time-base counter equal to period (TBCTR = TBPRD) 3h Enable event time-base counter equal to zero or period (TBCTR = 0x0000 or TBCTR = TBPRD). This mode is useful in up-down count mode. 4h Enable event time-base counter equal to CMPA when the timer is incrementing. 5h Enable event time-base counter equal to CMPA when the timer is decrementing. 6h Enable event: time-base counter equal to CMPB when the timer is incrementing. 7h Enable event: time-base counter equal to CMPB when the timer is decrementing</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[23:20] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>ETSEL_INTEN</name>
              <description>[19:19] Enable ePWM Interrupt (EPWMx_INT) Generation 0 Disable EPWMx_INT generation 1 Enable EPWMx_INT generation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>ETSEL_INTSEL</name>
              <description>[18:16] ePWM Interrupt (EPWMx_INT) Selection Options 0 Reserved 1h Enable event time-base counter equal to zero. (TBCTR = 0x0000) 2h Enable event time-base counter equal to period (TBCTR = TBPRD) 3h Enable event time-base counter equal to zero or period (TBCTR = 0x0000 or TBCTR = TBPRD). This mode is useful in up-down count mode. 4h Enable event time-base counter equal to CMPA when the timer is incrementing. 5h Enable event time-base counter equal to CMPA when the timer is decrementing. 6h Enable event: time-base counter equal to CMPB when the timer is incrementing. 7h Enable event: time-base counter equal to CMPB when the timer is decrementing.</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[15:7] Reserved</description>
              <bitWidth>9</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>TZFRC_DCBEVT2</name>
              <description>[6:6] Force Flag for Digital Compare Output B Event 2 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 forces the DCBEVT2 event trip condition and sets the TZFLG[DCBEVT2] bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>TZFRC_DCBEVT1</name>
              <description>[5:5] Force Flag for Digital Compare Output B Event 1 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 forces the DCBEVT1 event trip condition and sets the TZFLG[DCBEVT1] bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>TZFRC_DCAEVT2</name>
              <description>[4:4] Force Flag for Digital Compare Output A Event 2 0 Writing 0 has no effect. This bit always reads back 0. 1 Writing 1 forces the DCAEVT2 event trip condition and sets the TZFLG[DCAEVT2] bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TZFRC_DCAEVT1</name>
              <description>[3:3] Force Flag for Digital Compare Output A Event 1 0 Writing 0 has no effect. This bit always reads back 0 1 Writing 1 forces the DCAEVT1 event trip condition and sets the TZFLG[DCAEVT1] bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>TZFRC_OST</name>
              <description>[2:2] Force a One-Shot Trip Event via Software 0 Writing of 0 is ignored. Always reads back a 0. 1 Forces a one-shot trip event and sets the TZFLG[OST] bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>TZFRC_CBC</name>
              <description>[1:1] Force a Cycle-by-Cycle Trip Event via Software 0 Writing of 0 is ignored. Always reads back a 0. 1 Forces a cycle-by-cycle trip event and sets the TZFLG[CBC] bit.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[0:0] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ETPS_ETFLG</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Event-Trigger Pre-Scale Register/ Event-Trigger Flag Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>ETFLG_SOCB</name>
              <description>[19:19] Latched ePWM ADC Start-of-Conversion B (EPWMxSOCB) Status Flag 0 Indicates no EPWMxSOCB event occurred 1 Indicates that a start of conversion pulse was generated on EPWMxSOCB. The EPWMxSOCB output will continue to be generated even if the flag bit is set.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>ETFLG_SOCA</name>
              <description>[18:18] Latched ePWM ADC Start-of-Conversion A (EPWMxSOCA) Status Flag Unlike the ETFLG[INT] flag, the EPWMxSOCA output will continue to pulse even if the flag bit is set. 0 Indicates no event occurred 1 Indicates that a start of conversion pulse was generated on EPWMxSOCA. The EPWMxSOCA output will continue to be generated even if the flag bit is set</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[17:17] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>ETFLG_INT</name>
              <description>[16:16] Latched ePWM Interrupt (EPWMx_INT) Status Flag 0 Indicates no event occurred 1 Indicates that an ePWMx interrupt (EWPMx_INT) was generated. No further interrupts will be generated until the flag bit is cleared. Up to one interrupt can be pending while the ETFLG[INT] bit is still set. If an interrupt is pending, it will not be generated until after the ETFLG[INT] bit is cleared</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ETPS_SOCBCNT</name>
              <description>[15:14] ePWM ADC Start-of-Conversion B Event (EPWMxSOCB) Counter Register These bits indicate how many selected ETSEL[SOCBSEL] events have occurred: 0 No events have occurred. 1h 1 event has occurred. 2h 2 events have occurred. 3h 3 events have occurred</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>ETPS_SOCBPRD</name>
              <description>[13:12] ePWM ADC Start-of-Conversion B Event (EPWMxSOCB) Period Select These bits determine how many selected ETSEL[SOCBSEL] events need to occur before an EPWMxSOCB pulse is generated. To be generated, the pulse must be enabled (ETSEL[SOCBEN] = 1). The SOCB pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG[SOCB] = 1). Once the SOCB pulse is generated, the ETPS[SOCBCNT] bits will automatically be cleared. 0 Disable the SOCB event counter. No EPWMxSOCB pulse will be generated 1h Generate the EPWMxSOCB pulse on the first event: ETPS[SOCBCNT] = 0,1 2h Generate the EPWMxSOCB pulse on the second event: ETPS[SOCBCNT] = 1,0 3h Generate the EPWMxSOCB pulse on the third event: ETPS[SOCBCNT] = 1,1</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>ETPS_SOCACNT</name>
              <description>[11:10] ePWM ADC Start-of-Conversion A Event (EPWMxSOCA) Counter Register These bits indicate how many selected ETSEL[SOCASEL] events have occurred: 0 No events have occurred. 1h 1 event has occurred. 2h 2 events have occurred. 3h 3 events have occurred.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>ETPS_SOCAPRD</name>
              <description>[9:8] ePWM ADC Start-of-Conversion A Event (EPWMxSOCA) Period Select These bits determine how many selected ETSEL[SOCASEL] events need to occur before an EPWMxSOCA pulse is generated. To be generated, the pulse must be enabled (ETSEL[SOCAEN] = 1). The SOCA pulse will be generated even if the status flag is set from a previous start of conversion (ETFLG[SOCA] = 1). Once the SOCA pulse is generated, the ETPS[SOCACNT] bits will automatically be cleared. 0 Disable the SOCA event counter. No EPWMxSOCA pulse will be generated 1h Generate the EPWMxSOCA pulse on the first event: ETPS[SOCACNT] = 0,1 2h Generate the EPWMxSOCA pulse on the second event: ETPS[SOCACNT] = 1,0 3h Generate the EPWMxSOCA pulse on the third event: ETPS[SOCACNT] = 1,1</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[7:4] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ETPS_INTCNT</name>
              <description>[3:2] ePWM Interrupt Event (EPWMx_INT) Counter Register These bits indicate how many selected ETSEL[INTSEL] events have occurred. These bits are automatically cleared when an interrupt pulse is generated. If interrupts are disabled, ETSEL[INT] = 0 or the interrupt flag is set, ETFLG[INT] = 1, the counter will stop counting events when it reaches the period value ETPS[INTCNT] = ETPS[INTPRD]. 0 No events have occurred. 1h 1 event has occurred. 2h 2 events have occurred. 3h 3 events have occurred.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>ETPS_INTPRD</name>
              <description>[1:0] ePWM Interrupt (EPWMx_INT) Period Select These bits determine how many selected ETSEL[INTSEL] events need to occur before an interrupt is generated. To be generated, the interrupt must be enabled (ETSEL[INT] = 1). If the interrupt status flag is set from a previous interrupt (ETFLG[INT] = 1) then no interrupt will be generated until the flag is cleared via the ETCLR[INT] bit. This allows for one interrupt to be pending while another is still being serviced. Once the interrupt is generated, the ETPS[INTCNT] bits will automatically be cleared. Writing a INTPRD value that is the same as the current counter value will trigger an interrupt if it is enabled and the status flag is clear. Writing a INTPRD value that is less than the current counter value will result in an undefined state. If a counter event occurs at the same instant as a new zero or non-zero INTPRD value is written, the counter is incremented. 0 Disable the interrupt event counter. No interrupt will be generated and ETFRC[INT] is ignored. 1h Generate an interrupt on the first event INTCNT = 01 (first event) 2h Generate interrupt on ETPS[INTCNT] = 1,0 (second event) 3h Generate interrupt on ETPS[INTCNT] = 1,1 (third event)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ETCLR_ETFRC</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Event-Trigger Clear Register/ Event-Trigger Force Register</description>
          <fields>
            <field>
              <name>Reserved4</name>
              <description>[31:20] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>ETFRC_SOCB</name>
              <description>[19:19] SOCB Force Bit. The SOCB pulse will only be generated if the event is enabled in the ETSEL register. The ETFLG[SOCB] flag bit will be set regardless. 0 Has no effect. Always reads back a 0. 1 Generates a pulse on EPWMxSOCB and sets the SOCBFLG bit. This bit is used for test purposes</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>ETFRC_SOCA</name>
              <description>[18:18] SOCA Force Bit. The SOCA pulse will only be generated if the event is enabled in the ETSEL register. The ETFLG[SOCA] flag bit will be set regardless. 0 Writing 0 to this bit will be ignored. Always reads back a 0. 1 Generates a pulse on EPWMxSOCA and set the SOCAFLG bit. This bit is used for test purposes</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[17:17] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>ETFRC_INT</name>
              <description>[16:16] INT Force Bit. The interrupt will only be generated if the event is enabled in the ETSEL register. The INT flag bit will be set regardless. 0 Writing 0 to this bit will be ignored. Always reads back a 0. 1 Generates an interrupt on EPWMxINT and set the INT flag bit. This bit is used for test purposes</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:4] Reserved</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>ETCLR_SOCB</name>
              <description>[3:3] ePWM ADC Start-of-Conversion B (EPWMxSOCB) Flag Clear Bit 0 Writing a 0 has no effect. Always reads back a 0 1 Clears the ETFLG[SOCB] flag bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>ETCLR_SOCA</name>
              <description>[2:2] ePWM ADC Start-of-Conversion A (EPWMxSOCA) Flag Clear Bit 0 Writing a 0 has no effect. Always reads back a 0 1 Clears the ETFLG[SOCA] flag bit</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[1:1] Reserved</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>ETCLR_INT</name>
              <description>[0:0] ePWM Interrupt (EPWMx_INT) Flag Clear Bit 0 Writing a 0 has no effect. Always reads back a 0 1 Clears the ETFLG[INT] flag bit and enable further interrupts pulses to be generated</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PCCTL</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>PWM-Chopper Control Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CHPDUTY</name>
              <description>[10:8] Chopping Clock Duty Cycle 0 Duty = 1/8 (12.5%) 1h Duty = 2/8 (25.0%) 2h Duty = 3/8 (37.5%) 3h Duty = 4/8 (50.0%) 4h Duty = 5/8 (62.5%) 5h Duty = 6/8 (75.0%) 6h Duty = 7/8 (87.5%) 7h Reserved</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CHPFREQ</name>
              <description>[7:5] Chopping Clock Frequency 0 Divide by 1 (no prescale, = 12.5 MHz at 100 MHz VCLK3) 1h Divide by 2 (6.25 MHz at 100 MHz VCLK3) 2h Divide by 3 (4.16 MHz at 100 MHz VCLK3) 3h Divide by 4 (3.12 MHz at 100 MHz VCLK3) 4h Divide by 5 (2.50 MHz at 100 MHz VCLK3) 5h Divide by 6 (2.08 MHz at 100 MHz VCLK3) 6h Divide by 7 (1.78 MHz at 100 MHz VCLK3) 7h Divide by 8 (1.56 MHz at 100 MHz VCLK3)</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>OSHTWTH</name>
              <description>[4:1] One-Shot Pulse Width 0 1 x VCLK3 / 8 wide ( = 80 nS at 100 MHz VCLK3) 1h 2 x VCLK3 / 8 wide ( = 160 nS at 100 MHz VCLK3) 2h 3 x VCLK3 / 8 wide ( = 240 nS at 100 MHz VCLK3) 3h 4 x VCLK3 / 8 wide ( = 320 nS at 100 MHz VCLK3) 4h 5 x VCLK3 / 8 wide ( = 400 nS at 100 MHz VCLK3) 5h 6 x VCLK3 / 8 wide ( = 480 nS at 100 MHz VCLK3) 6h 7 x VCLK3 / 8 wide ( = 560 nS at 100 MHz VCLK3) 7h 8 x VCLK3 / 8 wide ( = 640 nS at 100 MHz VCLK3) 8h 9 x VCLK3 / 8 wide ( = 720 nS at 100 MHz VCLK3) 9h 10 x VCLK3 / 8 wide ( = 800 nS at 100 MHz VCLK3) Ah 11 x VCLK3 / 8 wide ( = 880 nS at 100 MHz VCLK3) Bh 12 x VCLK3 / 8 wide ( = 960 nS at 100 MHz VCLK3) Ch 13 x VCLK3 / 8 wide ( = 1040 nS at 100 MHz VCLK3) Dh 14 x VCLK3 / 8 wide ( = 1120 nS at 100 MHz VCLK3) Eh 15 x VCLK3 / 8 wide ( = 1200 nS at 100 MHz VCLK3) Fh 16 x VCLK3 / 8 wide ( = 1280 nS at 100 MHz VCLK3)</description>
              <bitWidth>4</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CHPEN</name>
              <description>[0:0] PWM-chopping Enable 0 Disable (bypass) PWM chopping function 1 Enable chopping function</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved1</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved2</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved3</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved4</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved5</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved6</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved7</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>Reserved8</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCTRIPSEL_DCACTL</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Digital Compare Trip Select Register/ Digital Compare A Control Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:26] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT2FRC_SYNCSEL</name>
              <description>[25:25] DCAEVT2 Force Synchronization Signal Select 0 Source Is Synchronous Signal 1 Source Is Asynchronous Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT2SRCSEL</name>
              <description>[24:24] DCAEVT2 Source Signal Select 0 Source Is DCAEVT2 Signal 1 Source Is DCEVTFILT Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[23:20] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT1SYNCE</name>
              <description>[19:19] DCAEVT1 SYNC, Enable/Disable 0 SYNC Generation Disabled 1 SYNC Generation Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT1SOCE</name>
              <description>[18:18] DCAEVT1 SOC, Enable/Disable 0 SOC Generation Disabled 1 SOC Generation Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT1FRC_SYNCSEL</name>
              <description>[17:17] DCAEVT1 Force Synchronization Signal Select 0 Source Is Synchronous Signal 1 Source Is Asynchronous Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>DCACTL_EVT1SRCSEL</name>
              <description>[16:16] DCAEVT1 Source Signal Select 0 Source Is DCAEVT1 Signal 1 Source Is DCEVTFILT Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DCTRIPSEL_DCBLCOMPSEL</name>
              <description>[15:12] Digital Compare B Low Input Select Defines the source for the DCBL input. The TZ signals, when used as trip signals, are treated as normal inputs and can be defined as active high or active low. 0 TZ1 input 1h TZ2 input 2h TZ3 input All other values Values not shown are reserved. If a device does not have a particular comparitor, then that option is reserved.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>DCTRIPSEL_DCBHCOMPSEL</name>
              <description>[11:8] Digital Compare B High Input Select Defines the source for the DCBH input. The TZ signals, when used as trip signals, are treated as normal inputs and can be defined as active high or active low. 0 TZ1 input 1h TZ2 input 2h TZ3 input All other values Values not shown are reserved. If a device does not have a particular comparitor, then that option is reserved.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>DCTRIPSEL_DCALCOMPSEL</name>
              <description>[7:4] Digital Compare A Low Input Select Defines the source for the DCAL input. The TZ signals, when used as trip signals, are treated as normal inputs and can be defined as active high or active low. 0 TZ1 input 1h TZ2 input 2h TZ3 input All other values Values not shown are reserved. If a device does not have a particular comparitor, then that option is reserved.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DCTRIPSEL_DCAHCOMPSEL</name>
              <description>[3:0] Digital Compare A High Input Select Defines the source for the DCAH input. The TZ signals, when used as trip signals, are treated as normal inputs and can be defined as active high or active low. 0 TZ1 input 1h TZ2 input 2h TZ3 input All other values Values not shown are reserved. If a device does not have a particular comparitor, then that option is reserved.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCBCTL_DCFCTL</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Digital Compare B Control Register/ Digital Compare Filter Control Register</description>
          <fields>
            <field>
              <name>Reserved3</name>
              <description>[31:22] Reserved</description>
              <bitWidth>10</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>DCFCTL_PULSESEL</name>
              <description>[21:20] Pulse Select For Blanking &amp; Capture Alignment 0 Time-base counter equal to period (TBCTR = TBPRD) 1h Time-base counter equal to zero (TBCTR = 0x0000) 2h-3h Reserved</description>
              <bitWidth>2</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>DCFCTL_BLANKINV</name>
              <description>[19:19] Blanking Window Inversion 0 Blanking window not inverted 1 Blanking window inverted</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>DCFCTL_BLANKE</name>
              <description>[18:18] Blanking Window Enable/Disable 0 Blanking window is disabled 1 Blanking window is enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>DCFCTL_SRCSEL</name>
              <description>[17:16] Filter Block Signal Source Select 0 Source Is DCAEVT1 Signal 1h Source Is DCAEVT2 Signal 2h Source Is DCBEVT1 Signal 3h Source Is DCBEVT2 Signal</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:10] Reserved</description>
              <bitWidth>6</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT2FRC_SYNCSEL</name>
              <description>[9:9] DCBEVT2 Force Synchronization Signal Select 0 Source Is Synchronous Signal 1 Source Is Asynchronous Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT2SRCSEL</name>
              <description>[8:8] DCBEVT2 Source Signal Select 0 Source Is DCBEVT2 Signal 1 Source Is DCEVTFILT Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[7:4] Reserved</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT1SYNCE</name>
              <description>[3:3] DCBEVT1 SYNC, Enable/Disable 0 SYNC Generation Disabled 1 SYNC Generation Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT1SOCE</name>
              <description>[2:2] DCBEVT1 SOC, Enable/Disable 0 SOC Generation Disabled 1 SOC Generation Enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT1FRC_SYNCSEL</name>
              <description>[1:1] DCBEVT1 Force Synchronization Signal Select 0 Source Is Synchronous Signal 1 Source Is Asynchronous Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCBCTL_EVT1SRCSEL</name>
              <description>[0:0] DCBEVT1 Source Signal Select 0 Source Is DCBEVT1 Signal 1 Source Is DCEVTFILT Signal</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCCAPCTL_DCFOFFSET</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>Digital Compare Capture Control Register/ Digital Compare Filter Offset Register</description>
          <fields>
            <field>
              <name>DCFOFFSET_OFFSET</name>
              <description>[31:16] Blanking Window Offset These 16-bits specify the number of TBCLK cycles from the blanking window reference to the point when the blanking window is applied. The blanking window reference is either period or zero as defined by the DCFCTL[PULSESEL] bit. This offset register is shadowed and the active register is loaded at the reference point defined by DCFCTL[PULSESEL]. The offset counter is also initialized and begins to count down when the active register is loaded. When the counter expires, the blanking window is applied. If the blanking window is currently active, then the blanking window counter is restarted.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[15:2] Reserved</description>
              <bitWidth>14</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>DCCAPCTL_SHDWMODE</name>
              <description>[1:1] TBCTR Counter Capture Shadow Select Mode 0 Enable shadow mode. The DCCAP active register is copied to shadow register on a TBCTR = TBPRD or TBCTR = zero event as defined by the DCFCTL[PULSESEL] bit. CPU reads of the DCCAP register will return the shadow register contents. 1 Active Mode. In this mode the shadow register is disabled. CPU reads from the DCCAP register will always return the active register contents</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DCCAPCTL_CAPE</name>
              <description>[0:0] TBCTR Counter Capture Enable/Disable 0 Disable the time-base counter capture. 1 Enable the time-base counter capture.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCFOFFSETCNT_DCFWINDOW</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>Digital Compare Filter Offset Counter Register/ Digital Compare Filter Window Register</description>
          <fields>
            <field>
              <name>Reserved1</name>
              <description>[31:24] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>DCFWINDOW_WINDOW</name>
              <description>[23:16] Blanking Window Width 0 No blanking window is generated. 1h-FFh Specifies the width of the blanking window in TBCLK cycles. The blanking window begins when the offset counter expires. When this occurs, the window counter is loaded and begins to count down. If the blanking window is currently active and the offset counter expires, the blanking window counter is restarted. The blanking window can cross a PWM period boundary.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DCFOFFSETCNT_OFFSETCNT</name>
              <description>[15:0] Blanking Offset Counter These 16-bits are read only and indicate the current value of the offset counter. The counter counts down to zero and then stops until it is re-loaded on the next period or zero event as defined by the DCFCTL[PULSESEL] bit. The offset counter is not affected by the free/soft emulation bits. That is, it will always continue to count down if the device is halted by a emulation stop.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DCFWINDOWCNT_DCCAP</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>Digital Compare Filter Window Counter Register/ Digital Compare Counter Capture Register</description>
          <fields>
            <field>
              <name>DCCAP</name>
              <description>[31:16] Digital Compare Time-Base Counter Capture To enable time-base counter capture, set the DCCAPCLT[CAPE] bit to 1. If enabled, reflects the value of the time-base counter (TBCTR) on the low to high edge transition of a filtered (DCEVTFLT) event. Further capture events are ignored until the next period or zero as selected by the DCFCTL[PULSESEL] bit. Shadowing of DCCAP is enabled and disabled by the DCCAPCTL[SHDWMODE] bit. By default this register is shadowed. ΓÇó If DCCAPCTL[SHDWMODE] = 0, then the shadow is enabled. In this mode, the active register is copied to the shadow register on the TBCTR = TBPRD or TBCTR = zero as defined by the DCFCTL[PULSESEL] bit. CPU reads of this register will return the shadow register value. ΓÇó If DCCAPCTL[SHDWMODE] = 1, then the shadow register is disabled. In this mode, CPU reads will return the active register value. The active and shadow registers share the same memory map address.</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:8] Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>DCFWINDOWCNT</name>
              <description>[7:0] 0-FFh Blanking Window Counter These 8 bits are read only and indicate the current value of the window counter. The counter counts down to zero and then stops until it is re-loaded when the offset counter reaches zero again.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TOP_IO_MUX</name>
      <baseAddress>0x5A000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>112</size>
        <usage>registers</usage>
      </addressBlock>
      <description>TOP_IO_MUX</description>
      <registers>
        <register>
          <name>PADAA_cfg_reg</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PADAA_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAB_cfg_reg</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>PADAB_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAC_cfg_reg</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>PADAC_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAD_cfg_reg</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>PADAD_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAE_cfg_reg</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>PADAE_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAF_cfg_reg</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>PADAF_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAG_cfg_reg</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>PADAG_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAH_cfg_reg</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>PADAH_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAI_cfg_reg</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>PADAI_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAJ_cfg_reg</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>PADAJ_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAK_cfg_reg</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>PADAK_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAL_cfg_reg</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>PADAL_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAM_cfg_reg</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>PADAM_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAN_cfg_reg</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>PADAN_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAO_cfg_reg</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>PADAO_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAP_cfg_reg</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>PADAP_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAQ_cfg_reg</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>PADAQ_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAR_cfg_reg</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>PADAR_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAS_cfg_reg</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>PADAS_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAT_cfg_reg</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>PADAT_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAU_cfg_reg</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>PADAU_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAV_cfg_reg</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>PADAV_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAW_cfg_reg</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>PADAW_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADAX_cfg_reg</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>PADAX_cfg_reg</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:11] Reserved</description>
              <bitWidth>21</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>sc1</name>
              <description>[10:10] IO Slew rate control : 0 : higher slew rate. 1: Lower slew rate.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>pupdsel</name>
              <description>[9:9] Pullup/PullDown Selection 0 -- Pull Down</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pi</name>
              <description>[8:8] Pull Inhibit/Pull Disable 0 -- Enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>oe_override</name>
              <description>[7:7] Active Low Output Override, 0: Output is enabled 1: Output disabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>oe_override_ctrl</name>
              <description>[6:6] Active Low Output Override Control : Write 1 to select Active low Output Override value to control IOs OE_N/GZ instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>ie_override</name>
              <description>[5:5] Input Override, 1: Input is enabled 0: input disabled (mask the value from the PAD and send only 0 to the core)</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>ie_override_ctrl</name>
              <description>[4:4] Control to select IE_OVERRIDE : Write 1 to select Override value (IE_OVERRIDE) to control IOs RXACTIVE instead of the control from hardware</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>func_sel</name>
              <description>[3:0] Function select</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>USERMODEEN</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>USERMODEEN</description>
          <fields>
            <field>
              <name>USERMODEEN</name>
              <description>[31:0] Write 0XADADADAD to enable user mode write access to IO CFG space</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PADGLBLCFGREG</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>PADGLBLCFGREG</description>
          <fields>
            <field>
              <name>PADGLBLCFGREG</name>
              <description>[31:0] 2:0 : global_ie_n_ctl - Write 3'b111 to pass global_ie_n_val to IE_N/RXACTIVE_N pin of all the IOs. 3 : global_ie_n_val - Active low 10:8 : global_oe_n_ctl - Write 3'b111 to pass global_oe_n_val to OE_N/GZ pin of all the IOs. 11 : global_oe_n_val - Active low 18:16 : global_pi_ctl - Write 3'b111 to pass global_pi_val and global_pu_val to all the IOs 19 : global_pi_val 20 : global_pu_val</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IOCFGKICK0</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>IOCFGKICK0</description>
          <fields>
            <field>
              <name>IOCFGKICK0</name>
              <description>[31:0] Kicker 0 Register. The value 83E7 0B13h must be written to KICK0 as part of the process to unlock the CPU write access to the above PIN MUX registers (including IOCFGKICK1)</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>IOCFGKICK1</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>IOCFGKICK1</description>
          <fields>
            <field>
              <name>IOCFGKICK1</name>
              <description>[31:0] Kicker 1 Register. The value 95A4 F1E0h must be written to the KICK1 as part of the process to unlock the CPU write access to above PINMUX registers (excluding IOCFGKICK0).  IOCFGKICK0 has to be written with 83E70B13h to enable access to IOCFGKICK1.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_PRCM</name>
      <baseAddress>0x5A040000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>7216</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CPUCLKCTL</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>CPUCLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] Slect the source clock:#br#0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CANCLKCTL</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>CANCLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPICLKCTL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>SPICLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>QSPICLKCTL</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>QSPICLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOPSSCLKCTL</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>TOPSSCLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RTICLKCTL</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>RTICLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : REFCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>WDTCLKCTL</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>WDTCLKCTL</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[31:24] Current Clock selected by GCM Clock Mux#br#0x1 : XTALCLK#br#0x2 : XTALCLKX2#br#0x4 : MDLL#br#0x8 : APLL/DPLL#br#0x10 : RCCLK</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>srcsel</name>
              <description>[3:0] 0x0 : XTALCLK#br#0x1 : XTALCLKX2#br#0x2 : MDLL#br#0x3 : APLL/DPLL#br#0x4 : RCCLK#br#For other values if the lower 3 bits matches with above, corresponding clock is selected.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>UART1CLKCTL</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>UART1CLKCTL</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>UART2CLKCTL</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>UART2CLKCTL</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>I2CCLKCTL</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>I2CCLKCTL</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LINCLKCTL</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>LINCLKCTL</description>
          <fields>
            <field>
              <name>currdivr</name>
              <description>[19:16] Gives the current divr setting used by the clock divider.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>switchen</name>
              <description>[12:12] 1'b1 : Switch to the new divide ratio set by divr bits above. This happens  when output clock of the divider is transitioning from 0-&gt;1,</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>divr</name>
              <description>[11:8] Divide value#br#0x0 : div1#br#0x1 : div2#br#0x2 : div3#br#.#br#.#br#0xF = div16</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>gate</name>
              <description>[7:4] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED0</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>RESERVED0</description>
          <fields>
            <field>
              <name>wphres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED1</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>RESERVED1</description>
          <fields>
            <field>
              <name>wphres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED2</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>RESERVED2</description>
          <fields>
            <field>
              <name>wphres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RESERVED3</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>RESERVED3</description>
          <fields>
            <field>
              <name>wphres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>rores</name>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>rwres</name>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>VBUSCLKGATE0</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>VBUSCLKGATE0</description>
          <fields>
            <field>
              <name>i2c</name>
              <description>[29:27] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>dcc</name>
              <description>[26:24] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>wdt</name>
              <description>[23:21] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>rti</name>
              <description>[20:18] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>esm</name>
              <description>[17:15] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>tpcc</name>
              <description>[14:12] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tptc2</name>
              <description>[11:9] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>tptc1</name>
              <description>[8:6] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>qspi</name>
              <description>[5:3] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>xbara</name>
              <description>[2:0] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>VBUSCLKGATE1</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>VBUSCLKGATE1</description>
          <fields>
            <field>
              <name>res</name>
              <description>[29:27] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>ctrl_reg</name>
              <description>[26:24] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>crc</name>
              <description>[23:21] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>pwm</name>
              <description>[20:18] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>lin</name>
              <description>[17:15] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>can</name>
              <description>[14:12] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>spi2</name>
              <description>[11:9] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>spi1</name>
              <description>[8:6] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>uart2</name>
              <description>[5:3] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>uart1</name>
              <description>[2:0] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>VBUSCLKGATE2</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>VBUSCLKGATE2</description>
          <fields>
            <field>
              <name>res5</name>
              <description>[29:27] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>res4</name>
              <description>[26:24] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>res3</name>
              <description>[23:21] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>res2</name>
              <description>[20:18] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>res1</name>
              <description>[17:15] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>res0</name>
              <description>[14:12] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>pcr6</name>
              <description>[11:9] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>pcr5</name>
              <description>[8:6] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>pcr4</name>
              <description>[5:3] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>pcr3</name>
              <description>[2:0] 0x0 : Enable the Clock#br#0x7 : Gate the clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BLOCKRESET0</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>BLOCKRESET0</description>
          <fields>
            <field>
              <name>i2c</name>
              <description>[29:27] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>dcc</name>
              <description>[26:24] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>wdt</name>
              <description>[23:21] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>rti</name>
              <description>[20:18] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>esm</name>
              <description>[17:15] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>tpcc</name>
              <description>[14:12] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>tptc2</name>
              <description>[11:9] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>tptc1</name>
              <description>[8:6] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>qspi</name>
              <description>[5:3] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>res</name>
              <description>[2:0] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>BLOCKRESET1</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>BLOCKRESET1</description>
          <fields>
            <field>
              <name>res</name>
              <description>[29:27] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>ctrl_reg</name>
              <description>[26:24] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>crc</name>
              <description>[23:21] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>pwm</name>
              <description>[20:18] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>lin</name>
              <description>[17:15] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>can</name>
              <description>[14:12] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>spi2</name>
              <description>[11:9] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>spi1</name>
              <description>[8:6] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>uart2</name>
              <description>[5:3] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>uart1</name>
              <description>[2:0] 0x0 : Release the reset#br#0x7 : Assert the reset</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type #br# 10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1 #br#  01_0000 = Supervisor write fault  - priv = 1 dir = 0 #br# 00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1 #br# 00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1 #br# 00_0010 = User write fault - priv = 0 dir = 0 #br# 00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1 #br# 00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TOP_GIO</name>
      <baseAddress>0x5AF7FC00</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>340</size>
        <usage>registers</usage>
      </addressBlock>
      <description>TOP_GIO</description>
      <registers>
        <register>
          <name>GIOGCR</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>GIO reset</description>
          <fields>
            <field>
              <name>NU0</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>RESET</name>
              <description>[0:0] GIO reset</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPWDN</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>GIO power down mode register</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:1] Reserved</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>GIOPWDN</name>
              <description>[0:0] Writing to the GIOPWDN bit is only allowed in privilege mode. Reading of the GIOPWDN bit is allowed in all modes. Privilege mode (write): 0 = Normal operation; clocks enabled to GIO module 1 = Power-down mode User mode (write): Writes have no effect in user mode. User or privilege mode (read): 0 = Normal operation; clocks enabled to GIO module 1 = Power-down mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOINTDET</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Interrupt detection select for pins [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOINTDET_3</name>
              <description>[31:24] Interrupt detection select for pins GIOD[7:0].</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOINTDET_2</name>
              <description>[23:16] Interrupt detection select for pins GIOC[7:0].</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOINTDET_1</name>
              <description>[15:8] Interrupt detection select for pins GIOB[7:0].</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOINTDET_0</name>
              <description>[7:0] Interrupt detection select for pins GIOA[7:0].</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPOL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Interrupt polarity select for pins  [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOPOL_3</name>
              <description>[31:24] Interrupt polarity select for pins GIOD[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOPOL_2</name>
              <description>[23:16] Interrupt polarity select for pins GIOC[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOPOL_1</name>
              <description>[15:8] Interrupt polarity select for pins GIOB[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPOL_0</name>
              <description>[7:0] Interrupt polarity select for pins GIOA[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOENASET</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>Interrupt enable for pins   [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOENASET_3</name>
              <description>[31:24] Interrupt enable for pins GIOD [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOENASET_2</name>
              <description>[23:16] Interrupt enable for pins GIOC [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOENASET_1</name>
              <description>[15:8] Interrupt enable for pins GIOB [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOENASET_0</name>
              <description>[7:0] Interrupt enable for pins GIOA [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOENACLR</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Interrupt enable for pins [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOENACLR_3</name>
              <description>[31:24] Interrupt enable for pins GIOD [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOENACLR_2</name>
              <description>[23:16] Interrupt enable for pins GIOC [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOENACLR_1</name>
              <description>[15:8] Interrupt enable for pins GIOB [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOENACLR_0</name>
              <description>[7:0] Interrupt enable for pins GIOA [7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOLVLSET</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>GIO high priority interrupt for pins [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOLVLSET_3</name>
              <description>[31:24] GIO high priority interrupt for pins GIOD[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOLVLSET_2</name>
              <description>[23:16] GIO high priority interrupt for pins GIOC[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOLVLSET_1</name>
              <description>[15:8] GIO high priority interrupt for pins GIOB[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOLVLSET_0</name>
              <description>[7:0] GIO high priority interrupt for pins GIOA[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOLVLCLR</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>GIO low priority interrupt for pins  [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOLVLCLR_3</name>
              <description>[31:24] GIO low priority interrupt for pins GIOD[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOLVLCLR_2</name>
              <description>[23:16] GIO low priority interrupt for pins GIOC[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOLVLCLR_1</name>
              <description>[15:8] GIO low priority interrupt for pins GIOB[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOLVLCLR_0</name>
              <description>[7:0] GIO low priority interrupt for pins GIOA[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOFLG</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>GIO flag for pins  [0:1] GIO[7:0].</description>
          <fields>
            <field>
              <name>GIOFLG_3</name>
              <description>[31:24] GIO flag for pins GIOD[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>GIOFLG_2</name>
              <description>[23:16] GIO flag for pins GIOC[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>GIOFLG_1</name>
              <description>[15:8] GIO flag for pins GIOB[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOFLG_0</name>
              <description>[7:0] GIO flag for pins GIOA[7:0]</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOOFFA</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>Index bits for currently pending high-priority interrupt Register A</description>
          <fields>
            <field>
              <name>NU1</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>GIOOFFA</name>
              <description>[5:0] Index bits for currently pending high-priority interrupt Register A</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOOFFB</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>Index bits for currently pending high-priority interrupt Register B</description>
          <fields>
            <field>
              <name>NU2</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>GIOOFFB</name>
              <description>[5:0] Index bits for currently pending high-priority interrupt Register B</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOEMUA</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>GIO emulation register A</description>
          <fields>
            <field>
              <name>NU3</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>GIOEMUA</name>
              <description>[5:0] GIO emulation register A</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOEMUB</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>GIO emulation register B</description>
          <fields>
            <field>
              <name>NU4</name>
              <description>[31:6] Reserved</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>GIOEMUB</name>
              <description>[5:0] GIO emulation register B</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRA</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port A</description>
          <fields>
            <field>
              <name>NU5</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRA</name>
              <description>[7:0] GIO data direction of pins in Port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINA</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port A</description>
          <fields>
            <field>
              <name>NU11</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINA</name>
              <description>[7:0] GIO data input for pins in port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTA</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port A</description>
          <fields>
            <field>
              <name>NU17</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTA</name>
              <description>[7:0] GIO data output for pins in port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETA</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>GIO data set for port A</description>
          <fields>
            <field>
              <name>NU23</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETA</name>
              <description>[7:0] GIO data set for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRA</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>GIO data clear for port A</description>
          <fields>
            <field>
              <name>NU29</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRA</name>
              <description>[7:0] GIO data clear for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRA</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>GIO open drain for port A</description>
          <fields>
            <field>
              <name>NU35</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRA</name>
              <description>[7:0] GIO open drain for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISA</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port A</description>
          <fields>
            <field>
              <name>NU</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISA</name>
              <description>[7:0] GIO pull disable for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLA</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>GIO pul select for port A</description>
          <fields>
            <field>
              <name>NU35</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLA</name>
              <description>[7:0] GIO pull select for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRB</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port B</description>
          <fields>
            <field>
              <name>NU6</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRB</name>
              <description>[7:0] GIO data direction of pins in Port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINB</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port B</description>
          <fields>
            <field>
              <name>NU12</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINB</name>
              <description>[7:0] GIO data input for pins in port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTB</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port B</description>
          <fields>
            <field>
              <name>NU18</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTB</name>
              <description>[7:0] GIO data output for pins in port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETB</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>GIO data set for port B</description>
          <fields>
            <field>
              <name>NU24</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETB</name>
              <description>[7:0] GIO data set for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRB</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>GIO data clear for port B</description>
          <fields>
            <field>
              <name>NU30</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRB</name>
              <description>[7:0] GIO data clear for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRB</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>GIO open drain for port B</description>
          <fields>
            <field>
              <name>NU36</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRB</name>
              <description>[7:0] GIO open drain for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISB</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port B</description>
          <fields>
            <field>
              <name>NU36</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISB</name>
              <description>[7:0] GIO pull disable for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLB</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>GIO pul select for port B</description>
          <fields>
            <field>
              <name>NU36</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLB</name>
              <description>[7:0] GIO pull select for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRC</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port C</description>
          <fields>
            <field>
              <name>NU7</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRC</name>
              <description>[7:0] GIO data direction of pins in Port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINC</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port C</description>
          <fields>
            <field>
              <name>NU13</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINC</name>
              <description>[7:0] GIO data input for pins in port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTC</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port C</description>
          <fields>
            <field>
              <name>NU19</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTC</name>
              <description>[7:0] GIO data output for pins in port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETC</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>GIO data set for port C</description>
          <fields>
            <field>
              <name>NU25</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETC</name>
              <description>[7:0] GIO data set for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRC</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>GIO data clear for port C</description>
          <fields>
            <field>
              <name>NU31</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRC</name>
              <description>[7:0] GIO data clear for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRC</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>GIO open drain for port C</description>
          <fields>
            <field>
              <name>NU37</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRC</name>
              <description>[7:0] GIO open drain for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISC</name>
          <addressOffset>0x8C</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port C</description>
          <fields>
            <field>
              <name>NU37</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISC</name>
              <description>[7:0] GIO pull disable for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLC</name>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <description>GIO pul select for port C</description>
          <fields>
            <field>
              <name>NU37</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLC</name>
              <description>[7:0] GIO pull select for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRD</name>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port D</description>
          <fields>
            <field>
              <name>NU8</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRD</name>
              <description>[7:0] GIO data direction of pins in Port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIND</name>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port D</description>
          <fields>
            <field>
              <name>NU14</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIND</name>
              <description>[7:0] GIO data input for pins in port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTD</name>
          <addressOffset>0x9C</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port D</description>
          <fields>
            <field>
              <name>NU20</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTD</name>
              <description>[7:0] GIO data output for pins in port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETD</name>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <description>GIO data set for port D</description>
          <fields>
            <field>
              <name>NU26</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETD</name>
              <description>[7:0] GIO data set for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRD</name>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <description>GIO data clear for port D</description>
          <fields>
            <field>
              <name>NU32</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRD</name>
              <description>[7:0] GIO data clear for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRD</name>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <description>GIO open drain for port D</description>
          <fields>
            <field>
              <name>NU38</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRD</name>
              <description>[7:0] GIO open drain for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISD</name>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port D</description>
          <fields>
            <field>
              <name>NU38</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISD</name>
              <description>[7:0] GIO pull disable for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLD</name>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <description>GIO pul select for port D</description>
          <fields>
            <field>
              <name>NU38</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLD</name>
              <description>[7:0] GIO pull select for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRE</name>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port E</description>
          <fields>
            <field>
              <name>NU9</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRE</name>
              <description>[7:0] GIO data direction of pins in Port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINE</name>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port E</description>
          <fields>
            <field>
              <name>NU15</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINE</name>
              <description>[7:0] GIO data input for pins in port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTE</name>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port E</description>
          <fields>
            <field>
              <name>NU21</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTE</name>
              <description>[7:0] GIO data output for pins in port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETE</name>
          <addressOffset>0xC0</addressOffset>
          <size>32</size>
          <description>GIO data set for port E</description>
          <fields>
            <field>
              <name>NU27</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETE</name>
              <description>[7:0] GIO data set for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRE</name>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <description>GIO data clear for port E</description>
          <fields>
            <field>
              <name>NU33</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRE</name>
              <description>[7:0] GIO data clear for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRE</name>
          <addressOffset>0xC8</addressOffset>
          <size>32</size>
          <description>GIO open drain for port E</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRE</name>
              <description>[7:0] GIO open drain for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISE</name>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port E</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISE</name>
              <description>[7:0] GIO pull disable for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLE</name>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <description>GIO pul select for port E</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLE</name>
              <description>[7:0] GIO pull select for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRF</name>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port F</description>
          <fields>
            <field>
              <name>NU10</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRF</name>
              <description>[7:0] GIO data direction of pins in Port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINF</name>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in Port F</description>
          <fields>
            <field>
              <name>NU16</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINF</name>
              <description>[7:0] GIO data input for pins in port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTF</name>
          <addressOffset>0xDC</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in Port F</description>
          <fields>
            <field>
              <name>NU22</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTF</name>
              <description>[7:0] GIO data output for pins in port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETF</name>
          <addressOffset>0xE0</addressOffset>
          <size>32</size>
          <description>GIO data set for Port F</description>
          <fields>
            <field>
              <name>NU28</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETF</name>
              <description>[7:0] GIO data set for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRF</name>
          <addressOffset>0xE4</addressOffset>
          <size>32</size>
          <description>GIO data clear for Port F</description>
          <fields>
            <field>
              <name>NU34</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRF</name>
              <description>[7:0] GIO data clear for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRF</name>
          <addressOffset>0xE8</addressOffset>
          <size>32</size>
          <description>GIO open drain for Port F</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRF</name>
              <description>[7:0] GIO open drain for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISF</name>
          <addressOffset>0xEC</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port F</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISF</name>
              <description>[7:0] GIO pull disable for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLF</name>
          <addressOffset>0xF0</addressOffset>
          <size>32</size>
          <description>GIO pul select for port F</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLF</name>
              <description>[7:0] GIO pull select for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRG</name>
          <addressOffset>0xF4</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port G</description>
          <fields>
            <field>
              <name>NU9</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRG</name>
              <description>[7:0] GIO data direction of pins in Port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODING</name>
          <addressOffset>0xF8</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in port G</description>
          <fields>
            <field>
              <name>NU15</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODING</name>
              <description>[7:0] GIO data input for pins in port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTG</name>
          <addressOffset>0xFC</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in port G</description>
          <fields>
            <field>
              <name>NU21</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTG</name>
              <description>[7:0] GIO data output for pins in port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETG</name>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <description>GIO data set for port G</description>
          <fields>
            <field>
              <name>NU27</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETG</name>
              <description>[7:0] GIO data set for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRG</name>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <description>GIO data clear for port G</description>
          <fields>
            <field>
              <name>NU33</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRG</name>
              <description>[7:0] GIO data clear for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRG</name>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <description>GIO open drain for port G</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRG</name>
              <description>[7:0] GIO open drain for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISG</name>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port G</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISG</name>
              <description>[7:0] GIO pull disable for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLG</name>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <description>GIO pul select for port G</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLG</name>
              <description>[7:0] GIO pull select for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODIRH</name>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <description>GIO data direction of pins in Port H</description>
          <fields>
            <field>
              <name>NU10</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODIRH</name>
              <description>[7:0] GIO data direction of pins in Port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODINH</name>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <description>GIO data input for pins in Port H</description>
          <fields>
            <field>
              <name>NU16</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODINH</name>
              <description>[7:0] GIO data input for pins in port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIODOUTH</name>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <description>GIO data output for pins in Port H</description>
          <fields>
            <field>
              <name>NU22</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODOUTH</name>
              <description>[7:0] GIO data output for pins in port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSETH</name>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <description>GIO data set for Port H</description>
          <fields>
            <field>
              <name>NU28</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODSETH</name>
              <description>[7:0] GIO data set for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOCLRH</name>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <description>GIO data clear for Port H</description>
          <fields>
            <field>
              <name>NU34</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIODCLRH</name>
              <description>[7:0] GIO data clear for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPDRH</name>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <description>GIO open drain for Port H</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPDRH</name>
              <description>[7:0] GIO open drain for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPULDISH</name>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <description>GIO pul disable for port H</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPULDISH</name>
              <description>[7:0] GIO pull disable for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOPSLH</name>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <description>GIO pul select for port H</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOPSLH</name>
              <description>[7:0] GIO pull select for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCA</name>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port A</description>
          <fields>
            <field>
              <name>NU35</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCA</name>
              <description>[7:0] GIO slew rate control for port A</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCB</name>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port B</description>
          <fields>
            <field>
              <name>NU36</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCB</name>
              <description>[7:0] GIO slew rate control for port B</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCC</name>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port C</description>
          <fields>
            <field>
              <name>NU37</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCC</name>
              <description>[7:0] GIO slew rate control for port C</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCD</name>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port D</description>
          <fields>
            <field>
              <name>NU38</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCD</name>
              <description>[7:0] GIO slew rate control for port D</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCE</name>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port E</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCE</name>
              <description>[7:0] GIO slew rate control for port E</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCF</name>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port F</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCF</name>
              <description>[7:0] GIO slew rate control for port F</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCG</name>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port G</description>
          <fields>
            <field>
              <name>NU39</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCG</name>
              <description>[7:0] GIO slew rate control for port G</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>GIOSRCH</name>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <description>GIO slew rate select for port H</description>
          <fields>
            <field>
              <name>NU40</name>
              <description>[31:8] Reserved</description>
              <bitWidth>24</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>GIOSRCH</name>
              <description>[7:0] GIO slew rate control for port H</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TOPSS_CTRL</name>
      <baseAddress>0x5B020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>4148</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>XTAL_FREQ</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>XTAL_FREQ</description>
          <fields>
            <field>
              <name>clkm_xtal_freq</name>
              <description>[1:0] XTAL clock frequency status, 0x0 = 25MHz 0x1 = 40MHz 0x2 = 26MHz 0x3 = 38.4MHz</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SOP_MODE</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>SOP_MODE</description>
          <fields>
            <field>
              <name>sop_mode</name>
              <description>[1:0] SOP MODE, 0x0 = Device Management Mode 0x1 = Application Mode 0x2 = Test mode 0x3 = Debug Mode</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RS232_BITINTERVAL_0_1</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>RS232_BITINTERVAL_0_1</description>
          <fields>
            <field>
              <name>rs232_bitinterval_1</name>
              <description>[27:16] BIT Interval value for 40MHz XTAL</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>rs232_bitinterval_0</name>
              <description>[11:0] BIT Interval value for 25MHz XTAL</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>RS232_BITINTERVAL_2_3</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>RS232_BITINTERVAL_2_3</description>
          <fields>
            <field>
              <name>rs232_bitinterval_3</name>
              <description>[27:16] BIT Interval value for 38.4MHz XTAL</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>rs232_bitinterval_2</name>
              <description>[11:0] BIT Interval value for 26MHz XTAL</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DIG_SYNC_SELECT</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>DIG_SYNC_SELECT</description>
          <fields>
            <field>
              <name>dig_sync_select</name>
              <description>[1:0] Selects dig_sync_in for FRC 2'b00: dig_sync_in 2'b01: mcan_intr 2'b10: lin_intr</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LIMP_MODE_GEN_EN</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>LIMP_MODE_GEN_EN</description>
          <fields>
            <field>
              <name>limp_mode_plldig_lockmon</name>
              <description>[24:24] status reg for limp_mode_plldig_lockmon</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>limp_mode_dcc</name>
              <description>[16:16] status reg for limp_mode_dcc</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>PLLDIG_LOCKMON_ESM_ERR_GEN_ENABLE</name>
              <description>[13:11] Enable PLLDIG lockmon to generate esm error 3'b000: PLLDIG lockmon will not generate esm error (multibit 000) 3'b111 : PLLDIG lockmon will generate esm error (multibit 111)</description>
              <bitWidth>3</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>plldig_lockmon_limp_gen_enable</name>
              <description>[10:8] Enable PLLDIG lockmon to generate Limp mode 3'b000: PLLDIG lockmon will not generate Limp mode (multibit 000) 3'b111 : PLLDIG lockmon will generate Limp mode (multibit 111)</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>dcc_error_limp_gen_enable</name>
              <description>[2:0] Enable EDCC Error to generate Limp mode 3'b000: EDCC Error will not generate Limp mode (multibit 000) 3'b111 : EDCC Error will generate Limp mode (multibit 111)</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>CTI_INTR_MUX_SEL</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>CTI_INTR_MUX_SEL</description>
          <fields>
            <field>
              <name>CTI3_intr_mux_select</name>
              <description>[26:24] CTI3 mux select 3'b000: FRAMETIMER_FRAME_START 3'b001: FRAME_START_OFFSET_INTR_TIME1 3'b010: BURST_START_OFFSET_TIME 3'b011: CHIRPTIMER_BURST_START 3'b100: CHIRPTIMER_BURST_END</description>
              <bitWidth>3</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>CTI2_intr_mux_select</name>
              <description>[17:16] CTI2 mux select 2'b00: CHIRP_AVAIL_IRQ 2'b01: ADC_VALID_START 2'b10: CHIRPTIMER_CHIRP_START 2'b11: CHIRPTIMER_CHIRP_END</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>CTI1_intr_mux_select</name>
              <description>[10:8] CTI1 mux select 3'b000: app_rti_int_req0 3'b001: app_rti_int_req1 3'b010: tpcc_1_intagg 3'b011: tpcc_2_intagg 3'b100: hwa_loop_int 3'b101: hwa_paramdone_int</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CTI0_intr_mux_select</name>
              <description>[1:0] CTI0 mux select 2'b00: ESM_LO_IRQ 2'b01: FEC_INTRundefined 2'b10: FEC_INTRundefined</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECAP_TX_DATA</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>SECAP_TX_DATA</description>
          <fields>
            <field>
              <name>JTAGTXDATA</name>
              <description>[31:0] This register is used to pass data to the system security logic. The data is transmit from the external JTAG interface and hence is the Rx path for the SECAP interface.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECAP_TX_CONTROL</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>SECAP_TX_CONTROL</description>
          <fields>
            <field>
              <name>TXDATA_AVAIL</name>
              <description>[31:31] Tx Interrupt to indicate avaliablity of TXDATA . 1 - TXDATA available ; 0 - TXDATA not available</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>JTAGTXCONTROL</name>
              <description>[30:0] This register is provides the handshake for the JTAGTXDATA Register and can also be used to pass control information to the system security logic.</description>
              <bitWidth>31</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECAP_RX_DATA</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>SECAP_RX_DATA</description>
          <fields>
            <field>
              <name>JTAGRXDATA</name>
              <description>[31:0] This register is used to pass data from the system security logic. The data is transmit from the SECAP interface to external JTAG interface and hence is the Tx path for the SECAP interface.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SECAP_RX_CONTROL</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>SECAP_RX_CONTROL</description>
          <fields>
            <field>
              <name>RXDATA_AVAIL</name>
              <description>[31:31] Tx Interrupt to indicate avaliablity of RXDATA . 1 - RXDATA available ; 0 - RXDATA not available</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>JTAGRXCONTROL</name>
              <description>[30:0] This register is provides the handshake for the JTAGRXDATA Register and can also be used to pass control information from the system security logic</description>
              <bitWidth>31</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>dft_proc_dmled_exec</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>dft_proc_dmled_exec</description>
          <fields>
            <field>
              <name>obs_status</name>
              <description>[17:15] dft_proc_dmled_obs_status</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>cm3_status</name>
              <description>[14:12] dft_proc_dmled_cm3_status</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>cm4_status</name>
              <description>[11:9] dft_proc_dmled_cm4_status</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>obs_exec</name>
              <description>[8:6] dft_proc_dmled_obs_exec</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>cm3_exec</name>
              <description>[5:3] dft_proc_dmled_cm3_exec</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>cm4_exec</name>
              <description>[2:0] dft_proc_dmled_cm4_exec</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>dft_proc_dmled_status</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>dft_proc_dmled_status</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] RESERVED</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>dft_config_reg</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>dft_config_reg</description>
          <fields>
            <field>
              <name>ctrl</name>
              <description>[31:0] bitundefined: dft_dmled_status_obs_sel</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>dft_pbist_st_key</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>dft_pbist_st_key</description>
          <fields>
            <field>
              <name>reg</name>
              <description>[31:0] dft_pbist_st_key</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>dft_pbist_st_rst</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>dft_pbist_st_rst</description>
          <fields>
            <field>
              <name>reg</name>
              <description>[31:0] dft_pbist_st_rst</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>TOP_INTMASK</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>TOP_INTMASK</description>
          <fields>
            <field>
              <name>set</name>
              <description>[31:0] Mask Interrupt from frame timer 1 : Interrupt is Masked 0 : Interrupt is Unmasked  Bit  0       -  Mask Interrupts from Frame Timer Bit 31:0   -  Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_1</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_1</description>
          <fields>
            <field>
              <name>bgap_hib_ref_cap_charge_en</name>
              <description>[21:21] status reg for bgap_hib_ref_cap_charge_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>bgap_hib_cap_sw_en</name>
              <description>[20:20] status reg for bgap_hib_cap_sw_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>bgap_cap_charge_en</name>
              <description>[19:19] status reg for bgap_cap_charge_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>bgap_cap_sw_enz</name>
              <description>[18:18] status reg for bgap_cap_sw_enz</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>bgap_en</name>
              <description>[17:17] status reg for bgap_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>bgap_state</name>
              <description>[16:13] status reg for bgap_state</description>
              <bitWidth>4</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>dig_ka_ldo_en</name>
              <description>[12:12] status reg for dig_ka_ldo_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>dig_ldo_en</name>
              <description>[11:11] status reg for dig_ldo_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>dig_ldo_state</name>
              <description>[10:7] status reg for dig_ldo_state</description>
              <bitWidth>4</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>sram_ka_ldo_en</name>
              <description>[6:6] status reg for sram_ka_ldo_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>sram_ldo_en</name>
              <description>[5:5] status reg for sram_ldo_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>sram_ldo_state</name>
              <description>[4:0] status reg for sram_ldo_state</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_2</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_2</description>
          <fields>
            <field>
              <name>clkm_xt_drive</name>
              <description>[24:20] status reg for clkm_xt_drive</description>
              <bitWidth>5</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_freq</name>
              <description>[19:18] status reg for clkm_xtal_freq</description>
              <bitWidth>2</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>clkm_limp_mode</name>
              <description>[17:17] status reg for clkm_limp_mode</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>clkm_host_clk_req_output_en</name>
              <description>[16:16] status reg for clkm_host_clk_req_output_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>clkm_host_clk_req</name>
              <description>[15:15] status reg for clkm_host_clk_req</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>clkm_first_wake_up</name>
              <description>[14:14] status reg for clkm_first_wake_up</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>clkm_oscillator_clk_valid</name>
              <description>[13:13] status reg for clkm_oscillator_clk_valid</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_det_status</name>
              <description>[12:12] status reg for clkm_xtal_det_status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_det_en</name>
              <description>[11:11] status reg for clkm_xtal_det_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>clkm_slicer_en</name>
              <description>[10:10] status reg for clkm_slicer_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_en</name>
              <description>[9:9] status reg for clkm_xtal_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>clkm_slicer_bias_en</name>
              <description>[8:8] status reg for clkm_slicer_bias_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>clkm_slicer_ldo_en</name>
              <description>[7:7] status reg for clkm_slicer_ldo_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_det_status_in</name>
              <description>[6:6] status reg for clkm_xtal_det_status_in</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>clkm_state</name>
              <description>[5:0] status reg for clkm_state</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_3</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_3</description>
          <fields>
            <field>
              <name>wakeup_source_frc</name>
              <description>[9:9] status reg for wakeup_source_frc</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>wakeup_source_rtc</name>
              <description>[8:8] status reg for wakeup_source_rtc</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>wakeup_source_gpio</name>
              <description>[7:7] status reg for wakeup_source_gpio</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>wakeup_source_spi</name>
              <description>[6:6] status reg for wakeup_source_spi</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>wakeup_source_uart</name>
              <description>[5:5] status reg for wakeup_source_uart</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>wakeup_source_sleep_counter</name>
              <description>[4:4] status reg for wakeup_source_sleep_counter</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>radar_state</name>
              <description>[3:0] status reg for radar_state</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_4</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_4</description>
          <fields>
            <field>
              <name>testdbg_logic_pscon_fsm</name>
              <description>[19:15] status reg for testdbg_logic_pscon_fsm</description>
              <bitWidth>5</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>hwa_logic_pscon_fsm</name>
              <description>[14:10] status reg for hwa_logic_pscon_fsm</description>
              <bitWidth>5</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>fec_logic_pscon_fsm</name>
              <description>[9:5] status reg for fec_logic_pscon_fsm</description>
              <bitWidth>5</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_logic_pscon_fsm</name>
              <description>[4:0] status reg for app_logic_pscon_fsm</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_5</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_5</description>
          <fields>
            <field>
              <name>fec_grp4mem_pscon_fsm</name>
              <description>[23:20] status reg for fec_grp4mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>fec_mem_pscon_fsm</name>
              <description>[19:16] status reg for fec_mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>hwa_grp3_mem_pscon_fsm</name>
              <description>[15:12] status reg for hwa_grp3_mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>app_grp2_mem_pscon_fsm</name>
              <description>[11:8] status reg for app_grp2_mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>app_grp1_mem_pscon_fsm</name>
              <description>[7:4] status reg for app_grp1_mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>app_mem_pscon_fsm</name>
              <description>[3:0] status reg for app_mem_pscon_fsm</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_6</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_6</description>
          <fields>
            <field>
              <name>test_dbg_pd_pwr_req</name>
              <description>[7:7] status reg for test_dbg_pd_pwr_req</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>hwa_pd_pwr_req</name>
              <description>[6:6] status reg for hwa_pd_pwr_req</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>fec_pd_pwr_req</name>
              <description>[5:5] status reg for fec_pd_pwr_req</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_pd_pwr_req</name>
              <description>[4:4] status reg for app_pd_pwr_req</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_is_sleep</name>
              <description>[3:3] status reg for test_dbg_pd_is_sleep</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hwa_pd_is_sleep</name>
              <description>[2:2] status reg for hwa_pd_is_sleep</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>fec_pd_is_sleep</name>
              <description>[1:1] status reg for fec_pd_is_sleep</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_pd_is_sleep</name>
              <description>[0:0] status reg for app_pd_is_sleep</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_7</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_7</description>
          <fields>
            <field>
              <name>test_dbg_pd_pgoodout</name>
              <description>[27:27] status reg for test_dbg_pd_pgoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_ponout</name>
              <description>[26:26] status reg for test_dbg_pd_ponout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_pgoodin</name>
              <description>[25:25] status reg for test_dbg_pd_pgoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_ponin</name>
              <description>[24:24] status reg for test_dbg_pd_ponin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_isoscan</name>
              <description>[23:23] status reg for test_dbg_pd_isoscan</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_iso_ram</name>
              <description>[22:22] status reg for test_dbg_pd_iso_ram</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_iso</name>
              <description>[21:21] status reg for test_dbg_pd_iso</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>hwa_pd_pgoodout</name>
              <description>[20:20] status reg for hwa_pd_pgoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>hwa_pd_ponout</name>
              <description>[19:19] status reg for hwa_pd_ponout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>hwa_pd_pgoodin</name>
              <description>[18:18] status reg for hwa_pd_pgoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>hwa_pd_ponin</name>
              <description>[17:17] status reg for hwa_pd_ponin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>hwa_pd_isoscan</name>
              <description>[16:16] status reg for hwa_pd_isoscan</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>hwa_pd_iso_ram</name>
              <description>[15:15] status reg for hwa_pd_iso_ram</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>hwa_pd_iso</name>
              <description>[14:14] status reg for hwa_pd_iso</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>fec_pd_pgoodout</name>
              <description>[13:13] status reg for fec_pd_pgoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>fec_pd_ponout</name>
              <description>[12:12] status reg for fec_pd_ponout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>fec_pd_pgoodin</name>
              <description>[11:11] status reg for fec_pd_pgoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>fec_pd_ponin</name>
              <description>[10:10] status reg for fec_pd_ponin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>fec_pd_isoscan</name>
              <description>[9:9] status reg for fec_pd_isoscan</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>fec_pd_iso_ram</name>
              <description>[8:8] status reg for fec_pd_iso_ram</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>fec_pd_iso</name>
              <description>[7:7] status reg for fec_pd_iso</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>app_pd_pgoodout</name>
              <description>[6:6] status reg for app_pd_pgoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_pd_ponout</name>
              <description>[5:5] status reg for app_pd_ponout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_pd_pgoodin</name>
              <description>[4:4] status reg for app_pd_pgoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>app_pd_ponin</name>
              <description>[3:3] status reg for app_pd_ponin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_pd_isoscan</name>
              <description>[2:2] status reg for app_pd_isoscan</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>app_pd_iso_ram</name>
              <description>[1:1] status reg for app_pd_iso_ram</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_pd_iso</name>
              <description>[0:0] status reg for app_pd_iso</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_8</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_8</description>
          <fields>
            <field>
              <name>app_pd_mem_grp2_agoodin</name>
              <description>[23:23] status reg for app_pd_mem_grp2_agoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>23</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_aonin</name>
              <description>[22:22] status reg for app_pd_mem_grp2_aonin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>22</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_agoodout</name>
              <description>[21:21] status reg for app_pd_mem_grp2_agoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_aonout</name>
              <description>[20:20] status reg for app_pd_mem_grp2_aonout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>20</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_agoodin</name>
              <description>[19:18] status reg for app_pd_mem_grp1_agoodin</description>
              <bitWidth>2</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_aonin</name>
              <description>[17:16] status reg for app_pd_mem_grp1_aonin</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_agoodout</name>
              <description>[15:14] status reg for app_pd_mem_grp1_agoodout</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_aonout</name>
              <description>[13:12] status reg for app_pd_mem_grp1_aonout</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_agoodin</name>
              <description>[11:9] status reg for app_pd_mem_agoodin</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_aonin</name>
              <description>[8:6] status reg for app_pd_mem_aonin</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_agoodout</name>
              <description>[5:3] status reg for app_pd_mem_agoodout</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_aonout</name>
              <description>[2:0] status reg for app_pd_mem_aonout</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_9</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_9</description>
          <fields>
            <field>
              <name>app_pd_mem_grp2_dftrtagood</name>
              <description>[11:11] status reg for app_pd_mem_grp2_dftrtagood</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_dftrtaon</name>
              <description>[10:10] status reg for app_pd_mem_grp2_dftrtaon</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_dftrtagood</name>
              <description>[9:8] status reg for app_pd_mem_grp1_dftrtagood</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_dftrtaon</name>
              <description>[7:6] status reg for app_pd_mem_grp1_dftrtaon</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_dftrtagood</name>
              <description>[5:3] status reg for app_pd_mem_dftrtagood</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_dftrtaon</name>
              <description>[2:0] status reg for app_pd_mem_dftrtaon</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_10</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_10</description>
          <fields>
            <field>
              <name>hwa_pd_mem_grp3_dftrtagood</name>
              <description>[17:15] status reg for hwa_pd_mem_grp3_dftrtagood</description>
              <bitWidth>3</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_dftrtaon</name>
              <description>[14:12] status reg for hwa_pd_mem_grp3_dftrtaon</description>
              <bitWidth>3</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_agoodin</name>
              <description>[11:9] status reg for hwa_pd_mem_grp3_agoodin</description>
              <bitWidth>3</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_aonin</name>
              <description>[8:6] status reg for hwa_pd_mem_grp3_aonin</description>
              <bitWidth>3</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_agoodout</name>
              <description>[5:3] status reg for hwa_pd_mem_grp3_agoodout</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_aonout</name>
              <description>[2:0] status reg for hwa_pd_mem_grp3_aonout</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_11</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_11</description>
          <fields>
            <field>
              <name>fec_pd_mem_grp4_dftrtagood</name>
              <description>[17:16] status reg for fec_pd_mem_grp4_dftrtagood</description>
              <bitWidth>2</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_dftrtaon</name>
              <description>[15:14] status reg for fec_pd_mem_grp4_dftrtaon</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_dftrtagood</name>
              <description>[13:13] status reg for fec_pd_mem_dftrtagood</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_dftrtaon</name>
              <description>[12:12] status reg for fec_pd_mem_dftrtaon</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_agoodin</name>
              <description>[11:10] status reg for fec_pd_mem_grp4_agoodin</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_aonin</name>
              <description>[9:8] status reg for fec_pd_mem_grp4_aonin</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_agoodout</name>
              <description>[7:6] status reg for fec_pd_mem_grp4_agoodout</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_aonout</name>
              <description>[5:4] status reg for fec_pd_mem_grp4_aonout</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_agoodin</name>
              <description>[3:3] status reg for fec_pd_mem_agoodin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_aonin</name>
              <description>[2:2] status reg for fec_pd_mem_aonin</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_agoodout</name>
              <description>[1:1] status reg for fec_pd_mem_agoodout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_aonout</name>
              <description>[0:0] status reg for fec_pd_mem_aonout</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_12</name>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_12</description>
          <fields>
            <field>
              <name>vnwa_switch_screen_en</name>
              <description>[13:13] status reg for vnwa_switch_screen_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>vnwa_switch_weak_process</name>
              <description>[12:12] status reg for vnwa_switch_weak_process</description>
              <bitWidth>1</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_vnwa_switch_en</name>
              <description>[11:11] status reg for fec_pd_mem_grp4_vnwa_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_vnwa_switch_en</name>
              <description>[10:10] status reg for hwa_pd_mem_grp3_vnwa_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_vnwa_switch_en</name>
              <description>[9:9] status reg for app_pd_mem_grp2_vnwa_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_vnwa_switch_en</name>
              <description>[8:8] status reg for app_pd_mem_grp1_vnwa_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_gpr4_lowres_switch_en</name>
              <description>[7:7] status reg for fec_pd_mem_gpr4_lowres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_gpr3_lowres_switch_en</name>
              <description>[6:6] status reg for hwa_pd_mem_gpr3_lowres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_lowres_switch_en</name>
              <description>[5:5] status reg for app_pd_mem_grp2_lowres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_lowres_switch_en</name>
              <description>[4:4] status reg for app_pd_mem_grp1_lowres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>fec_pd_mem_grp4_highres_switch_en</name>
              <description>[3:3] status reg for fec_pd_mem_grp4_highres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hwa_pd_mem_grp3_highres_switch_en</name>
              <description>[2:2] status reg for hwa_pd_mem_grp3_highres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp2_highres_switch_en</name>
              <description>[1:1] status reg for app_pd_mem_grp2_highres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_pd_mem_grp1_highres_switch_en</name>
              <description>[0:0] status reg for app_pd_mem_grp1_highres_switch_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_13</name>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_13</description>
          <fields>
            <field>
              <name>hwa_pd_clkgate_en</name>
              <description>[2:2] status reg for hwa_pd_clkgate_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>fec_pd_clkgate_en</name>
              <description>[1:1] status reg for fec_pd_clkgate_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_pd_clkgate_en</name>
              <description>[0:0] status reg for app_pd_clkgate_en</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_14</name>
          <addressOffset>0x7C</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_14</description>
          <fields>
            <field>
              <name>fec_pd_core_rstn</name>
              <description>[8:8] status reg for fec_pd_core_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>app_pd_core_rstn</name>
              <description>[7:7] status reg for app_pd_core_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>7</bitOffset>
            </field>
            <field>
              <name>hwa_pd_warm_rstn</name>
              <description>[6:6] status reg for hwa_pd_warm_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>fec_pd_warm_rstn</name>
              <description>[5:5] status reg for fec_pd_warm_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>app_pd_warm_rstn</name>
              <description>[4:4] status reg for app_pd_warm_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>test_dbg_pd_por_rstn</name>
              <description>[3:3] status reg for test_dbg_pd_por_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>hwa_pd_por_rstn</name>
              <description>[2:2] status reg for hwa_pd_por_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>fec_pd_por_rstn</name>
              <description>[1:1] status reg for fec_pd_por_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>app_pd_por_rstn</name>
              <description>[0:0] status reg for app_pd_por_rstn</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_15</name>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_15</description>
          <fields>
            <field>
              <name>LVDS_DIS</name>
              <description>[4:4] status reg for LVDS_DIS</description>
              <bitWidth>1</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>TEST_DIS</name>
              <description>[3:3] status reg for TEST_DIS</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>RS232_DIS</name>
              <description>[2:2] status reg for RS232_DIS</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>JTAG_DIS</name>
              <description>[1:1] status reg for JTAG_DIS</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>DIS_JTAG</name>
              <description>[0:0] status reg for DIS_JTAG</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>DEBUG_STATUS_AON_16</name>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <description>DEBUG_STATUS_AON_16</description>
          <fields>
            <field>
              <name>icemelter_powakeemu</name>
              <description>[0:0] status reg for icemelter_powakeemu</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APPSS_DYNAMIC_CLK_GATE_STATUS</name>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <description>APPSS_DYNAMIC_CLK_GATE_STATUS</description>
          <fields>
            <field>
              <name>tptc2</name>
              <description>[2:2] Dynamic Clock gate Status of TPTC2 1 - Clock is Enabled 0 - Clock is Gated.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>tptc1</name>
              <description>[1:1] Dynamic Clock gate Status of TPTC1 1 - Clock is Enabled 0 - Clock is Gated.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>xbara</name>
              <description>[0:0] Dynamic Clock gate Status of XBARA 1 - Clock is Enabled 0 - Clock is Gated.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_10_0000</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PLLDIG_CTRL</name>
      <baseAddress>0x5B040000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>4148</size>
        <usage>registers</usage>
      </addressBlock>
      <description/>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID register</description>
          <fields>
            <field>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            <name>PID_W16_O16</name></field>
            <field>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            <name>PID_W5_O11</name></field>
            <field>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            <name>PID_W3_O8</name></field>
            <field>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            <name>PID_W2_O6</name></field>
            <field>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PID_W6_O0</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_EN</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>PLLDIG_EN</description>
          <fields>
            <field>
              <name>cfg_plldig_lockmon_enable</name>
              <description>[18:16] PLL DIG lockmon enable 0x0 = PLL DIG lockmon disbale 0x7 = PLL DIG lockmon enable</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cfg_pll_auto_switch_enable</name>
              <description>[10:8] PLL DIG and APLL auto switch enable 0x0 = PLL DIG wont be auto turn off when APLL is enable 0x7 = PLL DIG will be auto turn off when APLL is enable</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>cfg_plldig_en</name>
              <description>[2:0] PLL DIG enable 0x0 = PLL DIG disable 0x7 = PLL DIG enable</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_MDIV_NDIV</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>PLLDIG_MDIV_NDIV</description>
          <fields>
            <field>
              <name>cfg_plldig_ndiv</name>
              <description>[22:16] NDIV value for the PLL DIG Input clock divider settings .NDIV value directly programs the 7-bit pre- divider. Divide value ranges from 2 to 127. NDIV value has to be chosen based on the REF_CLKIN frequency so as to get the internal reference frequency of the PLL closest to 2Mhz</description>
              <bitWidth>7</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cfg_plldig_mdiv</name>
              <description>[8:0] MDIV value for the PLL DIG Feedback divider settings. MDIV value directly programs the 9-bit feedback divider. Divide value ranges from 2 to 511. MDIV value has to be chosen to generate the required clock out frequency from the 2Mhz internal PLL reference</description>
              <bitWidth>9</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_CTRL</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>PLLDIG_CTRL</description>
          <fields>
            <field>
              <name>cfg_plldig_ctrl</name>
              <description>[31:0] PLL DIG test controls</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_MODE_EN</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>PLLDIG_MODE_EN</description>
          <fields>
            <field>
              <name>cfg_plldig_lowfreq_mode_en</name>
              <description>[16:16] PLL DIG high frequency mode operation, Divide by 2 the PLL clock out</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cfg_plldig_highfreq_mode_en</name>
              <description>[0:0] PLL DIG high frequency mode operation</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_APLL_SW_DIS_DELAY1</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>PLLDIG_APLL_SW_DIS_DELAY1</description>
          <fields>
            <field>
              <name>cfg_plldig_auto_switch_delay</name>
              <description>[31:16] Delay to switch the PLL clock source when the auto PLL switch mode is enable</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cfg_apll_auto_switch_delay</name>
              <description>[15:0] Delay to switch the PLL clock source when the auto PLL switch mode is enable</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_APLL_SW_DIS_DELAY2</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>PLLDIG_APLL_SW_DIS_DELAY2</description>
          <fields>
            <field>
              <name>cfg_apll_disable_delay</name>
              <description>[31:16] Delay between the PLL clock source switching and disabling of the APLL</description>
              <bitWidth>16</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>cfg_plldig_disable_delay</name>
              <description>[15:0] Delay between the PLL clock source switching and disabling of the PLL DIG</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_OVERRIDE</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>PLLDIG_OVERRIDE</description>
          <fields>
            <field>
              <name>cfg_ov_final_plldig_apll_mux_sel</name>
              <description>[5:3] Override control for the fast clock src mux select 0x0 = PLL DIG selected as fast clock 0x7 = APLL selected as fast clock</description>
              <bitWidth>3</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>cfg_sel_ov_final_plldig_apll_mux_sel</name>
              <description>[2:0] Mux select control to select the override value of the fast clock src mux select  0x0 = functional value selected for the fast clock src mux select  0x7 = Override value selected for the fast clock src mux select</description>
              <bitWidth>3</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PLLDIG_STATUS</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>PLLDIG_STATUS</description>
          <fields>
            <field>
              <name>plldig_lockmon</name>
              <description>[8:8] PLL DIG lockmon status</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>clkm_xtal_freq</name>
              <description>[1:0] XTAL clock frequency status, 0x0 = 25MHz 0x1 = 40MHz 0x2 = 26MHz 0x3 = 38.4MHz</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FAST_CLK_MUX_POSTDIV</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>FAST_CLK_MUX_POSTDIV</description>
          <fields>
            <field>
              <name>divr</name>
              <description>[15:4] Divider value for FAST selected clock. Data should be loaded as multibit. For example: if divider value of 8 (1000) needs to be selected then '100010001000' should be configured to the register.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>currdivr</name>
              <description>[3:0] Status shows the current divider value choosen for FAST_CLK.</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FAST_CLK_STATUS</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>FAST_CLK_STATUS</description>
          <fields>
            <field>
              <name>currclk</name>
              <description>[1:0] Current Clock selected by GCM Clock Mux 0x1 : PLLDIG  0x2 : APLL</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK0</name>
          <addressOffset>0x1008</addressOffset>
          <size>32</size>
          <description>- KICK0 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK0 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK0_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>LOCK0_KICK1</name>
          <addressOffset>0x100C</addressOffset>
          <size>32</size>
          <description>- KICK1 component</description>
          <fields>
            <field>
              <description>[31:0] - KICK1 component</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>KICK1_COMPONENT</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_raw_status</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>Interrupt Raw Status/Set Register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enabled_status_clear</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>Interrupt Enabled Status/Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR_</name></field>
            <field>
              <description>[0:0] Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>Interrupt Enable register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>intr_enable_clear</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Clear register</description>
          <fields>
            <field>
              <description>[3:3] Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>3</bitOffset>
            <name>PROXY0_ACCESS_VIOLATION</name></field>
            <field>
              <description>[2:2] Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            <name>KICK_ACCESS_VIOLATION</name></field>
            <field>
              <description>[1:1] Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            <name>ADDRESSING_VIOLATION_ERROR</name></field>
            <field>
              <description>[0:0] Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PROTECTION_VIOLATION_ERROR</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>eoi</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>EOI register</description>
          <fields>
            <field>
              <description>[7:0] EOI vector value. Write this with interrupt distribution value in the chip.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>EOI_VECTOR_VALUE_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_address</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>Fault Address register</description>
          <fields>
            <field>
              <description>[31:0] Fault Address.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_ADDRESS_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_type_status</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>Fault Type Status register</description>
          <fields>
            <field>
              <description>[6:6] Non-secure access.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>6</bitOffset>
            <name>NONSECURE_ACCESS_</name></field>
            <field>
              <description>[5:0] Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_TYPE_10_0000</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_attr_status</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>Fault Attribute Status register</description>
          <fields>
            <field>
              <description>[31:20] XID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>20</bitOffset>
            <name>XID_</name></field>
            <field>
              <description>[19:8] Route ID.</description>
              <bitWidth>12</bitWidth>
              <bitOffset>8</bitOffset>
            <name>ROUTE_ID_</name></field>
            <field>
              <description>[7:0] Privilege ID.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            <name>PRIVILEGE_ID_</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>fault_clear</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>Fault Clear register</description>
          <fields>
            <field>
              <description>[0:0] Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            <name>FAULT_CLEAR__WRITING</name></field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PBIST</name>
      <baseAddress>0x5C020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>464</size>
        <usage>registers</usage>
      </addressBlock>
      <description>PBIST</description>
      <registers>
        <register>
          <name>RESERVED</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>RESERVED</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_DLR</name>
          <addressOffset>0x164</addressOffset>
          <size>16</size>
          <description>Datalogger 0</description>
          <fields>
            <field>
              <name>DLR1</name>
              <description>[15:8] Datalogger Register [8] : Reserevd [9] : Default Testing Mode. When in this mode, ROM-based testing is kicked off. If the intention is to perform go/no-go testing via config, write to both this bit and bit [2] of the Datalogger Register simultaneously [15:10] : Reserevd</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>DLR0</name>
              <description>[7:0] Datalogger Register [1:0] : Reserved [2] : ROM-based testing mode. Setting this bit to 1 enables the PBIST controller to execute test algorithms that are stored in the PBIST ROM [3] : Do not change this bit from its default value of 1 [4] : Config access mode. Setting this bit allows the host processor to configure the PBIST controller registers [7:5] : Reserved</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_PC</name>
          <addressOffset>0x16C</addressOffset>
          <size>5</size>
          <description>Program Control</description>
          <fields>
            <field>
              <name>PBIST_PC</name>
              <description>[4:0] TI Internal Register.Reserved for HW RnD</description>
              <bitWidth>5</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_PACT</name>
          <addressOffset>0x180</addressOffset>
          <size>1</size>
          <description>Pbist Active</description>
          <fields>
            <field>
              <name>PBIST_PACT</name>
              <description>[0:0] Pbist Active/ROM Clock Enable Register [0]: This bit must be set to turn on internal PBIST clocks. Setting this bit asserts an internal signal that is used as the clock gate enable. As long as this bit is 0, any access to PBIST will not go through, and PBIST will remain in an almost zero-power mode. Value 0  = Disable internal PBIST clocks Value 1 = Enable internal PBIST clocks</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_OVR</name>
          <addressOffset>0x188</addressOffset>
          <size>4</size>
          <description>PBIST Overrides</description>
          <fields>
            <field>
              <name>PBIST_OVR</name>
              <description>[3:0] TI Internal Register.Reserved for HW RnD</description>
              <bitWidth>4</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_FSFR0</name>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <description>Fail status fail - port 0</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:1] TI Internal Register.Reserved for HW RnD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PBIST_FSFR0</name>
              <description>[0:0] Fail Status Fail Register- Port 0  This register indicates if a failure occurred during a memory self-test. Value 0 = No failure occurred Value 1 = Indicates a failure</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_FSFR1</name>
          <addressOffset>0x194</addressOffset>
          <size>32</size>
          <description>Fail status fail - port 1</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:1] TI Internal Register.Reserved for HW RnD</description>
              <bitWidth>31</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>PBIST_FSFR1</name>
              <description>[0:0] Fail Status Fail Register- Port 1  This register indicates if a failure occurred during a memory self-test. Value 0 = No failure occurred Value 1 = Indicates a failure</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_ROM</name>
          <addressOffset>0x1C0</addressOffset>
          <size>2</size>
          <description>Rom Mask</description>
          <fields>
            <field>
              <name>PBIST_ROM</name>
              <description>[1:0] Rom Mask . This two-bit register sets appropriate ROM access modes for the PBIST controller. Value  0h = No information is used from ROM Value 1h = Only RAM Group information from ROM Vaule 2h = Only Algorithm information from ROM Value 3h = Both Algorithm and RAM information from ROM. This option should be selected for application self-test.</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_ALGO</name>
          <addressOffset>0x1C4</addressOffset>
          <size>32</size>
          <description>ROM Algorithm Mask 0</description>
          <fields>
            <field>
              <name>ALGO3</name>
              <description>[31:24] This register is used to indicate the algorithm(s) to be used for the memory self-test routine. Each bit corresponds to a specific algorithm. Writing a value 1 to the particular bit, enables the corresponding algorithm. Writing a value 0 to the particular bit, disables the corresponding algorithm.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>ALGO2</name>
              <description>[23:16] This register is used to indicate the algorithm(s) to be used for the memory self-test routine. Each bit corresponds to a specific algorithm. Writing a value 1 to the particular bit, enables the corresponding algorithm. Writing a value 0 to the particular bit, disables the corresponding algorithm.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>ALGO1</name>
              <description>[15:8] This register is used to indicate the algorithm(s) to be used for the memory self-test routine. Each bit corresponds to a specific algorithm. Writing a value 1 to the particular bit, enables the corresponding algorithm. Writing a value 0 to the particular bit, disables the corresponding algorithm.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>ALGO0</name>
              <description>[7:0] This register is used to indicate the algorithm(s) to be used for the memory self-test routine. Each bit corresponds to a specific algorithm. Writing a value 1 to the particular bit, enables the corresponding algorithm. Writing a value 0 to the particular bit, disables the corresponding algorithm.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_RINFOL</name>
          <addressOffset>0x1C8</addressOffset>
          <size>32</size>
          <description>RAM Info Mask Lower 0</description>
          <fields>
            <field>
              <name>RINFOL3</name>
              <description>[31:24] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RINFOL2</name>
              <description>[23:16] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RINFOL1</name>
              <description>[15:8] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RINFOL0</name>
              <description>[7:0] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>PBIST_RINFOU</name>
          <addressOffset>0x1CC</addressOffset>
          <size>32</size>
          <description>RAM Info Mask Upper 0</description>
          <fields>
            <field>
              <name>RINFOU3</name>
              <description>[31:24] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>RINFOU2</name>
              <description>[23:16] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RINFOU1</name>
              <description>[15:8] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RINFOU0</name>
              <description>[7:0] This register is to select memory groups to run the algorithms selected in the PBIST_ALGO register. For an algorithmto be executed on a particular memory group, the corresponding bit in this register must be set to 1. The default value of this register is all 1s, which means all the memory groups are selected. Writing a value 0 to the particular bit, disables the corresponding memory group.</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TOP_DEBUGSS</name>
      <baseAddress>0x5CA00000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>73728</size>
        <usage>registers</usage>
      </addressBlock>
      <description>TOP_DEBUGSS</description>
      <registers>
        <register>
          <name>ONEMCU_APB_BASE</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>Start Address of ROM Table</description>
          <fields>
            <field>
              <name>ONEMCU_APB_BASE</name>
              <description>[31:0] OneMCU APB Space : Start Address of ROM Table</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_APB_BASE_END</name>
          <addressOffset>0xFFC</addressOffset>
          <size>32</size>
          <description>End Address of ROM Table</description>
          <fields>
            <field>
              <name>ONEMCU_APB_BASE_END</name>
              <description>[31:0] OneMCU APB Space : Endt Address of ROM Table</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_CONTROL</name>
          <addressOffset>0x1000</addressOffset>
          <size>32</size>
          <description>http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdjefbi.html http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdefejc.html</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_CONTROL</name>
              <description>[31:0] http://infocenter.arm.com/help/topic/com.arm.doc.ddi0480e/CHDGDIHE.html http://infocenter.arm.com/help/topic/com.arm.doc.ddi0480e/CHDHBDIA.html</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INTACK</name>
          <addressOffset>0x1010</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INTACK</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_APPSET</name>
          <addressOffset>0x1014</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_APPSET</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_APPSET</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_APPCLEAR</name>
          <addressOffset>0x1018</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_APPCLEAR</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_APPCLEAR</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_APPPULSE</name>
          <addressOffset>0x101C</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_APPPULSE</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_APPPULSE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN0</name>
          <addressOffset>0x1020</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN0</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN1</name>
          <addressOffset>0x1024</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN1</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN2</name>
          <addressOffset>0x1028</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN2</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN3</name>
          <addressOffset>0x102C</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN3</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN4</name>
          <addressOffset>0x1030</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN4</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN5</name>
          <addressOffset>0x1034</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN5</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN6</name>
          <addressOffset>0x1038</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN6</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_INEN7</name>
          <addressOffset>0x103C</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_INEN7</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_INEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN0</name>
          <addressOffset>0x10A0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN0</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN1</name>
          <addressOffset>0x10A4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN1</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN2</name>
          <addressOffset>0x10A8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN2</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN3</name>
          <addressOffset>0x10AC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN3</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN4</name>
          <addressOffset>0x10B0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN4</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN5</name>
          <addressOffset>0x10B4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN5</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN6</name>
          <addressOffset>0x10B8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN6</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_OUTEN7</name>
          <addressOffset>0x10BC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_OUTEN7</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_OUTEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_TRIGINSTATUS</name>
          <addressOffset>0x1130</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_TRIGINSTATUS</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_TRIGINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_TRIGOUTSTATUS</name>
          <addressOffset>0x1134</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_TRIGOUTSTATUS</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_TRIGOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_CHINSTATUS</name>
          <addressOffset>0x1138</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_CHINSTATUS</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_CHINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_CHOUTSTATUS</name>
          <addressOffset>0x113C</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_CHOUTSTATUS</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_CHOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_GATE</name>
          <addressOffset>0x1140</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_GATE</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_GATE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ASICCTL</name>
          <addressOffset>0x1144</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ASICCTL</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ASICCTL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITCHINACK</name>
          <addressOffset>0x1EDC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITCHINACK</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITCHINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITTRIGINACK</name>
          <addressOffset>0x1EE0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITTRIGINACK</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITTRIGINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITCHOUT</name>
          <addressOffset>0x1EE4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITCHOUT</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITCHOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITTRIGOUT</name>
          <addressOffset>0x1EE8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITTRIGOUT</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITTRIGOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITCHOUTACK</name>
          <addressOffset>0x1EEC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITCHOUTACK</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITCHOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITTRIGOUTACK</name>
          <addressOffset>0x1EF0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITTRIGOUTACK</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITTRIGOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITCHIN</name>
          <addressOffset>0x1EF4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITCHIN</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITCHIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITTRIGIN</name>
          <addressOffset>0x1EF8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITTRIGIN</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITTRIGIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_ITCTRL</name>
          <addressOffset>0x1F00</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_ITCTRL</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_ITCTRL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Claim_Tag_Set</name>
          <addressOffset>0x1FA0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Claim_Tag_Set</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Claim_Tag_Set</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Claim_Tag_Clear</name>
          <addressOffset>0x1FA4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Claim_Tag_Clear</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Claim_Tag_Clear</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Lock_Access_Register</name>
          <addressOffset>0x1FB0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Lock_Access_Register</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Lock_Access_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Lock_Status_Register</name>
          <addressOffset>0x1FB4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Lock_Status_Register</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Lock_Status_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Authentication_Status</name>
          <addressOffset>0x1FB8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Authentication_Status</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Authentication_Status</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Device_ID</name>
          <addressOffset>0x1FC8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Device_ID</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Device_ID</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Device_Type_Identifier</name>
          <addressOffset>0x1FCC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Device_Type_Identifier</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Device_Type_Identifier</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID4</name>
          <addressOffset>0x1FD0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID4</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID5</name>
          <addressOffset>0x1FD4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID5</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID6</name>
          <addressOffset>0x1FD8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID6</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID7</name>
          <addressOffset>0x1FDC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID7</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID0</name>
          <addressOffset>0x1FE0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID0</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID1</name>
          <addressOffset>0x1FE4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID1</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID2</name>
          <addressOffset>0x1FE8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID2</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_PeripheralID3</name>
          <addressOffset>0x1FEC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_PeripheralID3</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_PeripheralID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Component_ID0</name>
          <addressOffset>0x1FF0</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Component_ID0</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Component_ID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Component_ID1</name>
          <addressOffset>0x1FF4</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Component_ID1</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Component_ID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Component_ID2</name>
          <addressOffset>0x1FF8</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Component_ID2</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Component_ID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_CTI_Component_ID3</name>
          <addressOffset>0x1FFC</addressOffset>
          <size>32</size>
          <description>ONEMCU_CTI_Component_ID3</description>
          <fields>
            <field>
              <name>ONEMCU_CTI_Component_ID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_SPORTSZ</name>
          <addressOffset>0x2000</addressOffset>
          <size>32</size>
          <description>Supported port sizes</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_SPORTSZ</name>
              <description>[31:0] Supported port sizes</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CPORTSZ</name>
          <addressOffset>0x2004</addressOffset>
          <size>32</size>
          <description>Current port size</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CPORTSZ</name>
              <description>[31:0] Current port size</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_STRIGM</name>
          <addressOffset>0x2100</addressOffset>
          <size>32</size>
          <description>Supported trigger modes</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_STRIGM</name>
              <description>[31:0] Supported trigger modes</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_TRIGCNT</name>
          <addressOffset>0x2104</addressOffset>
          <size>32</size>
          <description>Trigger counter value</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_TRIGCNT</name>
              <description>[31:0] Trigger counter value</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_TRIGMUL</name>
          <addressOffset>0x2108</addressOffset>
          <size>32</size>
          <description>Trigger multiplier</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_TRIGMUL</name>
              <description>[31:0] Trigger multiplier</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_STSTPTRN</name>
          <addressOffset>0x2200</addressOffset>
          <size>32</size>
          <description>Supported test pattern/modes</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_STSTPTRN</name>
              <description>[31:0] Supported test pattern/modes</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CTSTPTRN</name>
          <addressOffset>0x2204</addressOffset>
          <size>32</size>
          <description>Current test pattern/mode</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CTSTPTRN</name>
              <description>[31:0] Current test pattern/mode</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_TPRCNTR</name>
          <addressOffset>0x2208</addressOffset>
          <size>32</size>
          <description>Test pattern repeat counter</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_TPRCNTR</name>
              <description>[31:0] Test pattern repeat counter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_FFSTS</name>
          <addressOffset>0x2300</addressOffset>
          <size>32</size>
          <description>Formatter and flush status</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_FFSTS</name>
              <description>[31:0] Formatter and flush status</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_FFCTRL</name>
          <addressOffset>0x2304</addressOffset>
          <size>32</size>
          <description>Formatter and flush control</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_FFCTRL</name>
              <description>[31:0] Formatter and flush control</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_FSCNTR</name>
          <addressOffset>0x2308</addressOffset>
          <size>32</size>
          <description>Formatter synchronization counter</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_FSCNTR</name>
              <description>[31:0] Formatter synchronization counter</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_EXCTLIN</name>
          <addressOffset>0x2400</addressOffset>
          <size>32</size>
          <description>EXTCTL In Port</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_EXCTLIN</name>
              <description>[31:0] EXTCTL In Port</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_EXCTLOUT</name>
          <addressOffset>0x2404</addressOffset>
          <size>32</size>
          <description>EXTCTL Out Port</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_EXCTLOUT</name>
              <description>[31:0] EXTCTL Out Port</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITTRFLINACK</name>
          <addressOffset>0x2EE4</addressOffset>
          <size>32</size>
          <description>Integration Register, ITTRFLINACK</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITTRFLINACK</name>
              <description>[31:0] Integration Register, ITTRFLINACK</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITTRFLIN</name>
          <addressOffset>0x2EE8</addressOffset>
          <size>32</size>
          <description>Integration Register, ITTRFLIN</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITTRFLIN</name>
              <description>[31:0] Integration Register, ITTRFLIN</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITATBDATA0</name>
          <addressOffset>0x2EEC</addressOffset>
          <size>32</size>
          <description>Integration Register, ITATBDATA0</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITATBDATA0</name>
              <description>[31:0] Integration Register, ITATBDATA0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITATBCTR2</name>
          <addressOffset>0x2EF0</addressOffset>
          <size>32</size>
          <description>Integration Register, ITATBCTR2</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITATBCTR2</name>
              <description>[31:0] Integration Register, ITATBCTR2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITATBCTR1</name>
          <addressOffset>0x2EF4</addressOffset>
          <size>32</size>
          <description>Integration Register, ITATBCTR1</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITATBCTR1</name>
              <description>[31:0] Integration Register, ITATBCTR1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITATBCTR0</name>
          <addressOffset>0x2EF8</addressOffset>
          <size>32</size>
          <description>Integration Register, ITATBCTR0</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITATBCTR0</name>
              <description>[31:0] Integration Register, ITATBCTR0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_ITCTRL</name>
          <addressOffset>0x2F00</addressOffset>
          <size>32</size>
          <description>Integration Mode Control Register</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_ITCTRL</name>
              <description>[31:0] Integration Mode Control Register</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CLAIMSET</name>
          <addressOffset>0x2FA0</addressOffset>
          <size>32</size>
          <description>Claim Tag Set</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CLAIMSET</name>
              <description>[31:0] Claim Tag Set</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CLAIMCLR</name>
          <addressOffset>0x2FA4</addressOffset>
          <size>32</size>
          <description>Claim Tag Clear</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CLAIMCLR</name>
              <description>[31:0] Claim Tag Clear</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_LAR</name>
          <addressOffset>0x2FB0</addressOffset>
          <size>32</size>
          <description>Lock status</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_LAR</name>
              <description>[31:0] Lock status</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_LSR</name>
          <addressOffset>0x2FB4</addressOffset>
          <size>32</size>
          <description>Lock Access</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_LSR</name>
              <description>[31:0] Lock Access</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_AUTHSTATUS</name>
          <addressOffset>0x2FB8</addressOffset>
          <size>32</size>
          <description>Authentication status</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_AUTHSTATUS</name>
              <description>[31:0] Authentication status</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_DEVID</name>
          <addressOffset>0x2FC8</addressOffset>
          <size>32</size>
          <description>Device ID</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_DEVID</name>
              <description>[31:0] Device ID</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_DEVTYPE</name>
          <addressOffset>0x2FCC</addressOffset>
          <size>32</size>
          <description>Device type identifier</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_DEVTYPE</name>
              <description>[31:0] Device type identifier</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR4</name>
          <addressOffset>0x2FD0</addressOffset>
          <size>32</size>
          <description>Peripheral ID4</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR4</name>
              <description>[31:0] Peripheral ID4</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR5</name>
          <addressOffset>0x2FD4</addressOffset>
          <size>32</size>
          <description>Peripheral ID5</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR5</name>
              <description>[31:0] Peripheral ID5</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR6</name>
          <addressOffset>0x2FD8</addressOffset>
          <size>32</size>
          <description>Peripheral ID6</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR6</name>
              <description>[31:0] Peripheral ID6</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR7</name>
          <addressOffset>0x2FDC</addressOffset>
          <size>32</size>
          <description>Peripheral ID7</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR7</name>
              <description>[31:0] Peripheral ID7</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR0</name>
          <addressOffset>0x2FE0</addressOffset>
          <size>32</size>
          <description>Peripheral ID0</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR0</name>
              <description>[31:0] Peripheral ID0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR1</name>
          <addressOffset>0x2FE4</addressOffset>
          <size>32</size>
          <description>Peripheral ID1</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR1</name>
              <description>[31:0] Peripheral ID1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR2</name>
          <addressOffset>0x2FE8</addressOffset>
          <size>32</size>
          <description>Peripheral ID2</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR2</name>
              <description>[31:0] Peripheral ID2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_PIDR3</name>
          <addressOffset>0x2FEC</addressOffset>
          <size>32</size>
          <description>Peripheral ID3</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_PIDR3</name>
              <description>[31:0] Peripheral ID3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CIDR0</name>
          <addressOffset>0x2FF0</addressOffset>
          <size>32</size>
          <description>Component ID0</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CIDR0</name>
              <description>[31:0] Component ID0</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CIDR1</name>
          <addressOffset>0x2FF4</addressOffset>
          <size>32</size>
          <description>Component ID1</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CIDR1</name>
              <description>[31:0] Component ID1</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CIDR2</name>
          <addressOffset>0x2FF8</addressOffset>
          <size>32</size>
          <description>Component ID2</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CIDR2</name>
              <description>[31:0] Component ID2</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>ONEMCU_TPIU_CIDR3</name>
          <addressOffset>0x2FFC</addressOffset>
          <size>32</size>
          <description>Component ID3</description>
          <fields>
            <field>
              <name>ONEMCU_TPIU_CIDR3</name>
              <description>[31:0] Component ID3</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_CONTROL</name>
          <addressOffset>0x10000</addressOffset>
          <size>32</size>
          <description>http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdjefbi.html http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdefejc.html</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_CONTROL</name>
              <description>[31:0] http://infocenter.arm.com/help/topic/com.arm.doc.ddi0480e/CHDGDIHE.html http://infocenter.arm.com/help/topic/com.arm.doc.ddi0480e/CHDHBDIA.html</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INTACK</name>
          <addressOffset>0x10010</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INTACK</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_APPSET</name>
          <addressOffset>0x10014</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_APPSET</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_APPSET</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_APPCLEAR</name>
          <addressOffset>0x10018</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_APPCLEAR</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_APPCLEAR</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_APPPULSE</name>
          <addressOffset>0x1001C</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_APPPULSE</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_APPPULSE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN0</name>
          <addressOffset>0x10020</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN0</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN1</name>
          <addressOffset>0x10024</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN1</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN2</name>
          <addressOffset>0x10028</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN2</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN3</name>
          <addressOffset>0x1002C</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN3</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN4</name>
          <addressOffset>0x10030</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN4</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN5</name>
          <addressOffset>0x10034</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN5</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN6</name>
          <addressOffset>0x10038</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN6</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_INEN7</name>
          <addressOffset>0x1003C</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_INEN7</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_INEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN0</name>
          <addressOffset>0x100A0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN0</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN1</name>
          <addressOffset>0x100A4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN1</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN2</name>
          <addressOffset>0x100A8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN2</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN3</name>
          <addressOffset>0x100AC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN3</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN4</name>
          <addressOffset>0x100B0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN4</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN5</name>
          <addressOffset>0x100B4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN5</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN6</name>
          <addressOffset>0x100B8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN6</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_OUTEN7</name>
          <addressOffset>0x100BC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_OUTEN7</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_OUTEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_TRIGINSTATUS</name>
          <addressOffset>0x10130</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_TRIGINSTATUS</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_TRIGINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_TRIGOUTSTATUS</name>
          <addressOffset>0x10134</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_TRIGOUTSTATUS</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_TRIGOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_CHINSTATUS</name>
          <addressOffset>0x10138</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_CHINSTATUS</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_CHINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_CHOUTSTATUS</name>
          <addressOffset>0x1013C</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_CHOUTSTATUS</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_CHOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_GATE</name>
          <addressOffset>0x10140</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_GATE</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_GATE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ASICCTL</name>
          <addressOffset>0x10144</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ASICCTL</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ASICCTL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITCHINACK</name>
          <addressOffset>0x10EDC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITCHINACK</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITCHINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITTRIGINACK</name>
          <addressOffset>0x10EE0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITTRIGINACK</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITTRIGINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITCHOUT</name>
          <addressOffset>0x10EE4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITCHOUT</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITCHOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITTRIGOUT</name>
          <addressOffset>0x10EE8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITTRIGOUT</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITTRIGOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITCHOUTACK</name>
          <addressOffset>0x10EEC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITCHOUTACK</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITCHOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITTRIGOUTACK</name>
          <addressOffset>0x10EF0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITTRIGOUTACK</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITTRIGOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITCHIN</name>
          <addressOffset>0x10EF4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITCHIN</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITCHIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITTRIGIN</name>
          <addressOffset>0x10EF8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITTRIGIN</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITTRIGIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_ITCTRL</name>
          <addressOffset>0x10F00</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_ITCTRL</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_ITCTRL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Claim_Tag_Set</name>
          <addressOffset>0x10FA0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Claim_Tag_Set</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Claim_Tag_Set</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Claim_Tag_Clear</name>
          <addressOffset>0x10FA4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Claim_Tag_Clear</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Claim_Tag_Clear</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Lock_Access_Register</name>
          <addressOffset>0x10FB0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Lock_Access_Register</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Lock_Access_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Lock_Status_Register</name>
          <addressOffset>0x10FB4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Lock_Status_Register</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Lock_Status_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Authentication_Status</name>
          <addressOffset>0x10FB8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Authentication_Status</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Authentication_Status</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Device_ID</name>
          <addressOffset>0x10FC8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Device_ID</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Device_ID</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Device_Type_Identifier</name>
          <addressOffset>0x10FCC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Device_Type_Identifier</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Device_Type_Identifier</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID4</name>
          <addressOffset>0x10FD0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID4</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID5</name>
          <addressOffset>0x10FD4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID5</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID6</name>
          <addressOffset>0x10FD8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID6</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID7</name>
          <addressOffset>0x10FDC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID7</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID0</name>
          <addressOffset>0x10FE0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID0</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID1</name>
          <addressOffset>0x10FE4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID1</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID2</name>
          <addressOffset>0x10FE8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID2</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_PeripheralID3</name>
          <addressOffset>0x10FEC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_PeripheralID3</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_PeripheralID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Component_ID0</name>
          <addressOffset>0x10FF0</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Component_ID0</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Component_ID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Component_ID1</name>
          <addressOffset>0x10FF4</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Component_ID1</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Component_ID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Component_ID2</name>
          <addressOffset>0x10FF8</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Component_ID2</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Component_ID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>APP_CM4_CTI_Component_ID3</name>
          <addressOffset>0x10FFC</addressOffset>
          <size>32</size>
          <description>APP_CM4_CTI_Component_ID3</description>
          <fields>
            <field>
              <name>APP_CM4_CTI_Component_ID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_CONTROL</name>
          <addressOffset>0x11000</addressOffset>
          <size>32</size>
          <description>http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdjefbi.html http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/Chdefejc.html</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_CONTROL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INTACK</name>
          <addressOffset>0x11010</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INTACK</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_APPSET</name>
          <addressOffset>0x11014</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_APPSET</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_APPSET</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_APPCLEAR</name>
          <addressOffset>0x11018</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_APPCLEAR</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_APPCLEAR</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_APPPULSE</name>
          <addressOffset>0x1101C</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_APPPULSE</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_APPPULSE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN0</name>
          <addressOffset>0x11020</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN0</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN1</name>
          <addressOffset>0x11024</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN1</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN2</name>
          <addressOffset>0x11028</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN2</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN3</name>
          <addressOffset>0x1102C</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN3</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN4</name>
          <addressOffset>0x11030</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN4</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN5</name>
          <addressOffset>0x11034</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN5</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN6</name>
          <addressOffset>0x11038</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN6</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_INEN7</name>
          <addressOffset>0x1103C</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_INEN7</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_INEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN0</name>
          <addressOffset>0x110A0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN0</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN1</name>
          <addressOffset>0x110A4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN1</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN2</name>
          <addressOffset>0x110A8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN2</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN3</name>
          <addressOffset>0x110AC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN3</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN4</name>
          <addressOffset>0x110B0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN4</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN5</name>
          <addressOffset>0x110B4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN5</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN6</name>
          <addressOffset>0x110B8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN6</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_OUTEN7</name>
          <addressOffset>0x110BC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_OUTEN7</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_OUTEN7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_TRIGINSTATUS</name>
          <addressOffset>0x11130</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_TRIGINSTATUS</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_TRIGINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_TRIGOUTSTATUS</name>
          <addressOffset>0x11134</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_TRIGOUTSTATUS</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_TRIGOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_CHINSTATUS</name>
          <addressOffset>0x11138</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_CHINSTATUS</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_CHINSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_CHOUTSTATUS</name>
          <addressOffset>0x1113C</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_CHOUTSTATUS</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_CHOUTSTATUS</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_GATE</name>
          <addressOffset>0x11140</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_GATE</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_GATE</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ASICCTL</name>
          <addressOffset>0x11144</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ASICCTL</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ASICCTL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITCHINACK</name>
          <addressOffset>0x11EDC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITCHINACK</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITCHINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITTRIGINACK</name>
          <addressOffset>0x11EE0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITTRIGINACK</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITTRIGINACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITCHOUT</name>
          <addressOffset>0x11EE4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITCHOUT</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITCHOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITTRIGOUT</name>
          <addressOffset>0x11EE8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITTRIGOUT</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITTRIGOUT</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITCHOUTACK</name>
          <addressOffset>0x11EEC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITCHOUTACK</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITCHOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITTRIGOUTACK</name>
          <addressOffset>0x11EF0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITTRIGOUTACK</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITTRIGOUTACK</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITCHIN</name>
          <addressOffset>0x11EF4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITCHIN</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITCHIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITTRIGIN</name>
          <addressOffset>0x11EF8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITTRIGIN</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITTRIGIN</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_ITCTRL</name>
          <addressOffset>0x11F00</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_ITCTRL</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_ITCTRL</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Claim_Tag_Set</name>
          <addressOffset>0x11FA0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Claim_Tag_Set</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Claim_Tag_Set</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Claim_Tag_Clear</name>
          <addressOffset>0x11FA4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Claim_Tag_Clear</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Claim_Tag_Clear</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Lock_Access_Register</name>
          <addressOffset>0x11FB0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Lock_Access_Register</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Lock_Access_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Lock_Status_Register</name>
          <addressOffset>0x11FB4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Lock_Status_Register</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Lock_Status_Register</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Authentication_Status</name>
          <addressOffset>0x11FB8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Authentication_Status</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Authentication_Status</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Device_ID</name>
          <addressOffset>0x11FC8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Device_ID</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Device_ID</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Device_Type_Identifier</name>
          <addressOffset>0x11FCC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Device_Type_Identifier</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Device_Type_Identifier</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID4</name>
          <addressOffset>0x11FD0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID4</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID4</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID5</name>
          <addressOffset>0x11FD4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID5</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID5</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID6</name>
          <addressOffset>0x11FD8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID6</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID6</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID7</name>
          <addressOffset>0x11FDC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID7</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID7</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID0</name>
          <addressOffset>0x11FE0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID0</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID1</name>
          <addressOffset>0x11FE4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID1</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID2</name>
          <addressOffset>0x11FE8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID2</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_PeripheralID3</name>
          <addressOffset>0x11FEC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_PeripheralID3</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_PeripheralID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Component_ID0</name>
          <addressOffset>0x11FF0</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Component_ID0</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Component_ID0</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Component_ID1</name>
          <addressOffset>0x11FF4</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Component_ID1</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Component_ID1</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Component_ID2</name>
          <addressOffset>0x11FF8</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Component_ID2</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Component_ID2</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>FEC_CM3_CTI_Component_ID3</name>
          <addressOffset>0x11FFC</addressOffset>
          <size>32</size>
          <description>FEC_CM3_CTI_Component_ID3</description>
          <fields>
            <field>
              <name>FEC_CM3_CTI_Component_ID3</name>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APP_CFG_QSPI</name>
      <baseAddress>0x78000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>116</size>
        <usage>registers</usage>
      </addressBlock>
      <description>APP_CFG_QSPI</description>
      <registers>
        <register>
          <name>PID</name>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <description>PID</description>
          <fields>
            <field>
              <name>SCHEME</name>
              <description>[31:30] The scheme of the register used. This indicates the PDR3.5 Method</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[29:28] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>FUNC</name>
              <description>[27:16] The function of the module being used</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>RTL</name>
              <description>[15:11] RTL Release Version The PDR release number of this IP</description>
              <bitWidth>5</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>MAJOR</name>
              <description>[10:8] Major Release Number</description>
              <bitWidth>3</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>CUSTOM</name>
              <description>[7:6] Custom IP</description>
              <bitWidth>2</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>MINOR</name>
              <description>[5:0] Minor Release Number</description>
              <bitWidth>6</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved1</name>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_1</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved2</name>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_2</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved3</name>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_3</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SYSCONFIG</name>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <description>SYSCONFIG</description>
          <fields>
            <field>
              <name>Reserved3</name>
              <description>[31:6] Always read as 0</description>
              <bitWidth>26</bitWidth>
              <bitOffset>6</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[5:4] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>4</bitOffset>
            </field>
            <field>
              <name>IDLEMODE</name>
              <description>[3:2] Configuration of the local target state management mode.  By definition, target can handle read/write transaction as long as it is out of IDLE state 0x0 : Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, i.e. regardless of the IP module's internal requirements. Backup mode, for debug only 0x1 : No-idle mode: local target never enters idle state. Backup mode, for debug only 0x2 : Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module shall not generate (IRQ- or DMA-request-related) wakeup events 0x3 : Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state. Mode is only relevant if the appropriate IP module "swakeup" output(s) is (are) implemented</description>
              <bitWidth>2</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[1:0] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved4</name>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_4</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved5</name>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_5</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved6</name>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_6</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTR_STATUS_RAW_SET</name>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <description>INTR Interrupt Status Raw/Set Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:2] Always read as 0</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WIRQ_RAW</name>
              <description>[1:1] Word Interrupt Status  Read indicates raw status 0 = inactive 1 = active Writing 1 will set status Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>FIRQ_RAW</name>
              <description>[0:0] Frame Interrupt Status Read indicates raw status 0 = inactive 1 = active Writing 1 will set status Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTR_STATUS_ENABLED_CLEAR</name>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <description>INTR Interrupt Status Enabled/Clear Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:2] Always read as 0</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WIRQ_ENA</name>
              <description>[1:1] Word  Interrupt Enabled Status Read indicates enabled status 0 = inactive 1 = active Writing 1 will clear interrupt Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>FIRQ_ENA</name>
              <description>[0:0] Frame Interrupt Enabled Status Read indicates enabled status 0 = inactive 1 = active Writing 1 will clear interrupt Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTR_ENABLE_SET</name>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <description>INTR Interrupt Enable/Set Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:2] Always read as 0</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WIRQ_ENA_SET</name>
              <description>[1:1] Word Interrupt  Enable/Set Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will set interrupt enabled Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>FIRQ_ENA_SET</name>
              <description>[0:0] Frame Interrupt Enable/Set Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will set interrupt enabled Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTR_ENABLE_CLEAR</name>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <description>INTR Interrupt Enable/Clear Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:2] Always read as 0</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WIRQ_ENA_CLR</name>
              <description>[1:1] Word Interrupt  Enable/Clear Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will clear interrupt enabled Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>FIRQ_ENA_CLR</name>
              <description>[0:0] Frame Interrupt  Enable/Clear Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will clear interrupt enabled Writing 0 has no effect</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>INTC_EOI</name>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <description>EOI Register</description>
          <fields>
            <field>
              <name>EOI_VECTOR</name>
              <description>[31:0] Number associated with the ipgenericirq for intr output.  There are 1 interrupt outputs Write 0x0 : Write to intr IP Generic Any other write value is ignored.</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved7</name>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_7</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved8</name>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_8</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>MSS_QSPI_Reserved9</name>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <description>Reserved</description>
          <fields>
            <field>
              <name>Reserved_9</name>
              <description>[31:0] Reserved</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_CLOCK_CNTRL</name>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <description>SPI Clock Control Register (SPICC)</description>
          <fields>
            <field>
              <name>CLKEN</name>
              <description>[31:31] Clock Enable.  0- Data clock is turned off 1- Data clock is enabled</description>
              <bitWidth>1</bitWidth>
              <bitOffset>31</bitOffset>
            </field>
            <field>
              <name>Reserved</name>
              <description>[30:16] Always read as 0</description>
              <bitWidth>15</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>DCLK_DIV</name>
              <description>[15:0] Serial data clock divide by ratio</description>
              <bitWidth>16</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_DC</name>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <description>SPI Data Control Register (SPIDC)</description>
          <fields>
            <field>
              <name>Reserved4</name>
              <description>[31:29] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>DD3</name>
              <description>[28:27] Data delay for chip select 3 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active</description>
              <bitWidth>2</bitWidth>
              <bitOffset>27</bitOffset>
            </field>
            <field>
              <name>CKPH3</name>
              <description>[26:26] Clock phase for chip select 3  If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge</description>
              <bitWidth>1</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>CSP3</name>
              <description>[25:25] Chip select polarity for chip select 3 0- Active low 1- Active high</description>
              <bitWidth>1</bitWidth>
              <bitOffset>25</bitOffset>
            </field>
            <field>
              <name>CKP3</name>
              <description>[24:24] Clock polarity for chip select 3 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>Reserved3</name>
              <description>[23:21] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>21</bitOffset>
            </field>
            <field>
              <name>DD2</name>
              <description>[20:19] Data delay for chip select 2 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active</description>
              <bitWidth>2</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CKPH2</name>
              <description>[18:18] Clock phase for chip select 2.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge</description>
              <bitWidth>1</bitWidth>
              <bitOffset>18</bitOffset>
            </field>
            <field>
              <name>CSP2</name>
              <description>[17:17] Chip select polarity for chip select 2 0- Active low 1- Active high</description>
              <bitWidth>1</bitWidth>
              <bitOffset>17</bitOffset>
            </field>
            <field>
              <name>CKP2</name>
              <description>[16:16] Clock polarity for chip select 2 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[15:13] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>13</bitOffset>
            </field>
            <field>
              <name>DD1</name>
              <description>[12:11] Data delay for chip select 1 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active</description>
              <bitWidth>2</bitWidth>
              <bitOffset>11</bitOffset>
            </field>
            <field>
              <name>CKPH1</name>
              <description>[10:10] Clock phase for chip select 1.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge</description>
              <bitWidth>1</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>CSP1</name>
              <description>[9:9] Chip select polarity for chip select 1 0- Active low 1- Active high</description>
              <bitWidth>1</bitWidth>
              <bitOffset>9</bitOffset>
            </field>
            <field>
              <name>CKP1</name>
              <description>[8:8] Clock polarity for chip select 1 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[7:5] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>5</bitOffset>
            </field>
            <field>
              <name>DD0</name>
              <description>[4:3] Data delay for chip select 0 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active</description>
              <bitWidth>2</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>CKPH0</name>
              <description>[2:2] Clock phase for chip select 0.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>CSP0</name>
              <description>[1:1] Chip select polarity for chip select 0 0- Active low 1- Active high</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>CKP0</name>
              <description>[0:0] Clock polarity for chip select 0 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_CMD</name>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <description>SPI Command Register (SPICR)</description>
          <fields>
            <field>
              <name>Reserved3</name>
              <description>[31:30] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>30</bitOffset>
            </field>
            <field>
              <name>CSNUM</name>
              <description>[29:28] Device select.  Sets the active chip select for the transfer 00-  Chip Select 0 active 01-  Chip Select 1 active 10-  Chip Select 2 active 11-  Chip Select 3 active</description>
              <bitWidth>2</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>Reserved2</name>
              <description>[27:26] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>26</bitOffset>
            </field>
            <field>
              <name>WLEN</name>
              <description>[25:19] Word length.  Sets the size of the individual transfers from 1 ΓÇô 128 bits 0- 1 bit 1- 2 bits ΓÇª 127 ΓÇô 128 bits</description>
              <bitWidth>7</bitWidth>
              <bitOffset>19</bitOffset>
            </field>
            <field>
              <name>CMD</name>
              <description>[18:16] Transfer command 000-  Reserved 001-  4 pin Read Single  010-  4 pin Write  Single 011-  4 pin Read Dual 100 ΓÇô Reserved 101 ΓÇô 3 pin Read Single 110 ΓÇô 3 pin Write Single  111 ΓÇô 6 pin Read Quad</description>
              <bitWidth>3</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>FIRQ</name>
              <description>[15:15] Frame count interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>15</bitOffset>
            </field>
            <field>
              <name>WIRQ</name>
              <description>[14:14] Word count interrupt enable</description>
              <bitWidth>1</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[13:12] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>FLEN</name>
              <description>[11:0] Frame Length 0- 1 word 1- 2 words ΓÇª 4095 ΓÇô 4096 words</description>
              <bitWidth>12</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_STATUS</name>
          <addressOffset>0x4C</addressOffset>
          <size>32</size>
          <description>SPI Status Register (SPISR)</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:28] Always read as 0</description>
              <bitWidth>4</bitWidth>
              <bitOffset>28</bitOffset>
            </field>
            <field>
              <name>WDCNT</name>
              <description>[27:16] Word count.  This field will reflect the 1-4096 words transferred</description>
              <bitWidth>12</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:3] Always read as 0</description>
              <bitWidth>13</bitWidth>
              <bitOffset>3</bitOffset>
            </field>
            <field>
              <name>FC</name>
              <description>[2:2] Frame complete.  This bit is set after all of the requested words have been transmitted. 0- Transfer is not complete 1- Transfer is complete This bit is reset when the SPI Status Register is read</description>
              <bitWidth>1</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>WC</name>
              <description>[1:1] Word complete.  This bit is set after each word transfer is completed. 0- Word transfer is not complete 1- Word transfer is complete This bit is reset when the SPI Status Register is read</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>BUSY</name>
              <description>[0:0] Busy bit.  Active transfer in progress.  This bit is only set during an active word transfer.  Between words, the bit will clear to signal that it is ok to read/write the data registers. 0- Idle 1- Busy</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_DATA</name>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <description>SPI Data Register (SPIDR)</description>
          <fields>
            <field>
              <name>DATA</name>
              <description>[31:0] Data register for read and write operations</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_SETUP0</name>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <description>Memory Mapped SPI Setup0 Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:29] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NUM_D_BITS</name>
              <description>[28:24] Number of dummy bits to use if NUM_D_BYTES = 0</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>WCMD</name>
              <description>[23:16] Write Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:14] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>READ_TYPE</name>
              <description>[13:12] Determines if the read command is a single, dual or quad read mode command 00 ΓÇô Normal read (all data input on spi_din) 01 ΓÇô Dual read (odd bytes input on spi_din; even on spi_dout) 10 ΓÇô Normal read (all data input on spi_din) 11 ΓÇô Quad read (uses spi_qdin0/1)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NUM_D_BYTES</name>
              <description>[11:10] Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>NUM_A_BYTES</name>
              <description>[9:8] Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RCMD</name>
              <description>[7:0] Read Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_SETUP1</name>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <description>Memory Mapped SPI Setup1 Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:29] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NUM_D_BITS</name>
              <description>[28:24] Number of dummy bits to use if NUM_D_BYTES = 0</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>WCMD</name>
              <description>[23:16] Write Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:14] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>READ_TYPE</name>
              <description>[13:12] Determines if the read command is a single, dual or quad read mode command 00 ΓÇô Normal read (all data input on spi_din) 01 ΓÇô Dual read (odd bytes input on spi_din; even on spi_dout) 10 ΓÇô Normal read (all data input on spi_din) 11 ΓÇô Quad read (uses spi_qdin0/1)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NUM_D_BYTES</name>
              <description>[11:10] Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>NUM_A_BYTES</name>
              <description>[9:8] Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RCMD</name>
              <description>[7:0] Read Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_SETUP2</name>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <description>Memory Mapped SPI Setup2 Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:29] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NUM_D_BITS</name>
              <description>[28:24] Number of dummy bits to use if NUM_D_BYTES = 0</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>WCMD</name>
              <description>[23:16] Write Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:14] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>READ_TYPE</name>
              <description>[13:12] Determines if the read command is a single, dual or quad read mode command 00 ΓÇô Normal read (all data input on spi_din) 01 ΓÇô Dual read (odd bytes input on spi_din; even on spi_dout) 10 ΓÇô Normal read (all data input on spi_din) 11 ΓÇô Quad read (uses spi_qdin0/1)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NUM_D_BYTES</name>
              <description>[11:10] Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>NUM_A_BYTES</name>
              <description>[9:8] Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RCMD</name>
              <description>[7:0] Read Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_SETUP3</name>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <description>Memory Mapped SPI Setup3 Register</description>
          <fields>
            <field>
              <name>Reserved2</name>
              <description>[31:29] Always read as 0</description>
              <bitWidth>3</bitWidth>
              <bitOffset>29</bitOffset>
            </field>
            <field>
              <name>NUM_D_BITS</name>
              <description>[28:24] Number of dummy bits to use if NUM_D_BYTES = 0</description>
              <bitWidth>5</bitWidth>
              <bitOffset>24</bitOffset>
            </field>
            <field>
              <name>WCMD</name>
              <description>[23:16] Write Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>16</bitOffset>
            </field>
            <field>
              <name>Reserved1</name>
              <description>[15:14] Always read as 0</description>
              <bitWidth>2</bitWidth>
              <bitOffset>14</bitOffset>
            </field>
            <field>
              <name>READ_TYPE</name>
              <description>[13:12] Determines if the read command is a single, dual or quad read mode command 00 ΓÇô Normal read (all data input on spi_din) 01 ΓÇô Dual read (odd bytes input on spi_din; even on spi_dout) 10 ΓÇô Normal read (all data input on spi_din) 11 ΓÇô Quad read (uses spi_qdin0/1)</description>
              <bitWidth>2</bitWidth>
              <bitOffset>12</bitOffset>
            </field>
            <field>
              <name>NUM_D_BYTES</name>
              <description>[11:10] Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits</description>
              <bitWidth>2</bitWidth>
              <bitOffset>10</bitOffset>
            </field>
            <field>
              <name>NUM_A_BYTES</name>
              <description>[9:8] Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes</description>
              <bitWidth>2</bitWidth>
              <bitOffset>8</bitOffset>
            </field>
            <field>
              <name>RCMD</name>
              <description>[7:0] Read Command</description>
              <bitWidth>8</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_SWITCH</name>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <description>Memory Mapped SPI Switch Register</description>
          <fields>
            <field>
              <name>Reserved</name>
              <description>[31:2] Always read as 0</description>
              <bitWidth>30</bitWidth>
              <bitOffset>2</bitOffset>
            </field>
            <field>
              <name>MM_INT_EN</name>
              <description>[1:1] Memory Mapped mode interrupt enable. 0 ΓÇô Interrupts are disabled during memory mapped operations 1 ΓÇô Word Count interrupt is enabled for memory mapped operations</description>
              <bitWidth>1</bitWidth>
              <bitOffset>1</bitOffset>
            </field>
            <field>
              <name>MMPT_S</name>
              <description>[0:0] MMPT select.  If 0 (default) config port has is selected to control config of core SPI module.  If 1, Memory Mapped Protocol Translator is selected to control config port of core SPI module.</description>
              <bitWidth>1</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_DATA1</name>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <description>SPI Data Register (SPIDR1)</description>
          <fields>
            <field>
              <name>DATA</name>
              <description>[31:0] Data register for read and write operations</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_DATA2</name>
          <addressOffset>0x6C</addressOffset>
          <size>32</size>
          <description>SPI Data Register (SPIDR2)</description>
          <fields>
            <field>
              <name>DATA</name>
              <description>[31:0] Data register for read and write operations</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
        <register>
          <name>SPI_DATA3</name>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <description>SPI Data Register (SPIDR3)</description>
          <fields>
            <field>
              <name>DATA</name>
              <description>[31:0] Data register for read and write operations</description>
              <bitWidth>32</bitWidth>
              <bitOffset>0</bitOffset>
            </field>
          </fields>
          <resetValue>0</resetValue>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
